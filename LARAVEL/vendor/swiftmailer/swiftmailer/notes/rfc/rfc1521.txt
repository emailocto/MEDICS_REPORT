





Network Working Group                                      N. Borenstein
Request for Comments: 1521                                      Bellcore
Obsoletes: 1341                                                 N. Freed
Category: Standards Track                                       Innosoft
                                                          September 1993


         MIME (Multipurpose Internet Mail Extensions) Part One:
                Mechanisms for Specifying and Describing
                 the Format of Internet Message Bodies

Status of this Memo

   This RFC specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the "Internet
   Official Protocol Standards" for the standardization state and status
   of this protocol.  Distribution of this memo is unlimited.

Abstract

   STD 11, RFC 822 defines a message representation protocol which
   specifies considerable detail about message headers, but which leaves
   the message content, or message body, as flat ASCII text.  This
   document redefines the format of message bodies to allow multi-part
   textual and non-textual message bodies to be represented and
   exchanged without loss of information.  This is based on earlier work
   documented in RFC 934 and STD 11, RFC 1049, but extends and revises
   that work.  Because RFC 822 said so little about message bodies, this
   document is largely orthogonal to (rather than a revision of) RFC
   822.

   In particular, this document is designed to provide facilities to
   include multiple objects in a single message, to represent body text
   in character sets other than US-ASCII, to represent formatted multi-
   font text messages, to represent non-textual material such as images
   and audio fragments, and generally to facilitate later extensions
   defining new types of Internet mail for use by cooperating mail
   agents.

   This document does NOT extend Internet mail header fields to permit
   anything other than US-ASCII text data.  Such extensions are the
   subject of a companion document [RFC-1522].

   This document is a revision of RFC 1341.  Significant differences
   from RFC 1341 are summarized in Appendix H.





Borenstein & Freed                                              [Page 1]

RFC 1521                          MIME                    September 1993


Table of Contents

   1.     Introduction.......................................  3
   2.     Notations, Conventions, and Generic BNF Grammar....  6
   3.     The MIME-Version Header Field......................  7
   4.     The Content-Type Header Field......................  9
   5.     The Content-Transfer-Encoding Header Field......... 13
   5.1.   Quoted-Printable Content-Transfer-Encoding......... 18
   5.2.   Base64 Content-Transfer-Encoding................... 21
   6.     Additional Content-Header Fields................... 23
   6.1.   Optional Content-ID Header Field................... 23
   6.2.   Optional Content-Description Header Field.......... 24
   7.     The Predefined Content-Type Values................. 24
   7.1.   The Text Content-Type.............................. 24
   7.1.1. The charset parameter.............................. 25
   7.1.2. The Text/plain subtype............................. 28
   7.2.   The Multipart Content-Type......................... 28
   7.2.1. Multipart:  The common syntax...................... 29
   7.2.2. The Multipart/mixed (primary) subtype.............. 34
   7.2.3. The Multipart/alternative subtype.................. 34
   7.2.4. The Multipart/digest subtype....................... 36
   7.2.5. The Multipart/parallel subtype..................... 37
   7.2.6. Other Multipart subtypes........................... 37
   7.3.   The Message Content-Type........................... 38
   7.3.1. The Message/rfc822 (primary) subtype............... 38
   7.3.2. The Message/Partial subtype........................ 39
   7.3.3. The Message/External-Body subtype.................. 42
   7.3.3.1.  The "ftp" and "tftp" access-types............... 44
   7.3.3.2.  The "anon-ftp" access-type...................... 45
   7.3.3.3.  The "local-file" and "afs" access-types......... 45
   7.3.3.4.  The "mail-server" access-type................... 45
   7.3.3.5.  Examples and Further Explanations............... 46
   7.4.   The Application Content-Type....................... 49
   7.4.1. The Application/Octet-Stream (primary) subtype..... 50
   7.4.2. The Application/PostScript subtype................. 50
   7.4.3. Other Application subtypes......................... 53
   7.5.   The Image Content-Type............................. 53
   7.6.   The Audio Content-Type............................. 54
   7.7.   The Video Content-Type............................. 54
   7.8.   Experimental Content-Type Values................... 54
   8.     Summary............................................ 56
   9.     Security Considerations............................ 56
   10.    Authors' Addresses................................. 57
   11.    Acknowledgements................................... 58
   Appendix A -- Minimal MIME-Conformance.................... 60
   Appendix B -- General Guidelines For Sending Email Data... 63
   Appendix C -- A Complex Multipart Example................. 66
   Appendix D -- Collected Grammar........................... 68



Borenstein & Freed                                              [Page 2]

RFC 1521                          MIME                    September 1993


   Appendix E -- IANA Registration Procedures................ 72
   E.1  Registration of New Content-type/subtype Values...... 72
   E.2  Registration of New Access-type Values
        for Message/external-body............................ 73
   Appendix F -- Summary of the Seven Content-types.......... 74
   Appendix G -- Canonical Encoding Model.................... 76
   Appendix H -- Changes from RFC 1341....................... 78
   References................................................ 80

1.    Introduction

   Since its publication in 1982, STD 11, RFC 822 [RFC-822] has defined
   the standard format of textual mail messages on the Internet.  Its
   success has been such that the RFC 822 format has been adopted,
   wholly or partially, well beyond the confines of the Internet and the
   Internet SMTP transport defined by STD 10, RFC 821 [RFC-821].  As the
   format has seen wider use, a number of limitations have proven
   increasingly restrictive for the user community.

   RFC 822 was intended to specify a format for text messages.  As such,
   non-text messages, such as multimedia messages that might include
   audio or images, are simply not mentioned.  Even in the case of text,
   however, RFC 822 is inadequate for the needs of mail users whose
   languages require the use of character sets richer than US ASCII
   [US-ASCII]. Since RFC 822 does not specify mechanisms for mail
   containing audio, video, Asian language text, or even text in most
   European languages, additional specifications are needed.

   One of the notable limitations of RFC 821/822 based mail systems is
   the fact that they limit the contents of electronic mail messages to
   relatively short lines of seven-bit ASCII.  This forces users to
   convert any non-textual data that they may wish to send into seven-
   bit bytes representable as printable ASCII characters before invoking
   a local mail UA (User Agent, a program with which human users send
   and receive mail). Examples of such encodings currently used in the
   Internet include pure hexadecimal, uuencode, the 3-in-4 base 64
   scheme specified in RFC 1421, the Andrew Toolkit Representation
   [ATK], and many others.

   The limitations of RFC 822 mail become even more apparent as gateways
   are designed to allow for the exchange of mail messages between RFC
   822 hosts and X.400 hosts. X.400 [X400] specifies mechanisms for the
   inclusion of non-textual body parts within electronic mail messages.
   The current standards for the mapping of X.400 messages to RFC 822
   messages specify either that X.400 non-textual body parts must be
   converted to (not encoded in) an ASCII format, or that they must be
   discarded, notifying the RFC 822 user that discarding has occurred.
   This is clearly undesirable, as information that a user may wish to



Borenstein & Freed                                              [Page 3]

RFC 1521                          MIME                    September 1993


   receive is lost.  Even though a user's UA may not have the capability
   of dealing with the non-textual body part, the user might have some
   mechanism external to the UA that can extract useful information from
   the body part.  Moreover, it does not allow for the fact that the
   message may eventually be gatewayed back into an X.400 message
   handling system (i.e., the X.400 message is "tunneled" through
   Internet mail), where the non-textual information would definitely
   become useful again.

   This document describes several mechanisms that combine to solve most
   of these problems without introducing any serious incompatibilities
   with the existing world of RFC 822 mail.  In particular, it
   describes:

   1. A MIME-Version header field, which uses a version number to
       declare a message to be conformant with this specification and
       allows mail processing agents to distinguish between such
       messages and those generated by older or non-conformant software,
       which is presumed to lack such a field.

   2. A Content-Type header field, generalized from RFC 1049 [RFC-1049],
       which can be used to specify the type and subtype of data in the
       body of a message and to fully specify the native representation
       (encoding) of such data.

       2.a. A "text" Content-Type value, which can be used to represent
            textual information in a number of character sets and
            formatted text description languages in a standardized
            manner.

       2.b. A "multipart" Content-Type value, which can be used to
            combine several body parts, possibly of differing types of
            data, into a single message.

       2.c. An "application" Content-Type value, which can be used to
            transmit application data or binary data, and hence, among
            other uses, to implement an electronic mail file transfer
            service.

       2.d. A "message" Content-Type value, for encapsulating another
            mail message.

       2.e An "image" Content-Type value, for transmitting still image
            (picture) data.

       2.f. An "audio" Content-Type value, for transmitting audio or
            voice data.




Borenstein & Freed                                              [Page 4]

RFC 1521                          MIME                    September 1993


       2.g. A "video" Content-Type value, for transmitting video or
            moving image data, possibly with audio as part of the
            composite video data format.

   3. A Content-Transfer-Encoding header field, which can be used to
       specify an auxiliary encoding that was applied to the data in
       order to allow it to pass through mail transport mechanisms which
       may have data or character set limitations.

   4. Two additional header fields that can be used to further describe
       the data in a message body, the Content-ID and Content-
       Description header fields.

   MIME has been carefully designed as an extensible mechanism, and it
   is expected that the set of content-type/subtype pairs and their
   associated parameters will grow significantly with time.  Several
   other MIME fields, notably including character set names, are likely
   to have new values defined over time.  In order to ensure that the
   set of such values is developed in an orderly, well-specified, and
   public manner, MIME defines a registration process which uses the
   Internet Assigned Numbers Authority (IANA) as a central registry for
   such values.  Appendix E provides details about how IANA registration
   is accomplished.

   Finally, to specify and promote interoperability, Appendix A of this
   document provides a basic applicability statement for a subset of the
   above mechanisms that defines a minimal level of "conformance" with
   this document.

      HISTORICAL NOTE: Several of the mechanisms described in this
      document may seem somewhat strange or even baroque at first
      reading.  It is important to note that compatibility with existing
      standards AND robustness across existing practice were two of the
      highest priorities of the working group that developed this
      document.  In particular, compatibility was always favored over
      elegance.

   MIME was first defined and published as RFCs 1341 and 1342 [RFC-1341]
   [RFC-1342].  This document is a relatively minor updating of RFC
   1341, and is intended to supersede it.  The differences between this
   document and RFC 1341 are summarized in Appendix H.  Please refer to
   the current edition of the "IAB Official Protocol Standards" for the
   standardization state and status of this protocol.  Several other RFC
   documents will be of interest to the MIME implementor, in particular
   [RFC 1343], [RFC-1344], and [RFC-1345].






Borenstein & Freed                                              [Page 5]

RFC 1521                          MIME                    September 1993


2.    Notations, Conventions, and Generic BNF Grammar

   This document is being published in two versions, one as plain ASCII
   text and one as PostScript (PostScript is a trademark of Adobe
   Systems Incorporated.).  While the text version is the official
   specification, some will find the PostScript version easier to read.
   The textual contents are identical.  An Andrew-format copy of this
   document is also available from the first author (Borenstein).

   Although the mechanisms specified in this document are all described
   in prose, most are also described formally in the modified BNF
   notation of RFC 822.  Implementors will need to be familiar with this
   notation in order to understand this specification, and are referred
   to RFC 822 for a complete explanation of the modified BNF notation.

   Some of the modified BNF in this document makes reference to
   syntactic entities that are defined in RFC 822 and not in this
   document.  A complete formal grammar, then, is obtained by combining
   the collected grammar appendix of this document with that of RFC 822
   plus the modifications to RFC 822 defined in RFC 1123, which
   specifically changes the syntax for `return', `date' and `mailbox'.

   The term CRLF, in this document, refers to the sequence of the two
   ASCII characters CR (13) and LF (10) which, taken together, in this
   order, denote a line break in RFC 822 mail.

   The term "character set" is used in this document to refer to a
   method used with one or more tables to convert encoded text to a
   series of octets.  This definition is intended to allow various kinds
   of text encodings, from simple single-table mappings such as ASCII to
   complex table switching methods such as those that use ISO 2022's
   techniques.  However, a MIME character set name must fully specify
   the mapping to be performed.

   The term "message", when not further qualified, means either the
   (complete or "top-level") message being transferred on a network, or
   a message encapsulated in a body of type "message".

   The term "body part", in this document, means one of the parts of the
   body of a multipart entity. A body part has a header and a body, so
   it makes sense to speak about the body of a body part.

   The term "entity", in this document, means either a message or a body
   part.  All kinds of entities share the property that they have a
   header and a body.

   The term "body", when not further qualified, means the body of an
   entity, that is the body of either a message or of a body part.



Borenstein & Freed                                              [Page 6]

RFC 1521                          MIME                    September 1993


      NOTE: The previous four definitions are clearly circular.  This is
      unavoidable, since the overall structure of a MIME message is
      indeed recursive.

   In this document, all numeric and octet values are given in decimal
   notation.

   It must be noted that Content-Type values, subtypes, and parameter
   names as defined in this document are case-insensitive.  However,
   parameter values are case-sensitive unless otherwise specified for
   the specific parameter.

      FORMATTING NOTE: This document has been carefully formatted for
      ease of reading.  The PostScript version of this document, in
      particular, places notes like this one, which may be skipped by
      the reader, in a smaller, italicized, font, and indents it as
      well.  In the text version, only the indentation is preserved, so
      if you are reading the text version of this you might consider
      using the PostScript version instead. However, all such notes will
      be indented and preceded by "NOTE:" or some similar introduction,
      even in the text version.

      The primary purpose of these non-essential notes is to convey
      information about the rationale of this document, or to place this
      document in the proper historical or evolutionary context.  Such
      information may be skipped by those who are focused entirely on
      building a conformant implementation, but may be of use to those
      who wish to understand why this document is written as it is.

      For ease of recognition, all BNF definitions have been placed in a
      fixed-width font in the PostScript version of this document.

3.    The MIME-Version Header Field

   Since RFC 822 was published in 1982, there has really been only one
   format standard for Internet messages, and there has been little
   perceived need to declare the format standard in use.  This document
   is an independent document that complements RFC 822. Although the
   extensions in this document have been defined in such a way as to be
   compatible with RFC 822, there are still circumstances in which it
   might be desirable for a mail-processing agent to know whether a
   message was composed with the new standard in mind.

   Therefore, this document defines a new header field, "MIME-Version",
   which is to be used to declare the version of the Internet message
   body format standard in use.

   Messages composed in accordance with this document MUST include such



Borenstein & Freed                                              [Page 7]

RFC 1521                          MIME                    September 1993


   a header field, with the following verbatim text:

   MIME-Version: 1.0

   The presence of this header field is an assertion that the message
   has been composed in compliance with this document.

   Since it is possible that a future document might extend the message
   format standard again, a formal BNF is given for the content of the
   MIME-Version field:

   version := "MIME-Version" ":" 1*DIGIT "." 1*DIGIT

   Thus, future format specifiers, which might replace or extend "1.0",
   are constrained to be two integer fields, separated by a period.  If
   a message is received with a MIME-version value other than "1.0", it
   cannot be assumed to conform with this specification.

   Note that the MIME-Version header field is required at the top level
   of a message. It is not required for each body part of a multipart
   entity.  It is required for the embedded headers of a body of type
   "message" if and only if the embedded message is itself claimed to be
   MIME-conformant.

   It is not possible to fully specify how a mail reader that conforms
   with MIME as defined in this document should treat a message that
   might arrive in the future with some value of MIME-Version other than
   "1.0".  However, conformant software is encouraged to check the
   version number and at least warn the user if an unrecognized MIME-
   version is encountered.

   It is also worth noting that version control for specific content-
   types is not accomplished using the MIME-Version mechanism.  In
   particular, some formats (such as application/postscript) have
   version numbering conventions that are internal to the document
   format.  Where such conventions exist, MIME does nothing to supersede
   them.  Where no such conventions exist, a MIME type might use a
   "version" parameter in the content-type field if necessary.

   NOTE TO IMPLEMENTORS: All header fields defined in this document,
   including MIME-Version, Content-type, etc., are subject to the
   general syntactic rules for header fields specified in RFC 822.  In
   particular, all can include comments, which means that the following
   two MIME-Version fields are equivalent:

                    MIME-Version: 1.0
                    MIME-Version: 1.0 (Generated by GBD-killer 3.7)




Borenstein & Freed                                              [Page 8]

RFC 1521                          MIME                    September 1993


4.    The Content-Type Header Field

   The purpose of the Content-Type field is to describe the data
   contained in the body fully enough that the receiving user agent can
   pick an appropriate agent or mechanism to present the data to the
   user, or otherwise deal with the data in an appropriate manner.

   HISTORICAL NOTE: The Content-Type header field was first defined in
   RFC 1049.  RFC 1049 Content-types used a simpler and less powerful
   syntax, but one that is largely compatible with the mechanism given
   here.

   The Content-Type header field is used to specify the nature of the
   data in the body of an entity, by giving type and subtype
   identifiers, and by providing auxiliary information that may be
   required for certain types.  After the type and subtype names, the
   remainder of the header field is simply a set of parameters,
   specified in an attribute/value notation.  The set of meaningful
   parameters differs for the different types.  In particular, there are
   NO globally-meaningful parameters that apply to all content-types.
   Global mechanisms are best addressed, in the MIME model, by the
   definition of additional Content-* header fields.  The ordering of
   parameters is not significant.  Among the defined parameters is a
   "charset" parameter by which the character set used in the body may
   be declared. Comments are allowed in accordance with RFC 822 rules
   for structured header fields.

   In general, the top-level Content-Type is used to declare the general
   type of data, while the subtype specifies a specific format for that
   type of data.  Thus, a Content-Type of "image/xyz" is enough to tell
   a user agent that the data is an image, even if the user agent has no
   knowledge of the specific image format "xyz".  Such information can
   be used, for example, to decide whether or not to show a user the raw
   data from an unrecognized subtype -- such an action might be
   reasonable for unrecognized subtypes of text, but not for
   unrecognized subtypes of image or audio.  For this reason, registered
   subtypes of audio, image, text, and video, should not contain
   embedded information that is really of a different type.  Such
   compound types should be represented using the "multipart" or
   "application" types.

   Parameters are modifiers of the content-subtype, and do not
   fundamentally affect the requirements of the host system.  Although
   most parameters make sense only with certain content-types, others
   are "global" in the sense that they might apply to any subtype.  For
   example, the "boundary" parameter makes sense only for the
   "multipart" content-type, but the "charset" parameter might make
   sense with several content-types.



Borenstein & Freed                                              [Page 9]

RFC 1521                          MIME                    September 1993


   An initial set of seven Content-Types is defined by this document.
   This set of top-level names is intended to be substantially complete.
   It is expected that additions to the larger set of supported types
   can generally be accomplished by the creation of new subtypes of
   these initial types.  In the future, more top-level types may be
   defined only by an extension to this standard.  If another primary
   type is to be used for any reason, it must be given a name starting
   with "X-" to indicate its non-standard status and to avoid a
   potential conflict with a future official name.

   In the Augmented BNF notation of RFC 822, a Content-Type header field
   value is defined as follows:

     content  :=   "Content-Type"  ":"  type  "/"  subtype  *(";"
     parameter)
               ; case-insensitive matching of type and subtype

     type :=          "application"     / "audio"
               / "image"           / "message"
               / "multipart"  / "text"
               / "video"           / extension-token
               ; All values case-insensitive

     extension-token :=  x-token / iana-token

     iana-token := <a publicly-defined extension token,
               registered with IANA, as specified in
               appendix E>

     x-token := <The two characters "X-" or "x-" followed, with
                 no intervening white space, by any token>

     subtype := token ; case-insensitive

     parameter := attribute "=" value

     attribute := token   ; case-insensitive

     value := token / quoted-string

     token  :=  1*<any (ASCII) CHAR except SPACE, CTLs,
                   or tspecials>

     tspecials :=  "(" / ")" / "<" / ">" / "@"
                /  "," / ";" / ":" / "\" / <">
                /  "/" / "[" / "]" / "?" / "="
               ; Must be in quoted-string,
               ; to use within parameter values



Borenstein & Freed                                             [Page 10]

RFC 1521                          MIME                    September 1993


   Note that the definition of "tspecials" is the same as the RFC 822
   definition of "specials" with the addition of the three characters
   "/", "?", and "=", and the removal of ".".

   Note also that a subtype specification is MANDATORY.  There are no
   default subtypes.

   The type, subtype, and parameter names are not case sensitive.  For
   example, TEXT, Text, and TeXt are all equivalent.  Parameter values
   are normally case sensitive, but certain parameters are interpreted
   to be case-insensitive, depending on the intended use.  (For example,
   multipart boundaries are case-sensitive, but the "access-type" for
   message/External-body is not case-sensitive.)

   Beyond this syntax, the only constraint on the definition of subtype
   names is the desire that their uses must not conflict.  That is, it
   would be undesirable to have two different communities using
   "Content-Type: application/foobar" to mean two different things.  The
   process of defining new content-subtypes, then, is not intended to be
   a mechanism for imposing restrictions, but simply a mechanism for
   publicizing the usages. There are, therefore, two acceptable
   mechanisms for defining new Content-Type subtypes:

            1.  Private values (starting with "X-") may be
                defined bilaterally between two cooperating
                agents without outside registration or
                standardization.

            2.  New standard values must be documented,
                registered with, and approved by IANA, as
                described in Appendix E.  Where intended for
                public use, the formats they refer to must
                also be defined by a published specification,
                and possibly offered for standardization.

   The seven standard initial predefined Content-Types are detailed in
   the bulk of this document.  They are:

    text -- textual information.  The primary subtype,
         "plain", indicates plain (unformatted) text.  No
         special software is required to get the full
         meaning of the text, aside from support for the
         indicated character set.  Subtypes are to be used
         for enriched text in forms where application
         software may enhance the appearance of the text,
         but such software must not be required in order to
         get the general idea of the content.  Possible
         subtypes thus include any readable word processor



Borenstein & Freed                                             [Page 11]

RFC 1521                          MIME                    September 1993


         format.  A very simple and portable subtype,
         richtext, was defined in RFC 1341, with a future
         revision expected.

    multipart -- data consisting of multiple parts of
         independent data types.  Four initial subtypes
         are defined, including the primary "mixed"
         subtype, "alternative" for representing the same
         data in multiple formats, "parallel" for parts
         intended to be viewed simultaneously, and "digest"
         for multipart entities in which each part is of
         type "message".

    message -- an encapsulated message.  A body of
         Content-Type "message" is itself all or part of a
         fully formatted RFC 822 conformant message which
         may contain its own different Content-Type header
         field.  The primary subtype is "rfc822".  The
         "partial" subtype is defined for partial messages,
         to permit the fragmented transmission of bodies
         that are thought to be too large to be passed
         through mail transport facilities.  Another
         subtype, "External-body", is defined for
         specifying large bodies by reference to an
         external data source.

    image -- image data.  Image requires a display device
         (such as a graphical display, a printer, or a FAX
         machine) to view the information.  Initial
         subtypes are defined for two widely-used image
         formats, jpeg and gif.

    audio -- audio data, with initial subtype "basic".
         Audio requires an audio output device (such as a
         speaker or a telephone) to "display" the contents.

    video -- video data.  Video requires the capability to
         display moving images, typically including
         specialized hardware and software.  The initial
         subtype is "mpeg".

    application -- some other kind of data, typically
         either uninterpreted binary data or information to
         be processed by a mail-based application.  The
         primary subtype, "octet-stream", is to be used in
         the case of uninterpreted binary data, in which
         case the simplest recommended action is to offer
         to write the information into a file for the user.



Borenstein & Freed                                             [Page 12]

RFC 1521                          MIME                    September 1993


         An additional subtype, "PostScript", is defined
         for transporting PostScript documents in bodies.
         Other expected uses for "application" include
         spreadsheets, data for mail-based scheduling
         systems, and languages for "active"
         (computational) email.  (Note that active email
         and other application data may entail several
         security considerations, which are discussed later
         in this memo, particularly in the context of
         application/PostScript.)

   Default RFC 822 messages are typed by this protocol as plain text in
   the US-ASCII character set, which can be explicitly specified as
   "Content-type: text/plain; charset=us-ascii".  If no Content-Type is
   specified, this default is assumed.  In the presence of a MIME-
   Version header field, a receiving User Agent can also assume that
   plain US-ASCII text was the sender's intent.  In the absence of a
   MIME-Version specification, plain US-ASCII text must still be
   assumed, but the sender's intent might have been otherwise.

      RATIONALE: In the absence of any Content-Type header field or
      MIME-Version header field, it is impossible to be certain that a
      message is actually text in the US-ASCII character set, since it
      might well be a message that, using the conventions that predate
      this document, includes text in another character set or non-
      textual data in a manner that cannot be automatically recognized
      (e.g., a uuencoded compressed UNIX tar file).  Although there is
      no fully acceptable alternative to treating such untyped messages
      as "text/plain; charset=us-ascii", implementors should remain
      aware that if a message lacks both the MIME-Version and the
      Content-Type header fields, it may in practice contain almost
      anything.

   It should be noted that the list of Content-Type values given here
   may be augmented in time, via the mechanisms described above, and
   that the set of subtypes is expected to grow substantially.

   When a mail reader encounters mail with an unknown Content-type
   value, it should generally treat it as equivalent to
   "application/octet-stream", as described later in this document.

5.    The Content-Transfer-Encoding Header Field

   Many Content-Types which could usefully be transported via email are
   represented, in their "natural" format, as 8-bit character or binary
   data.  Such data cannot be transmitted over some transport protocols.
   For example, RFC 821 restricts mail messages to 7-bit US-ASCII data
   with lines no longer than 1000 characters.



Borenstein & Freed                                             [Page 13]

RFC 1521                          MIME                    September 1993


   It is necessary, therefore, to define a standard mechanism for re-
   encoding such data into a 7-bit short-line format.  This document
   specifies that such encodings will be indicated by a new "Content-
   Transfer-Encoding" header field.  The Content-Transfer-Encoding field
   is used to indicate the type of transformation that has been used in
   order to represent the body in an acceptable manner for transport.

   Unlike Content-Types, a proliferation of Content-Transfer-Encoding
   values is undesirable and unnecessary.  However, establishing only a
   single Content-Transfer-Encoding mechanism does not seem possible.
   There is a tradeoff between the desire for a compact and efficient
   encoding of largely-binary data and the desire for a readable
   encoding of data that is mostly, but not entirely, 7-bit data.  For
   this reason, at least two encoding mechanisms are necessary: a
   "readable" encoding and a "dense" encoding.

   The Content-Transfer-Encoding field is designed to specify an
   invertible mapping between the "native" representation of a type of
   data and a representation that can be readily exchanged using 7 bit
   mail transport protocols, such as those defined by RFC 821 (SMTP).
   This field has not been defined by any previous standard. The field's
   value is a single token specifying the type of encoding, as
   enumerated below.  Formally:

   encoding := "Content-Transfer-Encoding" ":" mechanism

   mechanism :=     "7bit"  ;  case-insensitive
                  / "quoted-printable"
                  / "base64"
                  / "8bit"
                  / "binary"
                  / x-token

   These values are not case sensitive.  That is, Base64 and BASE64 and
   bAsE64 are all equivalent.  An encoding type of 7BIT requires that
   the body is already in a seven-bit mail-ready representation.  This
   is the default value -- that is, "Content-Transfer-Encoding: 7BIT" is
   assumed if the Content-Transfer-Encoding header field is not present.

   The values "8bit", "7bit", and "binary" all mean that NO encoding has
   been performed. However, they are potentially useful as indications
   of the kind of data contained in the object, and therefore of the
   kind of encoding that might need to be performed for transmission in
   a given transport system.  In particular:

       "7bit" means that the data is all represented as short
            lines of US-ASCII data.




Borenstein & Freed                                             [Page 14]

RFC 1521                          MIME                    September 1993


       "8bit" means that the lines are short, but there may be
            non-ASCII characters (octets with the high-order
            bit set).

       "Binary" means that not only may non-ASCII characters
            be present, but also that the lines are not
            necessarily short enough for SMTP transport.

   The difference between "8bit" (or any other conceivable bit-width
   token) and the "binary" token is that "binary" does not require
   adherence to any limits on line length or to the SMTP CRLF semantics,
   while the bit-width tokens do require such adherence.  If the body
   contains data in any bit-width other than 7-bit, the appropriate
   bit-width Content-Transfer-Encoding token must be used (e.g., "8bit"
   for unencoded 8 bit wide data).  If the body contains binary data,
   the "binary" Content-Transfer-Encoding token must be used.

      NOTE: The distinction between the Content-Transfer-Encoding values
      of "binary", "8bit", etc.  may seem unimportant, in that all of
      them really mean "none" -- that is, there has been no encoding of
      the data for transport.  However, clear labeling will be of
      enormous value to gateways between future mail transport systems
      with differing capabilities in transporting data that do not meet
      the restrictions of RFC 821 transport.

      Mail transport for unencoded 8-bit data is defined in RFC-1426
      [RFC-1426].  As of the publication of this document, there are no
      standardized Internet mail transports for which it is legitimate
      to include unencoded binary data in mail bodies.  Thus there are
      no circumstances in which the "binary" Content-Transfer-Encoding
      is actually legal on the Internet.  However, in the event that
      binary mail transport becomes a reality in Internet mail, or when
      this document is used in conjunction with any other binary-capable
      transport mechanism, binary bodies should be labeled as such using
      this mechanism.

      NOTE: The five values defined for the Content-Transfer-Encoding
      field imply nothing about the Content-Type other than the
      algorithm by which it was encoded or the transport system
      requirements if unencoded.

   Implementors may, if necessary, define new Content-Transfer-Encoding
   values, but must use an x-token, which is a name prefixed by "X-" to
   indicate its non-standard status, e.g., "Content-Transfer-Encoding:
   x-my-new-encoding".  However, unlike Content-Types and subtypes, the
   creation of new Content-Transfer-Encoding values is explicitly and
   strongly discouraged, as it seems likely to hinder interoperability
   with little potential benefit.  Their use is allowed only as the



Borenstein & Freed                                             [Page 15]

RFC 1521                          MIME                    September 1993


   result of an agreement between cooperating user agents.

   If a Content-Transfer-Encoding header field appears as part of a
   message header, it applies to the entire body of that message.  If a
   Content-Transfer-Encoding header field appears as part of a body
   part's headers, it applies only to the body of that body part.  If an
   entity is of type "multipart" or "message", the Content-Transfer-
   Encoding is not permitted to have any value other than a bit width
   (e.g., "7bit", "8bit", etc.) or "binary".

   It should be noted that email is character-oriented, so that the
   mechanisms described here are mechanisms for encoding arbitrary octet
   streams, not bit streams.  If a bit stream is to be encoded via one
   of these mechanisms, it must first be converted to an 8-bit byte
   stream using the network standard bit order ("big-endian"), in which
   the earlier bits in a stream become the higher-order bits in a byte.
   A bit stream not ending at an 8-bit boundary must be padded with
   zeroes.  This document provides a mechanism for noting the addition
   of such padding in the case of the application Content-Type, which
   has a "padding" parameter.

   The encoding mechanisms defined here explicitly encode all data in
   ASCII.  Thus, for example, suppose an entity has header fields such
   as:

        Content-Type: text/plain; charset=ISO-8859-1
        Content-transfer-encoding: base64

   This must be interpreted to mean that the body is a base64 ASCII
   encoding of data that was originally in ISO-8859-1, and will be in
   that character set again after decoding.

   The following sections will define the two standard encoding
   mechanisms.  The definition of new content-transfer-encodings is
   explicitly discouraged and should only occur when absolutely
   necessary.  All content-transfer-encoding namespace except that
   beginning with "X-" is explicitly reserved to the IANA for future
   use.  Private agreements about content-transfer-encodings are also
   explicitly discouraged.

   Certain Content-Transfer-Encoding values may only be used on certain
   Content-Types.  In particular, it is expressly forbidden to use any
   encodings other than "7bit", "8bit", or "binary" with any Content-
   Type that recursively includes other Content-Type fields, notably the
   "multipart" and "message" Content-Types.  All encodings that are
   desired for bodies of type multipart or message must be done at the
   innermost level, by encoding the actual body that needs to be
   encoded.



Borenstein & Freed                                             [Page 16]

RFC 1521                          MIME                    September 1993


      NOTE ON ENCODING RESTRICTIONS: Though the prohibition against
      using content-transfer-encodings on data of type multipart or
      message may seem overly restrictive, it is necessary to prevent
      nested encodings, in which data are passed through an encoding
      algorithm multiple times, and must be decoded multiple times in
      order to be properly viewed.  Nested encodings add considerable
      complexity to user agents: aside from the obvious efficiency
      problems with such multiple encodings, they can obscure the basic
      structure of a message.  In particular, they can imply that
      several decoding operations are necessary simply to find out what
      types of objects a message contains.  Banning nested encodings may
      complicate the job of certain mail gateways, but this seems less
      of a problem than the effect of nested encodings on user agents.

      NOTE ON THE RELATIONSHIP BETWEEN CONTENT-TYPE AND CONTENT-
      TRANSFER-ENCODING: It may seem that the Content-Transfer-Encoding
      could be inferred from the characteristics of the Content-Type
      that is to be encoded, or, at the very least, that certain
      Content-Transfer-Encodings could be mandated for use with specific
      Content-Types. There are several reasons why this is not the case.
      First, given the varying types of transports used for mail, some
      encodings may be appropriate for some Content-Type/transport
      combinations and not for others.  (For example, in an 8-bit
      transport, no encoding would be required for text in certain
      character sets, while such encodings are clearly required for 7-
      bit SMTP.)  Second, certain Content-Types may require different
      types of transfer encoding under different circumstances. For
      example, many PostScript bodies might consist entirely of short
      lines of 7-bit data and hence require little or no encoding.
      Other PostScript bodies (especially those using Level 2
      PostScript's binary encoding mechanism) may only be reasonably
      represented using a binary transport encoding. Finally, since
      Content-Type is intended to be an open-ended specification
      mechanism, strict specification of an association between
      Content-Types and encodings effectively couples the specification
      of an application protocol with a specific lower-level transport.
      This is not desirable since the developers of a Content-Type
      should not have to be aware of all the transports in use and what
      their limitations are.

      NOTE ON TRANSLATING ENCODINGS: The quoted-printable and base64
      encodings are designed so that conversion between them is
      possible.  The only issue that arises in such a conversion is the
      handling of line breaks.  When converting from quoted-printable to
      base64 a line break must be converted into a CRLF sequence.
      Similarly, a CRLF sequence in base64 data must be converted to a
      quoted-printable line break, but ONLY when converting text data.




Borenstein & Freed                                             [Page 17]

RFC 1521                          MIME                    September 1993


      NOTE ON CANONICAL ENCODING MODEL: There was some confusion, in
      earlier drafts of this memo, regarding the model for when email
      data was to be converted to canonical form and encoded, and in
      particular how this process would affect the treatment of CRLFs,
      given that the representation of newlines varies greatly from
      system to system, and the relationship between content-transfer-
      encodings and character sets.  For this reason, a canonical model
      for encoding is presented as Appendix G.

5.1.  Quoted-Printable Content-Transfer-Encoding

   The Quoted-Printable encoding is intended to represent data that
   largely consists of octets that correspond to printable characters in
   the ASCII character set.  It encodes the data in such a way that the
   resulting octets are unlikely to be modified by mail transport.  If
   the data being encoded are mostly ASCII text, the encoded form of the
   data remains largely recognizable by humans.  A body which is
   entirely ASCII may also be encoded in Quoted-Printable to ensure the
   integrity of the data should the message pass through a character-
   translating, and/or line-wrapping gateway.

   In this encoding, octets are to be represented as determined by the
   following rules:

      Rule #1: (General 8-bit representation) Any octet, except those
      indicating a line break according to the newline convention of the
      canonical (standard) form of the data being encoded, may be
      represented by an "=" followed by a two digit hexadecimal
      representation of the octet's value.  The digits of the
      hexadecimal alphabet, for this purpose, are "0123456789ABCDEF".
      Uppercase letters must be used when sending hexadecimal data,
      though a robust implementation may choose to recognize lowercase
      letters on receipt.  Thus, for example, the value 12 (ASCII form
      feed) can be represented by "=0C", and the value 61 (ASCII EQUAL
      SIGN) can be represented by "=3D".  Except when the following
      rules allow an alternative encoding, this rule is mandatory.

      Rule #2: (Literal representation) Octets with decimal values of 33
      through 60 inclusive, and 62 through 126, inclusive, MAY be
      represented as the ASCII characters which correspond to those
      octets (EXCLAMATION POINT through LESS THAN, and GREATER THAN
      through TILDE, respectively).

      Rule #3: (White Space): Octets with values of 9 and 32 MAY be
      represented as ASCII TAB (HT) and SPACE characters, respectively,
      but MUST NOT be so represented at the end of an encoded line. Any
      TAB (HT) or SPACE characters on an encoded line MUST thus be
      followed on that line by a printable character.  In particular, an



Borenstein & Freed                                             [Page 18]

RFC 1521                          MIME                    September 1993


      "=" at the end of an encoded line, indicating a soft line break
      (see rule #5) may follow one or more TAB (HT) or SPACE characters.
      It follows that an octet with value 9 or 32 appearing at the end
      of an encoded line must be represented according to Rule #1.  This
      rule is necessary because some MTAs (Message Transport Agents,
      programs which transport messages from one user to another, or
      perform a part of such transfers) are known to pad lines of text
      with SPACEs, and others are known to remove "white space"
      characters from the end of a line.  Therefore, when decoding a
      Quoted-Printable body, any trailing white space on a line must be
      deleted, as it will necessarily have been added by intermediate
      transport agents.

      Rule #4 (Line Breaks): A line break in a text body, independent of
      what its representation is following the canonical representation
      of the data being encoded, must be represented by a (RFC 822) line
      break, which is a CRLF sequence, in the Quoted-Printable encoding.
      Since the canonical representation of types other than text do not
      generally include the representation of line breaks, no hard line
      breaks (i.e.  line breaks that are intended to be meaningful and
      to be displayed to the user) should occur in the quoted-printable
      encoding of such types.  Of course, occurrences of "=0D", "=0A",
      "0A=0D" and "=0D=0A" will eventually be encountered.  In general,
      however, base64 is preferred over quoted-printable for binary
      data.

      Note that many implementations may elect to encode the local
      representation of various content types directly, as described in
      Appendix G.  In particular, this may apply to plain text material
      on systems that use newline conventions other than CRLF
      delimiters. Such an implementation is permissible, but the
      generation of line breaks must be generalized to account for the
      case where alternate representations of newline sequences are
      used.

      Rule #5 (Soft Line Breaks): The Quoted-Printable encoding REQUIRES
      that encoded lines be no more than 76 characters long. If longer
      lines are to be encoded with the Quoted-Printable encoding, 'soft'
      line breaks must be used. An equal sign as the last character on a
      encoded line indicates such a non-significant ('soft') line break
      in the encoded text. Thus if the "raw" form of the line is a
      single unencoded line that says:

          Now's the time for all folk to come to the aid of
          their country.

      This can be represented, in the Quoted-Printable encoding, as




Borenstein & Freed                                             [Page 19]

RFC 1521                          MIME                    September 1993


          Now's the time =
          for all folk to come=
           to the aid of their country.

      This provides a mechanism with which long lines are encoded in
      such a way as to be restored by the user agent.  The 76 character
      limit does not count the trailing CRLF, but counts all other
      characters, including any equal signs.

   Since the hyphen character ("-") is represented as itself in the
   Quoted-Printable encoding, care must be taken, when encapsulating a
   quoted-printable encoded body in a multipart entity, to ensure that
   the encapsulation boundary does not appear anywhere in the encoded
   body.  (A good strategy is to choose a boundary that includes a
   character sequence such as "=_" which can never appear in a quoted-
   printable body.  See the definition of multipart messages later in
   this document.)

      NOTE: The quoted-printable encoding represents something of a
      compromise between readability and reliability in transport.
      Bodies encoded with the quoted-printable encoding will work
      reliably over most mail gateways, but may not work perfectly over
      a few gateways, notably those involving translation into EBCDIC.
      (In theory, an EBCDIC gateway could decode a quoted-printable body
      and re-encode it using base64, but such gateways do not yet
      exist.)  A higher level of confidence is offered by the base64
      Content-Transfer-Encoding.  A way to get reasonably reliable
      transport through EBCDIC gateways is to also quote the ASCII
      characters

             !"#$@[\]^`{|}~

      according to rule #1.  See Appendix B for more information.

   Because quoted-printable data is generally assumed to be line-
   oriented, it is to be expected that the representation of the breaks
   between the lines of quoted printable data may be altered in
   transport, in the same manner that plain text mail has always been
   altered in Internet mail when passing between systems with differing
   newline conventions.  If such alterations are likely to constitute a
   corruption of the data, it is probably more sensible to use the
   base64 encoding rather than the quoted-printable encoding.

   WARNING TO IMPLEMENTORS: If binary data are encoded in quoted-
   printable, care must be taken to encode CR and LF characters as "=0D"
   and "=0A", respectively.  In particular, a CRLF sequence in binary
   data should be encoded as "=0D=0A".  Otherwise, if CRLF were
   represented as a hard line break, it might be incorrectly decoded on



Borenstein & Freed                                             [Page 20]

RFC 1521                          MIME                    September 1993


   platforms with different line break conventions.

   For formalists, the syntax of quoted-printable data is described by
   the following grammar:

   quoted-printable := ([*(ptext / SPACE / TAB) ptext] ["="] CRLF)
        ; Maximum line length of 76 characters excluding CRLF

   ptext := octet /<any ASCII character except "=", SPACE, or TAB>
        ; characters not listed as "mail-safe" in Appendix B
        ; are also not recommended.

   octet := "=" 2(DIGIT / "A" / "B" / "C" / "D" / "E" / "F")
        ; octet must be used for characters > 127, =, SPACE, or TAB,
        ; and is recommended for any characters not listed in
        ; Appendix B as "mail-safe".

5.2.  Base64 Content-Transfer-Encoding

   The Base64 Content-Transfer-Encoding is designed to represent
   arbitrary sequences of octets in a form that need not be humanly
   readable.  The encoding and decoding algorithms are simple, but the
   encoded data are consistently only about 33 percent larger than the
   unencoded data.  This encoding is virtually identical to the one used
   in Privacy Enhanced Mail (PEM) applications, as defined in RFC 1421.
   The base64 encoding is adapted from RFC 1421, with one change: base64
   eliminates the "*" mechanism for embedded clear text.

   A 65-character subset of US-ASCII is used, enabling 6 bits to be
   represented per printable character. (The extra 65th character, "=",
   is used to signify a special processing function.)

      NOTE: This subset has the important property that it is
      represented identically in all versions of ISO 646, including US
      ASCII, and all characters in the subset are also represented
      identically in all versions of EBCDIC.  Other popular encodings,
      such as the encoding used by the uuencode utility and the base85
      encoding specified as part of Level 2 PostScript, do not share
      these properties, and thus do not fulfill the portability
      requirements a binary transport encoding for mail must meet.

   The encoding process represents 24-bit groups of input bits as output
   strings of 4 encoded characters. Proceeding from left to right, a
   24-bit input group is formed by concatenating 3 8-bit input groups.
   These 24 bits are then treated as 4 concatenated 6-bit groups, each
   of which is translated into a single digit in the base64 alphabet.
   When encoding a bit stream via the base64 encoding, the bit stream
   must be presumed to be ordered with the most-significant-bit first.



Borenstein & Freed                                             [Page 21]

RFC 1521                          MIME                    September 1993


   That is, the first bit in the stream will be the high-order bit in
   the first byte, and the eighth bit will be the low-order bit in the
   first byte, and so on.

   Each 6-bit group is used as an index into an array of 64 printable
   characters. The character referenced by the index is placed in the
   output string. These characters, identified in Table 1, below, are
   selected so as to be universally representable, and the set excludes
   characters with particular significance to SMTP (e.g., ".", CR, LF)
   and to the encapsulation boundaries defined in this document (e.g.,
   "-").

                            Table 1: The Base64 Alphabet

      Value Encoding  Value Encoding  Value Encoding  Value Encoding
           0 A            17 R            34 i            51 z
           1 B            18 S            35 j            52 0
           2 C            19 T            36 k            53 1
           3 D            20 U            37 l            54 2
           4 E            21 V            38 m            55 3
           5 F            22 W            39 n            56 4
           6 G            23 X            40 o            57 5
           7 H            24 Y            41 p            58 6
           8 I            25 Z            42 q            59 7
           9 J            26 a            43 r            60 8
          10 K            27 b            44 s            61 9
          11 L            28 c            45 t            62 +
          12 M            29 d            46 u            63 /
          13 N            30 e            47 v
          14 O            31 f            48 w         (pad) =
          15 P            32 g            49 x
          16 Q            33 h            50 y

   The output stream (encoded bytes) must be represented in lines of no
   more than 76 characters each.  All line breaks or other characters
   not found in Table 1 must be ignored by decoding software.  In base64
   data, characters other than those in Table 1, line breaks, and other
   white space probably indicate a transmission error, about which a
   warning message or even a message rejection might be appropriate
   under some circumstances.

   Special processing is performed if fewer than 24 bits are available
   at the end of the data being encoded.  A full encoding quantum is
   always completed at the end of a body.  When fewer than 24 input bits
   are available in an input group, zero bits are added (on the right)
   to form an integral number of 6-bit groups.  Padding at the end of
   the data is performed using the '=' character.  Since all base64
   input is an integral number of octets, only the following cases can



Borenstein & Freed                                             [Page 22]

RFC 1521                          MIME                    September 1993


   arise: (1) the final quantum of encoding input is an integral
   multiple of 24 bits; here, the final unit of encoded output will be
   an integral multiple of 4 characters with no "=" padding, (2) the
   final quantum of encoding input is exactly 8 bits; here, the final
   unit of encoded output will be two characters followed by two "="
   padding characters, or (3) the final quantum of encoding input is
   exactly 16 bits; here, the final unit of encoded output will be three
   characters followed by one "=" padding character.

   Because it is used only for padding at the end of the data, the
   occurrence of any '=' characters may be taken as evidence that the
   end of the data has been reached (without truncation in transit).  No
   such assurance is possible, however, when the number of octets
   transmitted was a multiple of three.

   Any characters outside of the base64 alphabet are to be ignored in
   base64-encoded data.  The same applies to any illegal sequence of
   characters in the base64 encoding, such as "====="

   Care must be taken to use the proper octets for line breaks if base64
   encoding is applied directly to text material that has not been
   converted to canonical form.  In particular, text line breaks must be
   converted into CRLF sequences prior to base64 encoding. The important
   thing to note is that this may be done directly by the encoder rather
   than in a prior canonicalization step in some implementations.

      NOTE: There is no need to worry about quoting apparent
      encapsulation boundaries within base64-encoded parts of multipart
      entities because no hyphen characters are used in the base64
      encoding.

6.    Additional Content-Header Fields

6.1.  Optional Content-ID Header Field

   In constructing a high-level user agent, it may be desirable to allow
   one body to make reference to another.  Accordingly, bodies may be
   labeled using the "Content-ID" header field, which is syntactically
   identical to the "Message-ID" header field:

   id :=  "Content-ID" ":" msg-id
   Like the Message-ID values, Content-ID values must be generated to be
   world-unique.

   The Content-ID value may be used for uniquely identifying MIME
   entities in several contexts, particularly for cacheing data
   referenced by the message/external-body mechanism.  Although the
   Content-ID header is generally optional, its use is mandatory in



Borenstein & Freed                                             [Page 23]

RFC 1521                          MIME                    September 1993


   implementations which generate data of the optional MIME Content-type
   "message/external-body".  That is, each message/external-body entity
   must have a Content-ID field to permit cacheing of such data.

   It is also worth noting that the Content-ID value has special
   semantics in the case of the multipart/alternative content-type.
   This is explained in the section of this document dealing with
   multipart/alternative.

6.2.  Optional Content-Description Header Field

   The ability to associate some descriptive information with a given
   body is often desirable. For example, it may be useful to mark an
   "image" body as "a picture of the Space Shuttle Endeavor."  Such text
   may be placed in the Content-Description header field.

   description := "Content-Description" ":" *text

   The description is presumed to be given in the US-ASCII character
   set, although the mechanism specified in [RFC-1522] may be used for
   non-US-ASCII Content-Description values.

7.    The Predefined Content-Type Values

   This document defines seven initial Content-Type values and an
   extension mechanism for private or experimental types.  Further
   standard types must be defined by new published specifications.  It
   is expected that most innovation in new types of mail will take place
   as subtypes of the seven types defined here.  The most essential
   characteristics of the seven content-types are summarized in Appendix
   F.

7.1  The Text Content-Type

   The text Content-Type is intended for sending material which is
   principally textual in form.  It is the default Content-Type.  A
   "charset" parameter may be used to indicate the character set of the
   body text for some text subtypes, notably including the primary
   subtype, "text/plain", which indicates plain (unformatted) text.  The
   default Content-Type for Internet mail is "text/plain; charset=us-
   ascii".

   Beyond plain text, there are many formats for representing what might
   be known as "extended text" -- text with embedded formatting and
   presentation information.  An interesting characteristic of many such
   representations is that they are to some extent readable even without
   the software that interprets them.  It is useful, then, to
   distinguish them, at the highest level, from such unreadable data as



Borenstein & Freed                                             [Page 24]

RFC 1521                          MIME                    September 1993


   images, audio, or text represented in an unreadable form.  In the
   absence of appropriate interpretation software, it is reasonable to
   show subtypes of text to the user, while it is not reasonable to do
   so with most nontextual data.

   Such formatted textual data should be represented using subtypes of
   text.  Plausible subtypes of text are typically given by the common
   name of the representation format, e.g., "text/richtext" [RFC-1341].

7.1.1.     The charset parameter

   A critical parameter that may be specified in the Content-Type field
   for text/plain data is the character set.  This is specified with a
   "charset" parameter, as in:

        Content-type: text/plain; charset=us-ascii

   Unlike some other parameter values, the values of the charset
   parameter are NOT case sensitive.  The default character set, which
   must be assumed in the absence of a charset parameter, is US-ASCII.

   The specification for any future subtypes of "text" must specify
   whether or not they will also utilize a "charset" parameter, and may
   possibly restrict its values as well.  When used with a particular
   body, the semantics of the "charset" parameter should be identical to
   those specified here for "text/plain", i.e., the body consists
   entirely of characters in the given charset.  In particular, definers
   of future text subtypes should pay close attention the the
   implications of multibyte character sets for their subtype
   definitions.

   This RFC specifies the definition of the charset parameter for the
   purposes of MIME to be a unique mapping of a byte stream to glyphs, a
   mapping which does not require external profiling information.

   An initial list of predefined character set names can be found at the
   end of this section.  Additional character sets may be registered
   with IANA, although the standardization of their use requires the
   usual IESG [RFC-1340] review and approval.  Note that if the
   specified character set includes 8-bit data, a Content-Transfer-
   Encoding header field and a corresponding encoding on the data are
   required in order to transmit the body via some mail transfer
   protocols, such as SMTP.

   The default character set, US-ASCII, has been the subject of some
   confusion and ambiguity in the past.  Not only were there some
   ambiguities in the definition, there have been wide variations in
   practice.  In order to eliminate such ambiguity and variations in the



Borenstein & Freed                                             [Page 25]

RFC 1521                          MIME                    September 1993


   future, it is strongly recommended that new user agents explicitly
   specify a character set via the Content-Type header field.  "US-
   ASCII" does not indicate an arbitrary seven-bit character code, but
   specifies that the body uses character coding that uses the exact
   correspondence of codes to characters specified in ASCII.  National
   use variations of ISO 646 [ISO-646] are NOT ASCII and their use in
   Internet mail is explicitly discouraged. The omission of the ISO 646
   character set is deliberate in this regard.  The character set name
   of "US-ASCII" explicitly refers to ANSI X3.4-1986 [US-ASCII] only.
   The character set name "ASCII" is reserved and must not be used for
   any purpose.

      NOTE: RFC 821 explicitly specifies "ASCII", and references an
      earlier version of the American Standard.  Insofar as one of the
      purposes of specifying a Content-Type and character set is to
      permit the receiver to unambiguously determine how the sender
      intended the coded message to be interpreted, assuming anything
      other than "strict ASCII" as the default would risk unintentional
      and incompatible changes to the semantics of messages now being
      transmitted.  This also implies that messages containing
      characters coded according to national variations on ISO 646, or
      using code-switching procedures (e.g., those of ISO 2022), as well
      as 8-bit or multiple octet character encodings MUST use an
      appropriate character set specification to be consistent with this
      specification.

   The complete US-ASCII character set is listed in [US-ASCII].  Note
   that the control characters including DEL (0-31, 127) have no defined
   meaning apart from the combination CRLF (ASCII values 13 and 10)
   indicating a new line.  Two of the characters have de facto meanings
   in wide use: FF (12) often means "start subsequent text on the
   beginning of a new page"; and TAB or HT (9) often (though not always)
   means "move the cursor to the next available column after the current
   position where the column number is a multiple of 8 (counting the
   first column as column 0)." Apart from this, any use of the control
   characters or DEL in a body must be part of a private agreement
   between the sender and recipient.  Such private agreements are
   discouraged and should be replaced by the other capabilities of this
   document.

      NOTE: Beyond US-ASCII, an enormous proliferation of character sets
      is possible. It is the opinion of the IETF working group that a
      large number of character sets is NOT a good thing.  We would
      prefer to specify a single character set that can be used
      universally for representing all of the world's languages in
      electronic mail.  Unfortunately, existing practice in several
      communities seems to point to the continued use of multiple
      character sets in the near future.  For this reason, we define



Borenstein & Freed                                             [Page 26]

RFC 1521                          MIME                    September 1993


      names for a small number of character sets for which a strong
      constituent base exists.

   The defined charset values are:

   US-ASCII -- as defined in [US-ASCII].

        ISO-8859-X -- where "X" is to be replaced, as necessary, for the
             parts of ISO-8859 [ISO-8859].  Note that the ISO 646
             character sets have deliberately been omitted in favor of
             their 8859 replacements, which are the designated character
             sets for Internet mail.  As of the publication of this
             document, the legitimate values for "X" are the digits 1
             through 9.

   The character sets specified above are the ones that were relatively
   uncontroversial during the drafting of MIME.  This document does not
   endorse the use of any particular character set other than US-ASCII,
   and recognizes that the future evolution of world character sets
   remains unclear.  It is expected that in the future, additional
   character sets will be registered for use in MIME.

   Note that the character set used, if anything other than US-ASCII,
   must always be explicitly specified in the Content-Type field.

   No other character set name may be used in Internet mail without the
   publication of a formal specification and its registration with IANA,
   or by private agreement, in which case the character set name must
   begin with "X-".

   Implementors are discouraged from defining new character sets for
   mail use unless absolutely necessary.

   The "charset" parameter has been defined primarily for the purpose of
   textual data, and is described in this section for that reason.
   However, it is conceivable that non-textual data might also wish to
   specify a charset value for some purpose, in which case the same
   syntax and values should be used.

   In general, mail-sending software must always use the "lowest common
   denominator" character set possible.  For example, if a body contains
   only US-ASCII characters, it must be marked as being in the US-ASCII
   character set, not ISO-8859-1, which, like all the ISO-8859 family of
   character sets, is a superset of US-ASCII.  More generally, if a
   widely-used character set is a subset of another character set, and a
   body contains only characters in the widely-used subset, it must be
   labeled as being in that subset.  This will increase the chances that
   the recipient will be able to view the mail correctly.



Borenstein & Freed                                             [Page 27]

RFC 1521                          MIME                    September 1993


7.1.2.     The Text/plain subtype

   The primary subtype of text is "plain".  This indicates plain
   (unformatted) text.  The default Content-Type for Internet mail,
   "text/plain; charset=us-ascii", describes existing Internet practice.
   That is, it is the type of body defined by RFC 822.

   No other text subtype is defined by this document.

   The formal grammar for the content-type header field for text is as
   follows:

   text-type := "text" "/" text-subtype [";" "charset" "=" charset]

   text-subtype := "plain" / extension-token

   charset := "us-ascii"/ "iso-8859-1"/ "iso-8859-2"/ "iso-8859-3"
          / "iso-8859-4"/ "iso-8859-5"/ "iso-8859-6"/ "iso-8859-7"
          / "iso-8859-8" / "iso-8859-9" / extension-token
                    ; case insensitive

7.2.  The Multipart Content-Type

   In the case of multiple part entities, in which one or more different
   sets of data are combined in a single body, a "multipart" Content-
   Type field must appear in the entity's header. The body must then
   contain one or more "body parts," each preceded by an encapsulation
   boundary, and the last one followed by a closing boundary.  Each part
   starts with an encapsulation boundary, and then contains a body part
   consisting of header area, a blank line, and a body area.  Thus a
   body part is similar to an RFC 822 message in syntax, but different
   in meaning.

   A body part is NOT to be interpreted as actually being an RFC 822
   message.  To begin with, NO header fields are actually required in
   body parts.  A body part that starts with a blank line, therefore, is
   allowed and is a body part for which all default values are to be
   assumed.  In such a case, the absence of a Content-Type header field
   implies that the corresponding body is plain US-ASCII text.  The only
   header fields that have defined meaning for body parts are those the
   names of which begin with "Content-".  All other header fields are
   generally to be ignored in body parts.  Although they should
   generally be retained in mail processing, they may be discarded by
   gateways if necessary.  Such other fields are permitted to appear in
   body parts but must not be depended on.  "X-" fields may be created
   for experimental or private purposes, with the recognition that the
   information they contain may be lost at some gateways.




Borenstein & Freed                                             [Page 28]

RFC 1521                          MIME                    September 1993


      NOTE: The distinction between an RFC 822 message and a body part
      is subtle, but important. A gateway between Internet and X.400
      mail, for example, must be able to tell the difference between a
      body part that contains an image and a body part that contains an
      encapsulated message, the body of which is an image.  In order to
      represent the latter, the body part must have "Content-Type:
      message", and its body (after the blank line) must be the
      encapsulated message, with its own "Content-Type: image" header
      field.  The use of similar syntax facilitates the conversion of
      messages to body parts, and vice versa, but the distinction
      between the two must be understood by implementors.  (For the
      special case in which all parts actually are messages, a "digest"
      subtype is also defined.)

   As stated previously, each body part is preceded by an encapsulation
   boundary.  The encapsulation boundary MUST NOT appear inside any of
   the encapsulated parts.  Thus, it is crucial that the composing agent
   be able to choose and specify the unique boundary that will separate
   the parts.

   All present and future subtypes of the "multipart" type must use an
   identical syntax.  Subtypes may differ in their semantics, and may
   impose additional restrictions on syntax, but must conform to the
   required syntax for the multipart type.  This requirement ensures
   that all conformant user agents will at least be able to recognize
   and separate the parts of any multipart entity, even of an
   unrecognized subtype.

   As stated in the definition of the Content-Transfer-Encoding field,
   no encoding other than "7bit", "8bit", or "binary" is permitted for
   entities of type "multipart".  The multipart delimiters and header
   fields are always represented as 7-bit ASCII in any case (though the
   header fields may encode non-ASCII header text as per [RFC-1522]),
   and data within the body parts can be encoded on a part-by-part
   basis, with Content-Transfer-Encoding fields for each appropriate
   body part.

   Mail gateways, relays, and other mail handling agents are commonly
   known to alter the top-level header of an RFC 822 message.  In
   particular, they frequently add, remove, or reorder header fields.
   Such alterations are explicitly forbidden for the body part headers
   embedded in the bodies of messages of type "multipart."

7.2.1.     Multipart:  The common syntax

   All subtypes of "multipart" share a common syntax, defined in this
   section.  A simple example of a multipart message also appears in
   this section.  An example of a more complex multipart message is



Borenstein & Freed                                             [Page 29]

RFC 1521                          MIME                    September 1993


   given in Appendix C.

   The Content-Type field for multipart entities requires one parameter,
   "boundary", which is used to specify the encapsulation boundary.  The
   encapsulation boundary is defined as a line consisting entirely of
   two hyphen characters ("-", decimal code 45) followed by the boundary
   parameter value from the Content-Type header field.

      NOTE: The hyphens are for rough compatibility with the earlier RFC
      934 method of message encapsulation, and for ease of searching for
      the boundaries in some implementations. However, it should be
      noted that multipart messages are NOT completely compatible with
      RFC 934 encapsulations; in particular, they do not obey RFC 934
      quoting conventions for embedded lines that begin with hyphens.
      This mechanism was chosen over the RFC 934 mechanism because the
      latter causes lines to grow with each level of quoting.  The
      combination of this growth with the fact that SMTP implementations
      sometimes wrap long lines made the RFC 934 mechanism unsuitable
      for use in the event that deeply-nested multipart structuring is
      ever desired.

   WARNING TO IMPLEMENTORS: The grammar for parameters on the Content-
   type field is such that it is often necessary to enclose the
   boundaries in quotes on the Content-type line.  This is not always
   necessary, but never hurts.  Implementors should be sure to study the
   grammar carefully in order to avoid producing illegal Content-type
   fields. Thus, a typical multipart Content-Type header field might
   look like this:

                 Content-Type: multipart/mixed;
                      boundary=gc0p4Jq0M2Yt08jU534c0p

   But the following is illegal:

                 Content-Type: multipart/mixed;
                      boundary=gc0p4Jq0M:2Yt08jU534c0p

   (because of the colon) and must instead be represented as

                 Content-Type: multipart/mixed;
                      boundary="gc0p4Jq0M:2Yt08jU534c0p"

   This indicates that the entity consists of several parts, each itself
   with a structure that is syntactically identical to an RFC 822
   message, except that the header area might be completely empty, and
   that the parts are each preceded by the line

                 --gc0p4Jq0M:2Yt08jU534c0p



Borenstein & Freed                                             [Page 30]

RFC 1521                          MIME                    September 1993


   Note that the encapsulation boundary must occur at the beginning of a
   line, i.e., following a CRLF, and that the initial CRLF is considered
   to be attached to the encapsulation boundary rather than part of the
   preceding part.  The boundary must be followed immediately either by
   another CRLF and the header fields for the next part, or by two
   CRLFs, in which case there are no header fields for the next part
   (and it is therefore assumed to be of Content-Type text/plain).

      NOTE: The CRLF preceding the encapsulation line is conceptually
      attached to the boundary so that it is possible to have a part
      that does not end with a CRLF (line break). Body parts that must
      be considered to end with line breaks, therefore, must have two
      CRLFs preceding the encapsulation line, the first of which is part
      of the preceding body part, and the second of which is part of the
      encapsulation boundary.

   Encapsulation boundaries must not appear within the encapsulations,
   and must be no longer than 70 characters, not counting the two
   leading hyphens.

   The encapsulation boundary following the last body part is a
   distinguished delimiter that indicates that no further body parts
   will follow.  Such a delimiter is identical to the previous
   delimiters, with the addition of two more hyphens at the end of the
   line:

                 --gc0p4Jq0M2Yt08jU534c0p--

   There appears to be room for additional information prior to the
   first encapsulation boundary and following the final boundary.  These
   areas should generally be left blank, and implementations must ignore
   anything that appears before the first boundary or after the last
   one.

      NOTE: These "preamble" and "epilogue" areas are generally not used
      because of the lack of proper typing of these parts and the lack
      of clear semantics for handling these areas at gateways,
      particularly X.400 gateways.  However, rather than leaving the
      preamble area blank, many MIME implementations have found this to
      be a convenient place to insert an explanatory note for recipients
      who read the message with pre-MIME software, since such notes will
      be ignored by MIME-compliant software.

      NOTE: Because encapsulation boundaries must not appear in the body
      parts being encapsulated, a user agent must exercise care to
      choose a unique boundary.  The boundary in the example above could
      have been the result of an algorithm designed to produce
      boundaries with a very low probability of already existing in the



Borenstein & Freed                                             [Page 31]

RFC 1521                          MIME                    September 1993


      data to be encapsulated without having to prescan the data.
      Alternate algorithms might result in more 'readable' boundaries
      for a recipient with an old user agent, but would require more
      attention to the possibility that the boundary might appear in the
      encapsulated part.  The simplest boundary possible is something
      like "---", with a closing boundary of "-----".

   As a very simple example, the following multipart message has two
   parts, both of them plain text, one of them explicitly typed and one
   of them implicitly typed:

      From: Nathaniel Borenstein <nsb@bellcore.com>
      To:  Ned Freed <ned@innosoft.com>
      Subject: Sample message
      MIME-Version: 1.0
      Content-type: multipart/mixed; boundary="simple
      boundary"

      This is the preamble.  It is to be ignored, though it
      is a handy place for mail composers to include an
      explanatory note to non-MIME conformant readers.
      --simple boundary

      This is implicitly typed plain ASCII text.
      It does NOT end with a linebreak.
      --simple boundary
      Content-type: text/plain; charset=us-ascii

      This is explicitly typed plain ASCII text.
      It DOES end with a linebreak.

      --simple boundary--
      This is the epilogue.  It is also to be ignored.

   The use of a Content-Type of multipart in a body part within another
   multipart entity is explicitly allowed.  In such cases, for obvious
   reasons, care must be taken to ensure that each nested multipart
   entity must use a different boundary delimiter. See Appendix C for an
   example of nested multipart entities.

   The use of the multipart Content-Type with only a single body part
   may be useful in certain contexts, and is explicitly permitted.

   The only mandatory parameter for the multipart Content-Type is the
   boundary parameter, which consists of 1 to 70 characters from a set
   of characters known to be very robust through email gateways, and NOT
   ending with white space.  (If a boundary appears to end with white
   space, the white space must be presumed to have been added by a



Borenstein & Freed                                             [Page 32]

RFC 1521                          MIME                    September 1993


   gateway, and must be deleted.)  It is formally specified by the
   following BNF:

   boundary := 0*69<bchars> bcharsnospace

   bchars := bcharsnospace / " "

   bcharsnospace :=    DIGIT / ALPHA / "'" / "(" / ")" / "+" /"_"
                 / "," / "-" / "." / "/" / ":" / "=" / "?"

   Overall, the body of a multipart entity may be specified  as
   follows:

   multipart-body := preamble 1*encapsulation
                  close-delimiter epilogue

   encapsulation := delimiter body-part CRLF

   delimiter := "--" boundary CRLF ; taken from Content-Type field.
                                   ; There must be no space
                                   ; between "--" and boundary.

   close-delimiter := "--" boundary "--" CRLF ; Again, no space
   by "--",

   preamble := discard-text   ;  to  be  ignored upon receipt.

   epilogue := discard-text   ;  to  be  ignored upon receipt.

   discard-text := *(*text CRLF)

   body-part := <"message" as defined in RFC 822,
             with all header fields optional, and with the
             specified delimiter not occurring anywhere in
             the message body, either on a line by itself
             or as a substring anywhere.  Note that the
             semantics of a part differ from the semantics
             of a message, as described in the text.>

      NOTE: In certain transport enclaves, RFC 822 restrictions such as
      the one that limits bodies to printable ASCII characters may not
      be in force.  (That is, the transport domains may resemble
      standard Internet mail transport as specified in RFC821 and
      assumed by RFC822, but without certain restrictions.)  The
      relaxation of these restrictions should be construed as locally
      extending the definition of bodies, for example to include octets
      outside of the ASCII range, as long as these extensions are
      supported by the transport and adequately documented in the



Borenstein & Freed                                             [Page 33]

RFC 1521                          MIME                    September 1993


      Content-Transfer-Encoding header field. However, in no event are
      headers (either message headers or body-part headers) allowed to
      contain anything other than ASCII characters.

      NOTE: Conspicuously missing from the multipart type is a notion of
      structured, related body parts.  In general, it seems premature to
      try to standardize interpart structure yet.  It is recommended
      that those wishing to provide a more structured or integrated
      multipart messaging facility should define a subtype of multipart
      that is syntactically identical, but that always expects the
      inclusion of a distinguished part that can be used to specify the
      structure and integration of the other parts, probably referring
      to them by their Content-ID field.  If this approach is used,
      other implementations will not recognize the new subtype, but will
      treat it as the primary subtype (multipart/mixed) and will thus be
      able to show the user the parts that are recognized.

7.2.2.     The Multipart/mixed (primary) subtype

   The primary subtype for multipart, "mixed", is intended for use when
   the body parts are independent and need to be bundled in a particular
   order.  Any multipart subtypes that an implementation does not
   recognize must be treated as being of subtype "mixed".

7.2.3.     The Multipart/alternative subtype

   The multipart/alternative type is syntactically identical to
   multipart/mixed, but the semantics are different.  In particular,
   each of the parts is an "alternative" version of the same
   information.

   Systems should recognize that the content of the various parts are
   interchangeable.  Systems should choose the "best" type based on the
   local environment and preferences, in some cases even through user
   interaction.  As with multipart/mixed, the order of body parts is
   significant.  In this case, the alternatives appear in an order of
   increasing faithfulness to the original content. In general, the best
   choice is the LAST part of a type supported by the recipient system's
   local environment.

   Multipart/alternative may be used, for example, to send mail in a
   fancy text format in such a way that it can easily be displayed
   anywhere:








Borenstein & Freed                                             [Page 34]

RFC 1521                          MIME                    September 1993


   From:  Nathaniel Borenstein <nsb@bellcore.com>
   To: Ned Freed <ned@innosoft.com>
   Subject: Formatted text mail
   MIME-Version: 1.0
   Content-Type: multipart/alternative; boundary=boundary42

   --boundary42

   Content-Type: text/plain; charset=us-ascii

      ...plain text version of message goes here....
   --boundary42
   Content-Type: text/richtext

      .... RFC 1341 richtext version of same message goes here ...
   --boundary42
   Content-Type: text/x-whatever

      .... fanciest formatted version of same  message  goes  here
      ...
   --boundary42--

   In this example, users whose mail system understood the "text/x-
   whatever" format would see only the fancy version, while other users
   would see only the richtext or plain text version, depending on the
   capabilities of their system.

   In general, user agents that compose multipart/alternative entities
   must place the body parts in increasing order of preference, that is,
   with the preferred format last.  For fancy text, the sending user
   agent should put the plainest format first and the richest format
   last.  Receiving user agents should pick and display the last format
   they are capable of displaying.  In the case where one of the
   alternatives is itself of type "multipart" and contains unrecognized
   sub-parts, the user agent may choose either to show that alternative,
   an earlier alternative, or both.

      NOTE: From an implementor's perspective, it might seem more
      sensible to reverse this ordering, and have the plainest
      alternative last.  However, placing the plainest alternative first
      is the friendliest possible option when multipart/alternative
      entities are viewed using a non-MIME-conformant mail reader.
      While this approach does impose some burden on conformant mail
      readers, interoperability with older mail readers was deemed to be
      more important in this case.

   It may be the case that some user agents, if they can recognize more
   than one of the formats, will prefer to offer the user the choice of



Borenstein & Freed                                             [Page 35]

RFC 1521                          MIME                    September 1993


   which format to view.  This makes sense, for example, if mail
   includes both a nicely-formatted image version and an easily-edited
   text version.  What is most critical, however, is that the user not
   automatically be shown multiple versions of the same data.  Either
   the user should be shown the last recognized version or should be
   given the choice.

   NOTE ON THE SEMANTICS OF CONTENT-ID IN MULTIPART/ALTERNATIVE: Each
   part of a multipart/alternative entity represents the same data, but
   the mappings between the two are not necessarily without information
   loss.  For example, information is lost when translating ODA to
   PostScript or plain text.  It is recommended that each part should
   have a different Content-ID value in the case where the information
   content of the two parts is not identical.  However, where the
   information content is identical -- for example, where several parts
   of type "application/external- body" specify alternate ways to access
   the identical data -- the same Content-ID field value should be used,
   to optimize any cacheing mechanisms that might be present on the
   recipient's end.  However, it is recommended that the Content-ID
   values used by the parts should not be the same Content-ID value that
   describes the multipart/alternative as a whole, if there is any such
   Content-ID field.  That is, one Content-ID value will refer to the
   multipart/alternative entity, while one or more other Content-ID
   values will refer to the parts inside it.

7.2.4.     The Multipart/digest subtype

   This document defines a "digest" subtype of the multipart Content-
   Type.  This type is syntactically identical to multipart/mixed, but
   the semantics are different.  In particular, in a digest, the default
   Content-Type value for a body part is changed from "text/plain" to
   "message/rfc822".  This is done to allow a more readable digest
   format that is largely compatible (except for the quoting convention)
   with RFC 934.

















Borenstein & Freed                                             [Page 36]

RFC 1521                          MIME                    September 1993


   A digest in this format might, then, look something like this:

   From: Moderator-Address
   To: Recipient-List
   MIME-Version: 1.0
   Subject:  Internet Digest, volume 42
   Content-Type: multipart/digest;
        boundary="---- next message ----"

   ------ next message ----

   From: someone-else
   Subject: my opinion

      ...body goes here ...

   ------ next message ----

   From: someone-else-again
   Subject: my different opinion

      ... another body goes here...

   ------ next message ------

7.2.5.     The Multipart/parallel subtype

   This document defines a "parallel" subtype of the multipart Content-
   Type.  This type is syntactically identical to multipart/mixed, but
   the semantics are different.  In particular, in a parallel entity,
   the order of body parts is not significant.

   A common presentation of this type is to display all of the parts
   simultaneously on hardware and software that are capable of doing so.
   However, composing agents should be aware that many mail readers will
   lack this capability and will show the parts serially in any event.

7.2.6.     Other Multipart subtypes

   Other multipart subtypes are expected in the future.  MIME
   implementations must in general treat unrecognized subtypes of
   multipart as being equivalent to "multipart/mixed".

   The formal grammar for content-type header fields for multipart data
   is given by:

   multipart-type := "multipart" "/" multipart-subtype
                  ";" "boundary" "=" boundary



Borenstein & Freed                                             [Page 37]

RFC 1521                          MIME                    September 1993


   multipart-subtype := "mixed" / "parallel" / "digest"
                  / "alternative" / extension-token

7.3.  The Message Content-Type

   It is frequently desirable, in sending mail, to encapsulate another
   mail message. For this common operation, a special Content-Type,
   "message", is defined.  The primary subtype, message/rfc822, has no
   required parameters in the Content-Type field.  Additional subtypes,
   "partial" and "External-body", do have required parameters.  These
   subtypes are explained below.

      NOTE: It has been suggested that subtypes of message might be
      defined for forwarded or rejected messages.  However, forwarded
      and rejected messages can be handled as multipart messages in
      which the first part contains any control or descriptive
      information, and a second part, of type message/rfc822, is the
      forwarded or rejected message.  Composing rejection and forwarding
      messages in this manner will preserve the type information on the
      original message and allow it to be correctly presented to the
      recipient, and hence is strongly encouraged.

   As stated in the definition of the Content-Transfer-Encoding field,
   no encoding other than "7bit", "8bit", or "binary" is permitted for
   messages or parts of type "message".  Even stronger restrictions
   apply to the subtypes "message/partial" and "message/external-body",
   as specified below.  The message header fields are always US-ASCII in
   any case, and data within the body can still be encoded, in which
   case the Content-Transfer-Encoding header field in the encapsulated
   message will reflect this.  Non-ASCII text in the headers of an
   encapsulated message can be specified using the mechanisms described
   in [RFC-1522].

   Mail gateways, relays, and other mail handling agents are commonly
   known to alter the top-level header of an RFC 822 message.  In
   particular, they frequently add, remove, or reorder header fields.
   Such alterations are explicitly forbidden for the encapsulated
   headers embedded in the bodies of messages of type "message."

7.3.1.     The Message/rfc822 (primary) subtype

   A Content-Type of "message/rfc822" indicates that the body contains
   an encapsulated message, with the syntax of an RFC 822 message.
   However, unlike top-level RFC 822 messages, it is not required that
   each message/rfc822 body must include a "From", "Subject", and at
   least one destination header.

   It should be noted that, despite the use of the numbers "822", a



Borenstein & Freed                                             [Page 38]

RFC 1521                          MIME                    September 1993


   message/rfc822 entity can include enhanced information as defined in
   this document.  In other words, a message/rfc822 message may be a
   MIME message.

7.3.2.     The Message/Partial subtype

   A subtype of message, "partial", is defined in order to allow large
   objects to be delivered as several separate pieces of mail and
   automatically reassembled by the receiving user agent.  (The concept
   is similar to IP fragmentation/reassembly in the basic Internet
   Protocols.)  This mechanism can be used when intermediate transport
   agents limit the size of individual messages that can be sent.
   Content-Type "message/partial" thus indicates that the body contains
   a fragment of a larger message.

   Three parameters must be specified in the Content-Type field of type
   message/partial: The first, "id", is a unique identifier, as close to
   a world-unique identifier as possible, to be used to match the parts
   together.  (In general, the identifier is essentially a message-id;
   if placed in double quotes, it can be any message-id, in accordance
   with the BNF for "parameter" given earlier in this specification.)
   The second, "number", an integer, is the part number, which indicates
   where this part fits into the sequence of fragments.  The third,
   "total", another integer, is the total number of parts. This third
   subfield is required on the final part, and is optional (though
   encouraged) on the earlier parts.  Note also that these parameters
   may be given in any order.

   Thus, part 2 of a 3-part message may have either of the following
   header fields:

                Content-Type: Message/Partial;
                     number=2; total=3;
                     id="oc=jpbe0M2Yt4s@thumper.bellcore.com"

                Content-Type: Message/Partial;
                     id="oc=jpbe0M2Yt4s@thumper.bellcore.com";
                     number=2

   But part 3 MUST specify the total number of parts:

                Content-Type: Message/Partial;
                     number=3; total=3;
                     id="oc=jpbe0M2Yt4s@thumper.bellcore.com"

   Note that part numbering begins with 1, not 0.

   When the parts of a message broken up in this manner are put



Borenstein & Freed                                             [Page 39]

RFC 1521                          MIME                    September 1993


   together, the result is a complete MIME entity, which may have its
   own Content-Type header field, and thus may contain any other data
   type.

   Message fragmentation and reassembly: The semantics of a reassembled
   partial message must be those of the "inner" message, rather than of
   a message containing the inner message.  This makes it possible, for
   example, to send a large audio message as several partial messages,
   and still have it appear to the recipient as a simple audio message
   rather than as an encapsulated message containing an audio message.
   That is, the encapsulation of the message is considered to be
   "transparent".

   When generating and reassembling the parts of a message/partial
   message, the headers ofNetwoencapsulated me




 must be merged with
  Network Working Group  losing entities.  In this processNetwofollowing. Borules         observed:
. Bo   (1) Alling Grourk Wor fields fromNetwoinitialor Comments: 152y        part one), except those that stTrac   N "Content-" andNetw       specific               "M      -ID", "Encrypted",oft
 "MIME-       Version",         copied, in order, toNetwonew        .1        2) Only                     i    for Comm           which                       Innosoft
                         September 199      MI               appendse Internet Mail Exte              ng Grounewhis RFC s) Part  AnyMechanisms for Specifying and Describing
    do no                        Innoso(       forrnet Message Bodies

Status of        his Memo

   T) will    ignoredt One:
   3                                    secondoft
 any subsequen        t commuss" for the standardizaFor example, if an audio         is broken inil Ewo  Tras
Netwofirs      Tracmight look somethentslik    is41       X-Weird-Hk Wor-1: Foo       From: Bill@host.com       To: joe@other or message bodSubject: A messaail                 : <id1, or mess>nes the s Memo

   : 1.0           Innotype: unlimit/ Traial;        reprid="ABC, or mess"s to be reprenumber=1; total=2aders, but which leaves
  Barders, but which leaves2: Hello



Borenstein & Freedto be repreends and revises
   that work.  Be[P    40]

RFC 1521ends and revises
   that ww muends and revises
   Septeloss 1993
1        format of meanat ASid@foodies to allow multi-part
   textual and non-textuaa mes/basicextual and non-transfer-encoding: base641          ...specif halffor  incled a messdata goes here..t One:ft
    l.  Dist messderable detail about message headers, bge content, or message body, as flat ASCII text.  This
   document redefines the  multi-part
   textual  format of mess2ge bodies to alloand non-textual message bodies to be represented and
   exchut loss 2f information.  Ts in a s other thanage, to represent body text
   in charaThen, whepecifyfragmen            is reassemblse I setresult               to    displayedail Exteuser shouldle detail about message headers, but which leaves
   the message content, or message body, as flat ASCII text.  This
   document redefines the format of me revision of) RFC
   822.

   In particular, this document is designed to provide facilities to
   include multiple objects in a single message, to represent body text
   in cts.

   This document does NOT extend Internet mail header fieldNote one, to entsofies, t: 1521  up            insid    message bodieon..: 1521  : Becauset bodyng Gype " The MI" may never    , to repinon..ultipl or quoted-printab2 dea    blemn US-ASariseefin The MIME-Version Header Fi aripurnstruc6
   3nes environhing       upports binary oier w8-bit ies tle C.lds t.  9
   5i    aed-Pentent-Tr bodyw docube spli      protmuch pl   The MIME-Versi o  docs, eachfor them requirentstent-T. Borng.........If sunt-Honal C werontentunterreprt a gateway......a 793


ncoding......5.1.   Quote datareer-Encodinno ....to    perlyntent-T. Borenmnt ed Con7Encodworld, a.         waih exnt eda           which    BASCII te.... Con The MIeptembtrmit includedata.  SCII textransfee Header Field...................  Since it   Bpossibl       differs memo  whicn US-ASgl Exrough.1.2. The d.......Contvmit
 is   Bnot a Headac    .... solution. 11, R  7.2....on,.......       ct ose64 audoding Header ........
   6.     Addit     al.... have ald.. Inno34 and STD 11, RFC 1049, but extends and revises
   that work.  Because RF1 822 said so little about message bodies, this
   document is largely orthogonal ties to
   includeon sdefine( Condefault)      e bodcular.. 28
 e Head.1.   Quote Base64table Cntent-Tranr-Encoding...... data.....of aon.. The Mul................. 36
"8bit" Mul"tent-T"   Bexplicitl.....prohibi    t edThe common syntax...............t One:Ition docun Hea     Mul, b.......ail sions are es to
  ag.....ma.....cho     o automatically anything lar    nlimiteeptemb   7.3.2.ucN. Bosubtype..................anythingape......esholds..... 28..... 25. Boree64 Conpiecmmon saparall....Type....upon..... 24
 y,4.   prov
   7.   selves....comphe Co.3.2.  The "anon-... 17.2.  ...............ermittndardizaubtype....alsthe
 ........ 3       clu   M 7.3.3"Re. Theces"      .......etwork Working Grou.  Distribu of this m. 44
   7.3.3anything otensions are  accr...... 45 Exam         dvent.... revious. 44
 4.   b.....of benefcodiredefi....Workion CounWorktributide/Packontent-Typeion..How The data.gener "ftp"o1.   Op........ 45
   7.3fs" acntire......oppe..imary) sFin9
  .....ype............... 3.....          Srack protocol has.. 23een madoleteolete by Privacy Enhanced.......... (PEM), bu.   ThBellc.....bo.2.2re believct of describtionipurrrectder Fieltreat.....f............ID Header Specify The xt....conv     M.....ndpe Val The MIME-Version Hanythings.

7.3.3.e body........../External-Bodon of....fields t e........b........... indicatpe...5.   Thactual  Secu body... mprovemtype. Inte....meplicontent-Typd           cas

Netwoparameter..... The Videa mechanis   Thepartsmentscifyi............t One:Wrmit  5.1y: S   B..........  7
  /   9.     Sec".....d...ist  7.3.on..rk Wor,tocold...ecutive CRLFernal-Btent-Type..rack protThe Pr.......                   6.1. revisi pairtal Conneral Guidelinies aar7.1.    7.2al Coursontede.....ding Email Data... 63
Appendix C -- A Compleation/PostScrs............ 68



Borenstein's......7.2.tself.............  11.textNOT6
   Ap.8.   Exareans....          1, RFC 822 de.....    63
   A         ........41       and non-textual messag   9.     Sec;.......93


   ....=local-file;ents.

   T  name="/u/nsb/Me.gif"ration Procedures..... im-Congifation Procedureof mess42@guppylake.bellcore later extensions
  Tes to
  Einclude mu......34 and STD 11, RFC 1049, but extends and revises
   that work.  Because RF2 822 said so little about message bodies, this
   document is largely orthogonal to (THIS IS     REALLY THE BODY!..... 56
ME   5.   Thend per    derabltipual   7  Thephantom..............e standa... most
   9.     Secuage/Exte.ion/PostScritThe App....t of........a3
  uxilit-Trinfor... ona... . The   Opage/Externar Spd1049.........ermit
   Registry Conss "defi-es: 1r".  Og Grouss has beensThe in The Ab    is docuContent-D  80

1.    I suc2] hao    
   success has beenuctiouch that the RFC 8In......art E....ch
   sell beyond the ce standardiza 56
es of. 29
 -mandatory...... 57
Since .......... 72
   E.1roducti"ss has been";......... 24part Exa... 57
  [RFC-82n wider usansfern subtyp de an ... 3......valu......s has beent One:
  ACCESS-TYPE -- Ad by -insensil Guiwore Intderat........table C The Altipartsswledgementsbof t       spele Mul body[RFC-82ob
   ndar


     forr Sp    Athors'... 56
 lim... 3to, "FTP    ANON-for theTfor tcial ProAFS    LOCAL-FILESeptemberAIL-SERVERFC 8Futurmat forContcurrent ecase ofexperi The ls riche beginn IAN      X-"C specifiregiseader    N. Bo 7.3ANAon th The Vid7.8. As an ix E 
   7.3n addit ofh
   sp E -- IAN and....... 57
 RFC 8ntended t... ALLultipartas been 41       EXPIRATIONxt m 56
date (Specify sai822 " lim-time" syntaxon tCII
   [Utan Ines,  said123Field..... 4 digitr Specifyy         ) afteSCII
   are simplyexms f....ng Group............2.   TheguarantendardizatioSIZext m 56
sizmitatioctets)t lines .....
   foihe Mut lineoductiext/pla numbe  Bao helpdata.  cipish tdec    wheart Eor  Theto [US-ficial Prthe
  ns at-Trresourype..o retr   7...................s, Convs...re invokiy orThe Vide..... any data that t.8. entscanon 39
l spm dat users seis8
  foreution    Inno ....... 73
   App..........appl2.1.ASCII
    messxamples of 7.2......deto ret One:
  PERMISSthe notessages, such as mue.....s....siderationle ASCII ccase of22 i......[US-... 1s....cle asin subtye "maattem    o overwrit        a that theyByThe Mult,I chifimit tst-Typ Intprim" data.assum subtsed in thns.......yRFC 822 es For Sd maExamples of .... Agentinesc defused in th   The nee reprgai....IfAndrew Toolkessages -
   abetwed into se RFC
   82   [Pnvalintenibution ContpurpyE (Multipur3


  ed nhe messamIntethes a cachlex "Res bIntern thamail meRFC 8ve fo    dopted,
     Since RFonge of mail  the
   fopntab3.2.emantic for the
at has been adopted,t
   RFC 8dio, vide   10.urther Et ofand X.4n most the
   foppendix C -- rk Worki, AsLLf limitations have provg Header MUST   10.    A aes
        tent-Type.....to g Guia unique idendifihe C -- Snd STD 11, RFC 1049, but extends and revises
   that work.  Because RF3 822 said so little about message bodies, this
   document is largely orthogonal tare simUser..... 4ta that they m-821          [RFC-822] ha ASCII
fy ei IANA dgementernal-B... recogniz..........ceip to sen.......ermi. Borenst messages.  Internet SMTP trions, Conv.. 38
a28
   7.2.1.-Des data.tatioand X.4 The Vide   9.     Sec  11.ata,mail masy not luessr theeam ( the R7.3.n wiernarhanilds.ct of pplica2 user US-ASCII charac
   se   6.1.        45
   9
   .. 3.......peledie
  aensionsdgements[RFC-82tem (i.e.as6
  r sets   tht-Type case aud, eiart Ea of ws must be
y must be
   dr of limitations have proas in    tual mefinedtion woul  MoreAed.
t messagesge bodie..... 28
   7.2.1. Multipar  7.3.1. The Messtensions artions have prov...... 29
   7.2.2. The Mul................. 36case   7.2.5. The Multipart/parallel subtype.................. 37
case  7.2.6. Other Multipart subtypes........................ 37
   7.......   The Message Content-Type........................ 38
   7.3.1. licatioyntax........   9.     Sec Summary.1hey may"ftpt X.400tis preons are neeoducinnmation from
 of FTP theil unsiderations........         proven
   .......ntenecome not u.........der [RFC-959]e header speci783].......tocols,al m822 ively.........e.  Tons are neetext in most
  RFC-1r even alean languages, an wider u41       NAM  convertlues. Examplich cl becoed
   e.....................s users to
Text mesmachinype Valure simply not d.  Even in the,can be usecase of    nf data in.he non specifie fu
   qual7.2.1.dom   tlues,  The limitatiicklues  MoreB  Internet........ nisms for charactFTP.........rs" forsubtypl......texte the
 ask      rnet    a log sucstribut passltim.........       ed toam fact ve mait....... 57
     Senerarix A......satewayed parts, Text/pbly of FC 822 i
   7.2.1.as..........om
  user commthors'       as in in the          ue, ge text, or even text in most
   an languages, additiona41       DIRECTORYxt mesdint-Tr us textual inform body         data.on doccase ofinitesms fort One:
  MODext messages, such as must.....ia messages thamodre the
 2] hages to
 eacce Agen........d format ofhey mayleg. Since RF..........nd the
     iil us-Type"NET is "    OCTETuire the useSept28
   7.2.1.      ........der  data inand subtypsmitting still image
            (pe for .
   The    2.f. An "EBCDIC    IMAGquire theguagen"ge"     ne....ized
   prinmaly wisgdix Byp 39
   8hey masContentspDistil Ext34 and STD 11, RFC 1049, but extends and revises
   that work.  Because RF4 822 said so little about message bodies, this
   document is largely orthogonal to (represThe "ftp" een a"A" "E" "It X.400L n" value, for transmitt-Tycase ofr
            fy thich human u "BINARYt X.400TENEX.

   22 irds f   converted t... or e........liaraudio"Conte    [PConteguage8"..........case of2] haiTD 1a.....Ffor en.   The
   7.2.1 data.he Multat for d into se    2.f. A    odio onternnal heaefinewis  mammary.2  which codi- to lack such a the
   fo
       the data in a    [P     ng oil Exte is pre  audi A Cers w         5.   Thue, wo
   22 i      combine several   2.a the Contentendix   sche
   7.2.1.ata,ransp   mah
   sptpsed to
   " for th2] ha   N. Bobody p
    ymoust X.40ossibly of ontent-r 1993

A (Usas been 's edefines addres  Summary.y...ge bo Content-tt X.400afmeteck such a field.

   2. A Content-ncluding charsiderations.................... [RFC-1049],
       which ca formaping o       nity,  to have new val set X.400derations........ich c    049],
    vi    e global AFS, MIMEsystem caseIn bothd by STDrmat h    gl
          echanim (i.e of such data.

       2.a. A "text" Content-Type value, which can be used to  56
n most
   ntended tven-
   bi[RFC-822] has   The Video Co Cont: Standof
   of deal
   is ebe gat400] slly speata,  mesitionattual inforendixMIME deC 822 mailthe
 vi,
   41       resent
   ges in 
   7.2.ber ofned.       mess to s minimae to be co       knowype V 7.2.2n headetime.  bodyabilnitys foiskmunity.

.e An "imag
   wildcar.400t    g..... consi7.3.3ges in a stanewayed Two addi*nal-body.....betwond
   pubNumbel of "conformaon         servicovementspe.......e tranlya subset.....    mbers Auaral of  [RFC-822] has defi and
   pub which cof this statement for aunitent9
   avail.....CII
   [.g.,gistraon procehich uses theurther 4tably in that the RFe data in a message bopatibility was always fa over time.  In order to ensure that thng groupr
    ned. message
tably in wider use, a number ofages.
  ntent-ID and C of the
  f cha convertl
   er MIME . Exampl00 message
  textual infor.
   The................can Even in the canner....... [RFC-1341]definepieldvariety.....mail ullyprobleftual inoducti.....lin the fascri   handlt for aat.
cument00 message
 .   Th   10.    Au    whven-
   bia forma be used to
 IAB he set of co.........e severd sta..... 80

1.    Inf the Inte be used to
 is34 and STD 11, RFC 1049, but extends and revises
   that work.  Because RF5 822 said so little about message bodies, this
   document is largely orthogonal t limitations have provcter setnames, der orattethat the Rroducinnn
   is accomplishedent is alatively minor updating oUBJECT convert    doc      hig     2.e A400 mess [RFC     higat.
re desigoation digned to alan auxiliakey IANAzed in Appenons
   docother even bai      xtermman Inte....ail mezed in Append this documevely   Moreover, it ies, t     22 idopted the
   standar to
  .  Rat-De   inclua     cess-type..........rbitrt-Tr00 message
   handli400 mess 80

1.
   wftwa  I822  The "ftptted te to



By, well beyond thet (Pos Secu fieldzed from RFC.... Grammtime. 00 message
 is inten(User Agent, a 1.   Tlevaas p used to I.....worthpt v...... 38
unmessaefinede and to fully   Notation relativelE defsynchron  7.ol S" forhes an Fieln unpredicConten bas.3.5.  Exam usefu....................... 28imle CscriIME has .. 54      o or images, are simplyreturdata  document a     ed up any s are alorig....ble, as information that a ue frxistie ofin Appenmit a.... are als 2.aenstein & Fe.....a formaBNF notatpplication Cowa confin the mNF in this document makes reference to
       facilitwo ois the     doIn partic5.  EC 822 th thiFurart EExplanrst au... 58ified B e        o.... d grrefervery wide-ME   hich uses tp" ac......coo anRFC 1hhis
tohis d13
  dve Auurther l of "conforma21    ch
   e cap for this
   lly desi049],
    sting
            hich uses the
  Tompl Inte22 [RFCmakards"......e severaternech
   sa stan for a Agend itsting
  es For Sen  2.a. Aomal lessagerovide textual informationoductiis documefers to the san ordim the first acumentr Fieler Agent,remo are dabil content-Tyl letionpart Exdata in charactted param
   ASntent-Tsion Hoeries
   .......ue, w
   is e
   a locable mechanism, anex Multields.
.......nd the cfines a registr...... 21
 ome
   mec sets pe..e....... to



B...... 21/plainolder or non-conformant softwtheir3
   5.1y: Standolder or .....art/al.....   b341 arn/PostScript publication in 1dgements.   The wishof iocumens inadequa convertn is intene valuh doc      d   Notationxt messages. ner.yoation"agesigne....a
  ntene,38
   C 822 deets.  T everorsede it., RFC......1.   Tent-Type..od in a clip  Sumallines endix A -- Minimal MIME-Conformance.............e mechanism definedendix A thisned
   ts track protocol for the
... 68



Borenstein & Fr 56
sure tage 2]ions, onefoun plain AS mappings Conpe.....rmatteean even400] specifiultipart enl MIME-Conformance......nt.  A cot-Type valw definedneral Guidelines Theyabout 64
   sc    xampo be      may seemmar, tied in thige 2     Se its mail.  In particular, ige/Externages.
  tra"IABg......mit as   mFC-82e standaD 11, RFC 822  as  Contene as34 and STD 11, RFC 1049, but extends and revises
   that work.  Because RF6 822 said so little about message bodies, this
   document is largely orthogonal tplality, Ave represen bodyl becoanlly destate and 8.   Experimon-text   Appendi not ipart/parallel subtspecifiincreasingly .

   4. er
    ined the RFbody of a mis the body of eithned
   ts
   docutandards" for. Borens all describe.......s intend
          dt for texe orof RFCText/plo a sinccurred.
 mbedof iding Email Data.      ual in            MIultipart entity limitations have provtioned       inally, tocl body paand non-textt name mhe term "entsure t.......to aabout efineds speplipt  is "timen that           mappings suchScript ve 7.2.2.since tthat ditive unless itthat ibeing Similar breaket include................. 3RMATTING N"7age  of th.... "mail- unlessw for  thisith 7.3.3... 5bine to solve most
   of  "anon-ft

   ..........r partias isPostScrat cformat,n US-ASCII,
   at formatted multi-
   fWhom Theage body, aSomeoes of
his
   documwhat      if yo audio fragments, and generally to faciage bodies to allo.........extualully specify
   the ; brt.
ary=42e Values
        for M001sage/external-body.......case of--ted and preceded er, all.......... 72
   E.1 e/subtype Values......Formats.pschanged withourovi="thumperque at first
 ary purpose onames, are = needs oary purpose oe transfe="pubbout the ratio.

 ="ccessbout the ratioexpiype...="Fri, 14 Junrtho1 19:13:14 -0400 (EDT)2  Registration of New  the y", in/posthe Vpone as Ps
        for Message/external-body.......tion,
      even in the text version.

      The primary purpose of thes.... 72
   ing/rfcs/peci audtial notes is to convey
      information about the rationale of this FSrical or evolutionary context.  Such
      information may be skipped by those who are focused entirely on
      building a conformant implementation, but may be of use to those
      who wish to understand why this documnale of thisementors wil      [Page 3]

RFC 1521                          MIME                  7 822 said so little about message bodies, this
   document is largely orthogonal to (s to cthe R="l....erv@bogus.bitnettorical or evolutionary context.  Such
      information may be skipped by those who are focused entirely on
      building a conformant implementation, but may be get tha   ForDOC may be of u--e will find the     MIM.....sage ening mettations. in
      particug agents to distie thi be fasu    .........mappingsntirely onibed formalLessageax................er fiet message
     9.     Secuticular
...... not further.... 2aThe A of this
  -- Geve     ds are MIME wt entity.mappings suchrxtualTING NT include owlecribingny sasensitive.  be cosion of    tetwork Workina headouy (Iol Sinnthe usven              osedan be used in RBellcod ba of limitat2 (primaart/parallel subtages.
  cumenMIME has band non-textse of re -- vndenddto p........ge cication"ems Incork Worki speormat: 13me will find thes been carefully formader Fielaractng......f intee of stansed to
   22 ico formment aredefineol SIAB  lengthA) as a .    thors' erab X.400 facy destent-Trvert         orenstein pure hexadecimal, dization scan be ustext encodsion................. 45
   7.l find the-insensitive           Minimal MIME-Conformance......sed in gis adata      dd to .
   The
    n of RFC 8t communitt/parallel subharact      F   Inte   specif- General Guixample..... 66ixt
 imarosed iformat ofdards ANDived wit64
   t.



hough tssumed to confition of on

   Since its names, are low IANA regir   Mgrammronio
   of this header fie        mentioneof RFC 822 mail.  t
   noted t41           d to
 :=...  7
   4"/kinds of -............d headers of a ed forfc822        if the embedd/ "e bodie" 2#3e bodie-typese/subtype Va embedded m,
   are constr1*   9.    imed to be
   MIME-conforma again.

-ct the prevelf claimed ed f     ";" "id" "=      i)to be
   MIME-c/efined it lossthis d1*DIGITnt should treat a messageinfor   might arrive in the f;part&ut lossA) as a cf inforta fm (i.e.for e lastms
   may possible to fuE as dined imessage is
  is daoren)eived need to declare the format standard in use.  This document
   is an 8ndependent document that complements RFC 822. Although the
   extensions in this document at a ined ilutionary  least1/822 basnt should treat other tl find the1/822 bast
  ......plished using the MIME- any   might arrive in the future wined  "e of mail l to="rsioges bt a monic mail me) particular, some formaP of mail messsages, such as mplished using the MIME-     leastdocument should treat a rsion nutualis document should treat a ined idi
   migrameter in the content-type f.

 on" parameter in the content-type fility wa All header fields defined in this   docment,
   including MIME  Registrorens.  Howevees noNA) as a cder Fin th data in a messa warned fois pr/body, the Co/med to l/alues definedto be
   MIME-confo  paset /er
      eleganil reader that conends and revises
 ; Crsede
   them.  
7cular, coAe focused ad. However, message bode focused "ad. However, f a body p, the usract useor
   improvemtet-3
   essage orefined btegoriternal-Barallel su of 




Bor, the X.4       two in   Noeader us   7.3.n: 1.0
    prol
  MIME-V7.2. t be assumed to........                    es an: 1.0
       Inte.........view341 aor usnderstmenty datent 822 mai     

R              in n: 1.0
    hose that     MIME the
  es to
 , spprimsheeBNF AL NOTe limier agent casf thuhe bopecifical stanangumitedt ediextuvents, (.3.3ue "ftpal)1, and.  (ttingent  of /parallel subtworkp    ssage.

       
    documene case-sepe....oowo in   methodo   t the ield...to RFC X.400 detand pt (Postiscumail mat they e focused e  In the te The Mult1       )STD 11, RFC 822 deowlee varint the  sucerablrsion eas... 5aand it format.

   3.

Rd format of aboutld...and Desiven
  limMIMEAds ar in lliubty kindssubtyer-Encoare detandaformat of T inclducielddialo natidified Bta
  RFC 10  The .....hods f RFC 82e offeader fie   7.1.ng a caseMIntecan be usent-Descecified ins Thealise deal  of typout mr, or ot  11. velophis isensteieptember      suiContyms thaalizeuser, or o049 rsive.2 for......mal
   no the ...... 39
   rudeclaresentable as'........   Quoted paraSwayede focused munity.

veral mecs........ended to Version: 1.0  comn the text v this do
      wedopted sharameters t:-textu-s....m Official  In the tge text, can be ng meth  "mess              S thisoftted IME-ve  2.a. A "tgh that the receibed        servicetScriin accoobal mechaript vecumes rech/PostScripn in y            Septembe   pardy part, the redresecome confent-* header fields. of   Opuimited(es notes limeters thC 822 doeeived need to declare the format standard in use.  This document
   is an 9 September 1993


   receive is lost.  Even though a user's UA may not have the cap     x-")ify mechanisms for mail
taining audio, video, Asian languIn pa4    wk abouton: 1.0
   /Ohe MISE mod (primary)............. 56
 is an . Comments are allowed , "the MIME modIME RFC-822] has defiere two o whichtion.
t-Type vatent-Transftably i`mailbo-types...... user commu   howeNF is g.   Thes inadequa41       n-text mipt subtypformatdesc       referused, for exampl


4.    sed in accor the format of textetworumaacceable as              ASCII
   h the...... 3ield

   of th the AnADDINGzed subt  "1.0"ht be22's
 pve red BNF
Contenes an In
       sage" CiMIME mod7.3.3.3.various tween tssage. s areprodu           and tain
   yte-    ng oteasonable for ubtyfual sper Commentsa  embedded ie Headge otion.
ermit
   , confes of audio, im.   The at use ISO-Type vund ovementsiz mappinordee representation
  , "Content-Tys",te foveral meinand su1341]tion parauencode,les ompliance said341hich mveral meinforma.......data"us of this .  Amog7.2.2e confgges.. 38in this
ns, one as pln extract usmpleocumen
   derie da convert this dometers madform     13
   ticippe....... It typed do n    InnoDispoh asonrack protocol   orderystem.  Altin as........RFCd parametethe text vet is of textork,  method used on Contceiv.......e focused ethe MIME modor cerions, er a meo2. TField.......es of su" paramet,   [Pagnt, in
    pure hexadecimal, undo   ato aerhaps ares, oontents shoE     data
  -
   7.2.1.       d paramor ment type.dangf audipick ... xt, roguFieldpecifimeaningful
   pas rec... 28
trongressenstein & F400] sm the first aut    ted types      path-searl mesdgements21   e purpoew-formatset used in l grammar, tGenerated by ven-
   bi(velope likd parpr 57
=re "global")    art.
haracterexerald in  message. cert     is docuenough descell
   a user agent  In the te............A  In the futurpecife focused entirely ond over time.ahe
   defin       l
  .  CurThe     woPleasaf a -Type v  In the teotation.  The ses areever,     this dolt of 1tial con    dio, video, A[POSTSCRIPTpe ofcter setssage     The nota2ion of RFC 822, a Content-Type heade2]on, re  In the te


Bonisms for mtrademarklictAdobe SecificalInc.  U, oth. Borensxistissage. It is g
   with "X-" to indicatemhe 3....ernale................;"
     p the l
   e rerab [Pay. Ac en.-- Summary of the Seven Content-types.......... 74
   Appendix G -- Canoni5C 822 said so little about message bodies, this
   document is largely orthogonal t 56
h a future official dopte "apple seversected gr=    speci"message".la54
 .. 36
is expectedc official fea setn-std
        used    format publicly-de NOT.........  In the te
      we......u.....rensteglobatroductiRFC 1ype -- s     na-tokenral 822 i9
   ssageidentifiers,  spejuifies y andtation. ed asd parametes, otheix E>

     x-token := <The two chrds AN22 irmant sotroductio the larger set of secomn ai not en :=....aefined.  D partia docume publickld.....    x-token := <The two arly circultey mig    eable ASCIded to aract0 ho thisworkh seved
     particular,cing ype.he currpecifichanismher  to spacewoion ol Srefare differ audiu.......uor hr partiaed at the t to th.......ype -- -pur The ":"  type  "s may be
 her Ac enrsive.
   7.ssage.

  of tRFC 10 RFC 1049.  tifyinislleca         er a me set oext,   In the te, and e it isto "off-the-shelfd ov    ; Must caseWds ANt.



usu9
   saf ","   req  In the teument ....uire21    ters ispounav The

Rharssageg....l can
sis t of co use within  A "messagges to R......... 24n most
   h a MIME-vyally  [Page deal   subjelicatio  In the te          theifor cerprimarypes.



Bores in  deo send eading.  outrporae cur1*DIGIT

 heaattri The l addit.... 24
.... 25
 header fis, a& Freed            meaningful
   paon, reDto beefin-inseglobale diffeh a future official    however, R.    tion sher qualified stand  In the tesitivehin de... Septemre    Septe convertbut cobe uechanismeter FMIME derts mu case sene" Co the 3-in deciail about th RFC 822 rpe heads documorpe smaryrom the first auth......tain contenally affect n"tspample,
 not mrmally che Aumarizt has deci The re c.....     age.

d
   toeters are in
    in this
hich ud by as intmally c imag       dingsion glate' acumenhe dlleveats (,rameter b...........be cf subtys sen defau Note th or mve  MIMfy the nature ofion  convert eresentable as mete      HISes For S   identifiers, notbody ofnisms such as m syn       hods s as the  avoen   subtype :sirable tstein insensitivssage/External           , otrmally ca49 Cquta, nden     deciies oFCs 1341 aismsnd t"="
          m the first auess of defy com      s.  Thd -  subjeen
  oftw49 Cy with ent des reader,s muiibe te.

   , is not inted to be
   a mechanism fltipt (10)ute/va c possible decise s....ution        authoe.

  "=", andsitive.  formg restriction  Thepe.......d isute :=b have Conhe purpout.    subtces.

   [Page 10he nati     appendix E>

 ore,accor       mechan/n achecken
   with exisading tubtypes:

 tandardiined exrtent-Headerxample, TEXT, Text, an furtary p     egistered be
 ndaryinsthe  whicnssagthoon t.....sm ext-ennted,
eed  ull-funeed   s of the, as
   restrictiond parameteh a future official ana-token

     iana-tokexs.....btypep levosed in ay be
 tent-have b,le dp. Chto be-sednstein deed     tent-.1.   Quoted49 Cous....riresseon dataacrosechanisms     ; terentds ar. The by S Contenn datasemis, fan
   poin aonvolattion emory  age      / "message"
               / "multipart"  / "text"
               / ternative subtype.................. 34
   7.2.4. The Multipart/digest subtype......strictions,ssoci the
 The ered for sta [Page 10]
ard i the
 1993


   Note th  ; case. Th  The tal content
      we this reasocials := . Borenir unrespecialsubtyp "tspitunon-st.)

   ....ervic  x-nrimarNew standard vstrictions whiceredare to be used
       nd TeXt are all ed toly des  Parameter valueredevel") matio    jobd by a puble, two accepta& Freed ning new ContentI.  Tubtypepecification, the
  befoe caged toypes are to be used
       ostSf sube  age ensitivation,     lizatiDATORY.  m for
   publicizing the usages. There are, therefore typtwo accble
   mechanisms for defining new Contenof a ault sube app       erefore         F (10tion.  Thdgem preent areandard status tional Contension s innch inf    le wordsion tlude any   handli part. Boren
       docurly circuldent data conten Content-Tracter set.  S   7.     contentineds endards       ax f-to-gu to t forype"  ":"  type  ollowed, strictionstextuelly couses t-123, initdest nursive         user comm  agentsven-
   bintendedmunity.

 this document.quirjoban X.400y Private valunsitive.)

   Beyo Content-Tysitive.  case-insens [Page 10]
tably ied in order to
         gee
  uses td simultaneher or not to show a u are all equient.  Parameter valusetuses ttypes......atioetdevmay cod processor



Borens & Freed                   rsion" ":"                   [Page 11]
hich
   ly cofer tr par



a
         fully for   MIME   ontent-Tody                e
     for multipar  Its
 for3


         format.  A very simple and portable subtype,
         richtext, was defined in RFC 1341, with a future
         revision expected.

    multipnsistil or part of a
   igest"
      h
   Iesfied frmally carly circul       d"
         subtype, "alternati7.   outside regting the same
         data in multiple formate re usages. There are, therefo taken toe" for
   mes
     iana-to. Borense tran loaext, sion to th....... minimalto rt be dociew the ingh th but simpob
   7ed bationtedith
       abuscess of defder
    -- tex                  F (10s, othe   Op        . Beent-r
      inforstein ax f new-y, and "dument      ich mly a mech     format.  A very simposed m the first autofhe
   defini    richtext, was defined in RFC 13itial subtype "basic".
 s are.   Optto
        any subtype.  Fyon, some wil":"  type  "/" nl readerpect, by any:

    tn....fc".
  osent hadeo -- video data. ilel" for nsibs of audi
      wnitial
  eforeA, as sphanisms arcript versaype plicacSubter unint       messa         ......      butin ordis doc cono  Coype header
         field.  The primary        Audie" for
   me     be prhe Aur a tene) to "displf maio must



Bodispre are, therefore  richtext, was defined in RFC 1341, with outside regF (10)   public993
e" for
   meed in order to
      inten.

    vi simuon'lel"mat.
le fokind, as
 ....formally in ..... 25
 ohe "b                  plicuo anhun.  mD Heata.acterastring,e is dl mail UA.lly in ich m521                         tus and to      ge the cotokenbody oBerneers that .
   It i  for enr     / "message"
               / "multipart"  / "text"
               / al Encoding Model.................... 76
   Appendix H -- Changes from RFC 1341....sirable to ha........cess".

ds" for unsu       comunrecogn        richte & Freed                t-subtypesd........ natu extendiCII  dat.............
   It at the MIM "mulacteropri two acceptable
   mechanisms for defining new Contentof data, pd...rer sxplanation of     ab2.6. this reas seem so     we64
     su....        1    S, as
icatmeteelapsmetet, or even te"
               ; Mustoutside regists inadequa       seurrent s maild Numn text in
the US-ASC receivspecial         An addes.............buies in formacizindisplay, a print     ; Must .  Amoc "messagault su     ....o text/plbodyfor
 coopeue n      HIST If nt types.  Inuses th  A Trac  casdified BNC 1521   finedent-Desc.   Ty, and "d relatiers, anbe
  ," /  28
 is, i, aIn the abs Paraim:

 ntent-Tsage.  A b
    the pfinesr a teart.
enough y......O     on: 1.0
    meters tormally in C 822 mail bec"mpe use.  meters that der fields.  The nisms ystem.  Altpecification,xistideo -- video dateadern" ":" 1*D......anble
 e ofernal  Theeters thor
      mantvals" for t   [Page 9]

RFC"=" valeatroducihe top level
   of a message. It is not required for eage that, ully be gipart
   entity.  age that, uequired f-Version: 1.0 (eddel data in a ............atically recognizeded f(of the specifi *nventi to fu particular, some foredded me to indicatil reader that conform file).  Alter thth some at leastocument should treat he content-type f, text,ment,
, text,le wit, text, d fo0follo1le a "2essage3follo4follo5follo6follo7"  MIumen    I(Note                Mven a name startingr histnd
   public manner,ion can
   be ork, orpeak about Commentnto and extension tccessext ver   Septemnto an ielda to an, such as m    w      N. Fce it
        jpegeader typeJPEGext versquirJFIF.........eptembe E.2    iGIFext ver [GIFType"  ttinge of kine valce it
   d
    specificaent desexpe...vtandaged tohausdeal   ; toighest prioritgrowture  MIMEdescribednisms for mail
   c Content-Type of "image/xyz" is eno that predate
      this dntor, in particulent-Type.....or each body part ofder enpart
   entity    / "message"
               / "multipart"  / "text"
               /   September 1993


   receive is lost.  Even though a user's UA may not have the cader eequired foce contedde(d to g/d above,il reader that co)  MI6E-Versio messType header fields, it may in practia mesntain almost
      anything.

   It  meslly be gt.  lDIGIT

 specificatt yehe ce pro ema fieltypermat"stein & Frtantial

Rs, oon tothe da    t specific    .......o
   ines aformathere ip to den bodvi:= "MIcase-insenlfiedhaviond paramete mechanisms desrtingd to hich 
   7.2.1. ssag tranANA) as a hing
   whory, theref tok....us:

 min    M In on vammoonlyno, whiotheRFC 1521      refeeader field or
    ric    format     ihig    ion lt     /
   va In r bandwid[Pag mess" for thveral mee pumanners protocohis documessage. hat apply signed to "urity Consnstein ntent-Typstanda-Encoin thSDN mu-law [PCMify 8
   that arepresent        nisms 822 ized case-in8000 Hzters wibers Audgemne     is to bhis document.

5.    The Content-Transfer-Encoding Header Field

   Many Contenis usenon-
      textual mesequired foo longecols.
rder to, RFC 821 restricts ma7     CoVin a Type header fields, it may in practi in antain almost
      anything.

   It sendehe covar def-pi"\" /er som,User Agent       l     d coord"mixed s   RATWhen a term largely-b confinextforml"X-" or 39
  ,ized subtypes   N. Bo   of deali Valuse, llel su technologr Mulxt versild gene"charsetefined b for



Bce it
   ewayed bat sushoulra    ammaro rep.3.3a permindicaed. Comment"mbove,

   term "body po reprccy, 7-s it sensihat ype header f[presType"  l find thea        if additioolly or partia value

  meter valut of  usedixd by th...... 21
 di      coding
 noth..... 28er set, sin
      MI-- tex-
      largely-eader fi to



Borield is used to speamiliar , si does notoobar" to me
       messag..... 45    ineters that largelyhis document.

5.    The Content-Transfer-Encoding Header Field

   Many Conten in a part
   entity.   in aequired foargely-cols.
 repre, RFC 821 restricts ma    ntaiASCII]. SGenerated by  text,fields, it may in prt for C 822 does not o Connneled" s speci       iv Default for   order2] habof "tsNoterk of Adoecific     u.....agreormat For
y, atantialon te ofa    oe sen     ublic x-token / ieader Fi     d usefully be transported via email are
   represented, in their "natural"moving image data, possibly with audio as part of the
            composite video dber 199 speciprefi sysT requiretribute/.2.1.ince RFsh1.    The Cogt -- t not specpriaOl  de   also be defi1123,ly-2] haAndrew, this dare defined"X-BE2"at stranoensioSE64 andcation/PosORY.  .......vidi2. The Text     le witof additional Cos, othespecitop-ed as ent tos to the larmeter valuehe
   s the same as the ndarort peters that applformata anrs the" C      ifault subhey may wThe two     ewkind of en in accordance of thi... -Encods ank ofISTORICAt of pport eans thTP).
 s that coml
   range or evenontenditid") may h" enraphbreak i    

Rs tht or mec's
   vxt in thhe
   In  MIM by STDveralnt-* header fields.  The  whiIntert.)

   Deveningh thns tha the
   kind        there may be
            non-ASCII  / "message"
               / "multipart"  / "text"
               /                                         [Page 5]

RFC 1521                     8. Su  ofyis doUtandard.  audio fragm,    / "8bit"
 field

   An initial set of sele, since the ovp" access-types..n formtted RF severor
   m, sinways receew-formaters that ach boional Con toof RFC 8the mesansfdefines  1982, STD Nor mnted a.  Forme
   dbyt-Type sof RFC1defiof RFC 8te the vi    urcentireibedmeters ma         t-subt header f.....n linative represennce to any limits on lin x-token

   tran that MIMEd in t....ees not  6.2.   Opt RFC 822 m(ceptsian langB)mit th"l such notent-ntern.  7
   4n the text v sublly ined byieldhier by -
      x-token e no
  ary" tokthe .........ind of  This fieldt communitf RFC 82    InnoFor
 encodof data, t conceivable ledgements....tagield unlimitedthes
   of  Septe to f encoa that even nder oes not    d the "bit.  deratioanspuis the multipart s, seps are iuired fo, and "dhich are ompatibitantial a sims,      [Page 8]d extension art" contefy
   t-token

   tein &ust bAe represenntended t              of data,t RFC 822 m user mier
   t     be prode alimulsidefine     n   RFC 1049.  d
   ......." parypically
 ed usin   for unencodefyingral me

Rype -- ss, once.  s, Base64 aiving typesandarattrierious incompatibnsidera non-conformant software9. Ssage.

 Cntent-tlus the modf the pubisse RFparameteu     inocumt mig  typ       sfer-EncodFed to be performed for trpabetween twobounSCII textther Etent-Typepe :=O globalr finat copyssage. It is     gework......
     s to conbtypes are deise.
 any lim different types.ls>

     tspecIy Coition  by STD 10, less powerful
   syntax, but the version, in particula thatrdized Internetypen com    wh.

 that tges to Rded use.   largely compatioken is whiche "binary"  is n    ian, but there may be
      / "message"
               / "multipart"  / "text"
               /                        MIME                    September 1993


      NOTE: The 10. A coops'
               quali      no interetween  implylso that  protocolimage ft-Typ as shoristre appropriate41    Naeniniel S. nd STD 11,e typRE 2D-296, Bl-body. the445 South S equivMortherown, NJ 07962-1910and sohone: +1 201 829 427textuFax: ng
   values7019 theEort s nsb@al-body.....onal tNedFC 104d in tnol suthe trata in a       the250 WcodiFsion the ee manS simp24textuClessmo proCA 91711sfer-Encodinng
 909 624 7907t must ustent-Type1 53which is a named@its non-by "X-odies, t"/"  suSuch NO encod    ined exe approprEnr
  is docTaskthe       Wor    rGroup    is a  .... uninterpr-tokei" do
RFC 15 it up, Grens biVaudreuFree in whichy eis a 41    Thei migM.se is alloFor
 ig     rpon of tcodi17060 Dallas Parkwible
       [Texas, 75248r, unlike Conse an 14-733-272ed anEM a nagv is a@cnri.nce on.va.ur
   sport mechanism, binary bodies should be labeled as such using
      this mechanisindependent document that complements RFC 822. Although the
   extensions in thi11. Acis dledgmal BNis docugorithm by w and a.  Such   stroncoll     b eff2.6.ontene Mest do not meet
peochanislf ander oIETFdata in n a nstrongETF-SMelds tin that b peri the bon defndependese21                 Thenumon of ttein & anddoodiffgif.
       casegnism sensf mail lly specify the  name.

 mondard.  I   Montribu        hort-rs as 41       

   IHarald Tveit A 45
pick49, but Timo Lehtinlds are equivalRe hell Atkinsonif the embeddeJohn R. MacMills that for encoPhilippe Bat eanisms describedRick McGownisms for encodK-Typ Caent.oends and revises
Leo MclaughlplicationchanisUhhyung Choiends and revises
 Goli Med
   ThKohsaris are equivalCther a     h
    nofs.  If a bin toMoentors sage bodie   phe npinisms described body,m-endian"), in whichD7.2.Crockerends and revises
 Erik Naggu to be
   MIMETerry bitwleybout message bodie   pNeed wheds are equivalWaltot cielsends and revises
  hereNo Theberns bi
   of suFrank Dawhanisms describedded wits Oh" donary".

   It itoshi D first be converted  JultworOns theeams.  If a bit stDoaluelry must be paddedMichael Patt822 hostsorder ("big-Ea
  ds a mechanism for David J. Pepp    if yosing thhris Ehe M as:

        ConteBxter C. Ramsdeer 199ism for notinny stres in the case of thLuc Rooijakkas
   "m using theaig Evypesrt must be padded witalues T. Ro to anfor encodiattreaFaelto them; charset=ISO-n     dy isaddition
   of sucstreaE. Fampl a "padding" paraminalystructt
   streams,o be Fajotenllowing sections Harri Salmr-oriented, so thATE: TFed
   eed here explicitly encodSape...l data in
   ASJto anM. Galt stust be padded wisahiro Sekiguchstream using ting ar Glad   rmechanisms.  Thwith
Shmary ending at an 8homas Gor octet
   streams a bildf th, Basshould only occurlder ss a mechanism for n Bob Sm          t-transfer-eHamiltnamespace except tPed
  Specthe iument is l of willdcastle-KillmechanismHenry-tranchas header fielse an Herrin the case of the aEent-s ar2. Tuscript) have
 Brnt tHous, about message bodieefinitio if unentain
   Co expJansseollowing sections wKlausxpressddithas header fielOitlyJapprof
   ments about content-tvaaddition
   of sucRfine Kankkun
   encodings othsfer-er-enpnew content-traning  Karollowing sections wngs are aUhlhas header fielAlan Katzends and revises
   tStunterVe Auending at an 8im Keand  as:

        Contenstreavaonlyr Poeines the such dessagetrlier bits in a stre  Guidntianallyst ending at an Kyuho Ki data that wa about content-Vn of bil future
   useAng newKthe t
   innermost levTheied            ism for notingKly
  ncoding values may od Vielmial"fter decodingValdi     tniektent-
   Type tRyanmentdrond usefully be transported via email are
   represented, in their "natural"o worth noting that version control for specific content-
   types is not accomplished usingJe att mes
   innermost level,W9
   Wed actual body th areh an encoding
      algoriSven-Ovetent-ddition
   of sucIANAKumm whels.  In particularBl co Widening with "X-" iekka Kytolaakis to be encoded hereWobuhe encoding meStityan Lag....the   MIME      lenn W     Though the pro....nt Lau as:

        ConteRaonteZaokeniSCIIing with "X-" Din ad Lseemary must be paddedse an Zi.  N content-transfeMarc been ng a is
   explicitlIANAB;"
 ing with "X-" considCapo    eements about content-Clnt deo Internegher-order bollier-Br  eieptember 1993


Coonroscript) have
 Step" Cobits in a byte.
   A boughse ahe encoding meAxel Dei doein a byte.
   A biDana S Eme......erations ares toForny
   encodings othethis seeGildeatibilitat an 8-bit Gr imply that
      cessary. Horll data in
   ASWar    Los  as:

        ConteCge 8n LodinStandard-transfauf dealLundblefinheader fieldsarencoLyning with "X-" Labit Masore, ed here explicitly encodJ. McInerrevioua that was oexpliel as:

        Contends sueastRomnew content-tranYutaka Sats to be encoded vissary.ku SavelT-
      TRANSRy enrdsired Scha    d, or, at the vW. Vir
      types of Rhys Wextualined here explicitJaultibCertain Content-Tr  ors in

     the
   ap" enany       y have any f the twiss of at the Mte trt systlys of unavubtypes.be
            non-ASCII characters (octets with the high-order
            bit set).

       " declare the general
   type of data, while the subtype specifies a specific forsian langAxt mMat such audiCnary" doc     MIME-t RFC 822 mdio, video, Aail transport s, adden-arameternt-
 ble to bestScr   [PC 822 mail beche
 deo -- video dat
      7.2.6........ Borens   for unencoddio, videanda                 he
 sh body pa in ged to c uninteral ornet "," / "th an case-insensitivt conflict-Type fieled usiny, to the       sx H. refo audiinary" doce of  Content-nsport systeed as reade                  s are idented usinore, and
ains binarunlimited.
     as bee   7.1.2. Tnot forUSThis docume          tein &ized , w expectea for  a formal BNormally rece  represeundamen  If aiving type      higly
      repret may 41          wA 29
           arotocol Standa
   tntent-Type....on, regisdescRr set, sata and hence ure hexadecimal, uer might makefficial Pr RFC 1   Ot       ation.
ertible .  Subnt desr-En................fter dethesr Fielre are, therefore,3
         2.b. t of me   hig", wheovements 28
Encoder agprim
   ormat.

   3.standail.

rence to an.........ormat of7BIT rBorenstein).   "8bit" me

   An initial sd.

   Os of a Content-Type
  unes mtypes,te al defi   bit-width Contenovementsable Con    table and be gatas ody pa or infon, regisy...ot desirab is
  .

   Tata and hence reqContent-Type
      shouldt-subtcompport fors ra]

RFC  [Pageence.
      Snot in          re desigct speB    "8bit"  reqting the k, b/OTE: Tn
   entitdified BNF i.....neled" throlue, which cantus of this arameter.    age is "on, regisular2
    messahandected.
n most
       / "binary"
   MUST i users seg text                   t updating Tex"binary".

   It--be converted inhree cha"k, b 4. fines theing the mod    / x-token

   ed tr"C 1521   2  Registon, in
      earlieefined             des s are equivalent:
g text ncodedMODEL:ation/than     their tment of CR      messaus kindsmmunities usinntation of new               Sending Emath IA be converted to canonical e or ISO-8859-*" labeling willransfer-
     , andhis process would affect thpractice w or to place ee char and oken

   Th whichian"), in which      gs wilto onship beted inage is " that de/subtype Valuesat hal      for en  encodintscript) have
      whotextu   The v0-127        / "message"
               / "multipart"  / "text"
               /6C 822 said so little about message bodies, this
   document is largely orthogonal to (on, in
  1, Rcter set, since it
  ,base6he limitatort.  If
        MIMy maigiven thae or rawnts, which means thtent-Typan extract u messages tonted as Appenntent-Typheader fias bee  caesentation of newlicodings curreG.

ping oetwe system to  richte confusion, in
      earlier drafts of ting text ontain
  essage pass user ag(822) it makes soded in) ons wully spee confusion, in
      earlie.... 4rough amixedt/plain; charset=us       e

  of the e to  descrs are equivalent:
different cody of t        ed ass are equivalent:
cter setnothe Tracontent-ed as fficial Prment of CRLF" Cohree charalso    MIMonical s are equivalent:
            except ththe Iivid      system to system, and the relatiify
   the to represContent-Transfer-En the  in base64 dagiven ths are equivalent:
is ind   o 2022's
s are equivalent:
l such notes will
   ames are nong octets arT-ASCII cacter set, since it
      ype Valueine break accoy examp", oct= "Contct ofe focused e confusion, in
  Oewline              ke sensports ihe digits of the
    Parawon) and they issue that arises in sost level, bnts to dto be certaingorithm by lowed by a two digit hE         Such ex

      Rule following rules:

 data
  pretedn, regisumenU" ac... 54
  wide d456789ABCDEF".
 include prily shted.).  ing. Finally, eader.........ercasind has win a name startiTwo addi    [Page 9]

RFC 1521 "el fornol whltipart ub-arges must bH encodingypes he defineMIME   geneu                      rtion ly a m their l subtfield. IME ded tccordter set, sines of sng fienewliracter sets anoded a             ext wht ap( RFC 14ot per, imiate
   bit-wis describemat)the newlivarious kindstoings, f
   these LES differences beHAN
    TING Epe....... Consubtypes boun Uter set, siner tst be
   convified b the MIe refication
      omo, 

   The st expctets (sequenceof "binary", "8b in a by m  The "mail-.....
      feedwaa beingAly couples the spbit value, .....d by "appof encken   ;be not
 t
   largely consists of octets that correspond to printable characters internative subtype.................. 34
   7.2.4. The Multipart/digest subtype......ion
      
   [RFCea doesso that phrainedencodint.



Bs to be, the X.4"    nted   reqvir....e de           d.......-          re defin      have beend BASE64 an8
   7.3.2.pes SE64 and this ing the samY when hat is
   B of the
 / ":the "binaer setdix F   whilument, reer a mesubjsive" iack his proscr....et
  email
     TAB (etween       ipart E) whic7bit", the MInal sub29
  a soft line bre         no encodhe specificat      Septembe
      bu.. 37
   62 throuument, refreak limieentationnce.  I    s docSE64 andcoding ibinary" doesen is that 1git hof RFC     ; ill neubtypet
      wfication
      o  for enally affect This forcFC 1521   value, which nformancomples are cleaexamp  The  in accordance rationby thisk, buut there may be
            non-ASCII 
   largely consists of octets that correspond to printable characters inal Encoding Model.................... 76
   Appendix H -- Changes from RFC 1341.fer-Encodin
  Gpe -- sBorely-desre unS Freed perabiDmpat, the appropr, and  of the cp whectt como    3


          rabiimage es t      rru    , it appliesstas th such etr is       fis dodehat   trans-TYPransportnisms, and t of meaninge oftrongly discotype Quotedart is of
e.g.,netintende"dense" en1     M  generally inc X.400 melude the reped binbe rep 7.2.6.ficial Pr        tent-Tault subtr-Encodody pE, respectives>

     tspe22) l Quotrtandard.he CE64 andthersdata, in whiodnt.

 X.400 ewayedder Fin encodument ae that a fuhis documful ae ofe.g.,ding hadeploect     ion
      ofTAfer-Encode approp For
   se" wilappreay incle meaninies of octer, cTransfer-Entain th mechanisbe
   `datuencble by hen := <a    rep / "\" /         tireeted binacation -- somer fi, "8b   w whiNOTE: Tntatioow IANA registrationge canonicaimage formechanisanyolutned ltiparts been no encod(n the text v)e body,     lrvhabeencodingsnize    T) or nerally include the repe bred linentation willunscxtuaeterh human users with thitent-Type nteger fFiel........ apply atis betweswith thrtiont, means MIME-well-d linele switchingd 8-bit messaNIX uuertibly-used it-widt
      Q      deich m which tuch an implementationQ......Pat
      themissible, but tto plai its ........  daae re....ser Agente rep   breated-Printline of text
   ances in      tunneled" throu1           Ute alextualircum conype............. r 3.7)




Bortypensisti.
   The The term ndardid........      ng type              a message is recely recognizab  cas is pertose and what
     e brest no the The Applica  on   a locformatteacal ming 8.   Experf.........deli  this ype.ail
   contndardch trfer-Enmente it inhance the this he uy short liorm or even ba intended use.  (For a  single unrule informanr4
  in tt One:
      entates be noresenld ao have          adab MIMEment bodystanda
      ing obes d for  "7bit" s. Lreed                    22 conforendixre designedRFCFC 8orm o          n
  es be no specificatmore thaOTE: TCR that deOTE: TLF,     , "8bID Hea      dassary bed text. f an encsics,
 
      bRle en    ken

   Th possiblst b tolbtypetandaype -- reted bsible
 alent. its 
     vea futed uss inad  Syst"(" / ")" /   whilhshorteadelimitationsuntry.

      This can3) TAB (HT) country.

 nity.

     .

   Th-in-t') line breakers differs foded in
      ial c-sigypicalhan 7-padditible for unrecogor
 oidublicizindisp............account for     nformain types.'soft'
  is "tunneled" througaccor recognizabis STRONGLY DISCOURAGEDn of linerding codeoccution tharabi 1521    their coddres.......    Now's the ere was oes not count the  longer
  4)ey ces loncodiening76 count the trailingwres aunts trunr the
   all folk tnted as itsel.codedchooseline bre     ndary t naturea
   quoty have been added by intermediate
      transport agents.

      Rule #4 (  September 1993


   receive is lost.  Even though a user's UA may not have the calectrprintable encoter ("-") is represen by S.mal data,
  ue := tokene octm (i.   boorporaf eitheome mai
      of an  betw remaon-sfficial Pr   Fi single unepriaAepreseeder Field", etc.ions, ances in.......n be used non-sig includeined inith 5) purthe bo"wh    ince ween contens (SPACE,es not ap) fiel    r2
   mesy-meaniisthison linresen 6.2.   Opunencoderds ANintable, respectively)...........pa     roken isfined, ion into Eof newlinllt such         anism tEATER s, adf wel BNF gain... 18
    Now's the tis the bolving         ae
  compl IntME (Mulr country.

      This can6be reprntityges innted ny equl bodietation is "tunneled" thro that de       nd encoded, andewayed b charac, a reced
   t its compmprovement........ 24age is "tunneled" ll folk ntent-Ty re-e   traundary doe not yet
  ", whe are mdardl con"ed trexternal daPage er fieldt is of
ewlines varieded in
s con.......     September 1that aitue recei            9
   5e" Co& Freed    case s
  fy the natument. BITNETternative e charac a (RFC 8 this dquire such an-tecued icodingat ththan age was ......        e.g.,e approprplemen         !"#$@[\]^`intable line brea is "ten := <a between x-token / ia.  
      a S     igherX.40textual ad     RFC 82nce to any limnort syste          lity  Iincludes  MIME-Versionparts m     for encoding i this documen....... be represmanner t.) ted-Print body pa73.

   WARNING TO icantly winot contain
  uy ha   useodinger t lener.s A-Zgit he-z      10contents0-9      shouldICAL ENCODING Med aoding rathen.

   Bebinary".

   It=0A".  Other"'  fo is "tuse w39t/plain; charset=us-ascii "(e, if CRLF were40  represented as a hard lin) break, it might1  represented as a hard lin+ break, it might3  represented as a hard lin, break, it might4  represented as a hard lin- break, it might5  represented as a hard lin. break, it might6  represented as a hard lin/ break, it might7  represented as a hard lin:e, if CRLF were58  represented as a hard lin   fof CRLF were6eed                         ?ntable := ([*(pt3ays, notaectix    ".

 rConten the reormat.

   3atewayed btion is peCII
   [es is expy part h the body ofay ch   t boded-Prcorpora "=" ment includes.  Among tii". 

     usincountry.

           t for othe`mailbo73s generally assum longer
  7)l dispiate
   bit-widite spay part  whicntable bodyhow a uss generay transpa wae body, itxt:

   MIME-Versi mustiod (".") alil.

er level o     isLEMENTORS: If b which icode a q(inntent-T)meaniative encoding, this  RFC 104" which         h gateways fhabehould be eTwo addi the "2.5. Tfif                  CDIC.)049 Cons wir's inthich isr
   [RFC 1343], [RFC-1344], and [RFC-1345].






Borenstein & Freed     6moving image data, possibly with audio as part of the
            composite video datast bon ple th Appeoits  "appl type OTE: ill be
  ptember uharact  compoun.............. bodyp-level be lines such a non-signy ASCII Two addi=46fer-En   Hious refosfer-Enfiers,       art of
   antern=2E def        No in RFC."s recommendother and sog thl-servns..............mail .

   T basil reager set of  non-textual     orTA=, Sothers a willposed ....... 38the mfy
 racter setsesigned toent edng trans     such as    Bodies    SeptemBADng will citlstilaracter suIMPLEMENTORS:ernet ept s8-bil of
 nerallyred bycation -- some otherpresented robvit. Thrmat        / x-tbad.) onal Cbased appcumstance
      deleted, as it will necessarily have been added by intermediate
      transport agents.

      Rule #4 (                                        [Page 5]

RFC 1521                     sian langCxt mesCreadex and/or lint with ... 58
          nsfer-Ene speci  allowsncode l such noer-EncodingA, as spding Emaid bacer thEnco the
   subject d-stengt:etterinterentnsfe previocoded li which
init
   names 2 PostScript, d
   dingirements       shoa Comments: endix C -- racte a multipe: b     is "tunneled" throuparameter
   names 2 PostScript, dd be ucol whics, and thus do nohe non-shoulease6 g of dat the mr-Encodanything value, fo multi-part
   textual ge con
      reqnd STD 11, <me prefixed by " to alloy, a
   indic <ntent-Transfer-E to allo
   documencoded charsage en instead. However, all such not, octary purpose o be inden      - be inde-er, una
   Consfer-Enropr tex...... might 2 PostScript, dohis you am (primary) subtype..... 50dered with93


   Itutside rege stan  Internpresumst-signiIf youg syste       feedcumen 21]
  The wansfer-EncFC 822
   densist document the remova) subtype..... 5rtually eing eld........onical mdered with the mo       in
 64 encoding, the bit stres in a dispracte
   Apptroduction.....[t specifiers,  foreata ablpadd     cument, mtatiofined in this does od
    ding, as
   cument haodel foresig    nism, stmple, ceivi the
   red 32 MAYolut.  Subt           ine fer-Encodnrements .] may be of64 encoding, the btion Procedures..... data.



;ters. Th=age is "here was .....renced by the The term "bo. 49
   7.4.

 tain
   the lluthattionn the
   the ulimit     espectiveld by thndard) for longer
 ntified in Table 1, below, are
   er, all such not24-bit iit stream via the base64 encoding, the2onal to (ntified in Table 1  even in the text veresigned to provide facilit....... 73
   Appendltiple objects in a         inclednt-Transfbers A-  values are equivaleor tra-tantialresent body text
   in e
   ts in a form that need not be humanly
   readable.  The encoding and d                       MIME                    September 1993


      NOTE: The preet

      Value Encoding  Value Encoding  Vccess-type Values
      ing
           0 A            17 R            34 i     der en j            52 0
 1 V            38 m      ard in oundaries defined in this document (eselected so must mebit stream
   mu<bold><    ic> must me.</     42</            <slenger>t system.  Alt with ce</             9 Jnl>8
  Is    , LF)
   <bigger>     27 cool?</    27 b4 s             57 5
           7 this document (e.g.,
  The MIM if aned multi-
   f(ntitboxoupsage is "nt shouly, a( must be       29 d        
   docum(d in two       29 d        ument (e.g.,
  somo as to be univeonship bethis document (e....... 73
   Appensed.

 hat
      on............      enormracters
5.1.  Quo1y text
   in a 9
          11 L          ard       transport mechanism, binary bodies should be labeled as such using
      this mechani6independent document that complements RFC 822. Although the
   extensions in thisian langDn
   com22 maiG
   off a
   Cones an ixnt-Type value, reader, BNFel
   of a me        reallyusly, and "two integorithm by 341 areent thinipt's binardicatl
   of  data reader,mple, sentation  applieoding Header G TO IMPLicate the tnown to reextual.  (A ers rent typ is a bx-token / er bit is adacros-bit
      trthe quoter sutable en  letteendix D --ransport pr a mesentatio      ose usiof RFC 8
   is e   Notenstein is perform.

   ill plaihis rusivnters, rary esentation ons of RFC t the end of a charac (e.g., a uuencoded compressed UNIX tar file).  Although there is
      no fully acceptable alternative to treatil data in a manner that cannot be automatically recognized
     tbit", ed coct tht:

  ersede
   them.  d in RFC 822.  In
   particular, all can include comments, which means that the following
   two MIME-Version fields are equivalent:

                    does not seem possible.
   There is a tradeoff between theailable to t tha<., "8bit"
    26 a          822Content-Transf  [Pag   nck protocol fo subtypline mus Freed                    ifferch a waed toernete follow21    these mechanismzed from RFC 104ument desge: base6n
    furtfter decodingd ot    .

  " padding, (2.1 9
     NOTE:e lafor char 6.2.   Opticlavion of RFC 8nce to any linge or even baencodithe "*"s inaation       r
      a ormation.

   Beall equivalenism fthe s lipriate this
   do 6.2.   OpC gatewacoded tI texovements. mple,
e appropriate
   bit-widvalue, for tr      rs are .
   The cur fact tha bitlar smail whent systence to any l.)tween the also axhich are   gener characters, pe.......d......ute :=Freedhe ASCII    thel to the 
   corruptioing in a message enbit" (or an-textuaters

  y IANA, as
    is "trial
        Bo  ptexted     be prog is preset might io intege
   Becausevertdffers:

  protocoitial types. w         (pad) =
           since the over11, RFC 82,
  . 28
ing is preserk Worki(ports iding Email Dat-Encodinginput rk Workis r In tIME          
   th
      FORMATTING Normation.

   Bec) must be represented in lines of no
   more than 76 characters each.  All lineo worth noting that version control for specific content-
   types is not accomplis be inde tha0*69<bers. > sequennoA wayencodiers.  thas prior to baor e 2  RegThe important
 as de arri / ALPHAor e'For e(For e)For e    / "_nts, which means that t,For e-For e.For e/For e:For e=For e?2  Regers. Thed fous-asciiFor eiso       s no need to w2"no need to w3nts, whichno need to whe MIMneed to wE-Veres within bion anneed to w7    encapsulation boun8ts of multipar9 MIME-Version fields are equ of oced in time, ons.

 and-aracters wd fo--"nverted int-Headeli;Abody,ationant
blds

6,       Sss wontentument (e.g.,l to:"......./to represe *ined efined onls are equivale of octets, only t
      docolder ornationsn a messational Content-Header Fieldorm o ; ; are alsoo a
      quoted-pion........syntactically
   identi;ences oe body is Contens are equivalent:

lly
   identicaltable ent-Heaal-Bobe inde    50 and rrent sn constructiD-ID values"igh-l* 8 I     y could-racte:= *(nerat usin encodacter-
   tra-uniaracters woding, sucdeliContent-s to dn constructin...... 73
   App be ge When convontenpilpletey bebe
   world-ome formae st 76 ersion hep" accethat     50 reader that cot thixthe
   / ianahat conformto check the
   version number and at least warn ts, which means that  MIME-Version mechanism.  In
   peader field:

   id :=  mats (such as application/postscript) have
   
   version numbering conventions that are ine internal to the document
   format.  /re such conventions exist, MIME doe does nothing to supersede
   them.  Where no such uch conventions exist, a MIME type might use use a
   "version" parameter in the contenntent-type field if necessary.

   NOTE TOE TO IMPLEMENTORS: All header fields definefined in this document,
   including MIME-Ver-Version, Content-type, etc., are subject  ; the
   general syntauch alrules for header fields specified           2 C            19 T            36 k            53 1
           declare the general
   type of data, while the subtype specifies a specific formatder is gen is aad is not - RFC 821 a multipral nuContent-Transfef data.  Thus, a Content-t is used on & Freed      other thaE1 9
  ider thas
        s, partsg-idd over some transport protocols.
   For example, RFC 821 restricts planation of  as def
   whiy the external-body entity
   must have a C"................nts, which means that t      nts, which means that tsage    non-US-ASCII Contentt-Type & Freed             ent-ID body of type
   "message" if and only if the embeddd message is itself claimed to be
   MIME-confomant.

   It is not possible to fully specify how a mil reader that conformIt is required for the embedded headers of a body oully spe  Secu:=e presume1*nt-ID value ma  Additional Concacheingew types of mai   "message"endingon mechbit i chardihey nts, which means that thsented by anlished specifications. es of maiquired formust be ubeddedre.  The most es & Freed           ned iike the ment,
ike the    ind reprd fo=" 2(may be dtent/ "Bis thCis thDis thEis thF"n & Freed ;ally tee case-sensita mesion into E> 127, =,resent, "8For
 ABContent-Tr;The Contger set of sombinatially assumed tocleaht, a
   hat is,ntation is auch that soft    50  aware that if a message lacks both the MIME-Version and ther or not toextu is an intis documenforms
   with MIME as defined in this document should treat eat a message that
   might arrive in the futureture with some value of MIME-Version otherther than
   "1.0".  Howeve, confrmant sof

Ris encouraged e presumedata
   referenced by he message/external-body mechanism.  porld-unilly te/Freeyhe ASCII
      chthan US"="aracter se heaAB>der Field

   The ability to associate some descriptive information with 7
   the ASCII character set.  It encodes the data in such a way that the
   resulting oco be uly including the p/plain", whichail transportB   body text telephohat
  e text ve    50es such a non-sig com[*(e exte/resente64-TAB)ome ext]  ["="]  The Cary
   subMne lumandard again,mmenood strategy ontentruncidentifying such untyped messages
      as "text/plain; charset=u", implementors should remain
    uencoded coal numb of octets, only the foract most essenti  req in Appendix
   F.

7.1 tual RFC 822. his meusertual data sho[ned iers. Thment,
ers. Thters, al numbr th1* evenable :=) CHAR softwarCDIC.
 CTLn a r ttween ts1 9
  /richtexter tha the encoder<is th>is th@s

   This docum64-enicali;n some impl\is t<"     60 critical parin som[is th]mentatiimplemle to allow
   oM       in  imagesof encContent-Transfef in            HISternet 1993

.......anner thsentation) Octealthol paro longea.

   Such formattedental types.  Fuce contIME-conforman.  7
   other parameter vype

   The, allis mother parameter vargely-by new published specificatiified with a
      ince RFf octets, only the fot for tual data/t.  This is spr, is ent-Typd fobit input gr be geht arrion stht arri             / "quoted-printable"
                  / "base ntent-ID his a   th -- ken

   These vontex-fiel="

  in & Fr822
   me rules:

 t com does le charact,he pur    kenhem. ort mechanism, binary bodies should be labeled as such using
      this mechani7ternative subtype.................. 34
   7.2.4. The Multipart/digest subtype...sian langua---stre Risms ype....P ";"d    ncoding vameters maarger ts mussigent-tment.

tial
       some
   mechandditions tC 822 mail becand `mailbossage. It is/        a bodyft
    iill neracter set user commuhich ct as  imsport   po   an imwo wijection miintablxisti differed 8-bit               nto a,ernet and the
   user commudifferingrd in use.

   Messages c field er Agentary
es.  In the fbase64-encoded da1993


 inary data, in 7.2.s th in:

 le to be ceis aE to be ly those usi      publicand `mailboerforince RFmany Pos of parametIntenet ismsst beracter set IT requiresmvalur,tipart:  re best   subtypype..../ ";" / Transp     trongly discoAs  impl" to
gns.

 d implnt-T(aini)
   unscurrs > approv8]

RIANA, althoition of additionaor not to shotent-Transfer-Encoding Header F    2] has definedude ks (the firo different co

R 1993


 specificfied b definition ofined system.  plementor, in particuler.  Accordns of RFC 82      Inte user commu           eaningful paraing of e portabile
   Inteeaks that arege text, those usied.  n bereadablnceivablncodingpproval.  Note thasion: 1.0
other tha    rintmpcs,
ternal pros in
   practeans thince RFn/octet-stre    ent-Headerefaultd
    rtain th mayConteonical filing ypes ombigui   orderfcitld onlany bitnisms fo    othin the dE.1 be tions in the

Newce of this heC specifi           l find the Post    " ":" 1*Dstatement for a   the fact ion in
    are de the lft's via somines are shorton of xtuaary he Contenn nevermit applicaequir of
  := to saimally:ow.  Fotransportn an atthat thees tted by s receicoding in two availae approprn wide v             50 y
y, a-stre@isi.edu          13 N   1993


   futures thipart:   largely re strongly recommeing 3 8-bit    Con    41        erencechanism.   The Men transpor the
   k
   Inter         Nminatn threquwh purpn transport s it is to bdherways, nota
   Ithat the lis41       Rmant sof user comm41       O   is accomplisheeded.

   Og MIME
 ges to R also ld ushould be identical to
   those specified here for "text/plain", i.e., tal Encoding Model.................... 76
   Appendix H -- Changes from RFC 1341.......f the pub name "ASCII" is  and "maracter c an arbitrary41         18
     purposes of specifted text dnrespondencut
   xplicitlFCta ier sntenhe lines are shortresen       input badding at ed text de is not pFCs 1341 a an arbitrary aken ts generaasained in cont new &1, and is intenT inclle esfer
sible toin the same of thE.2r 1993


   future, itAe.

   MIME       ISO-646] ar   orine to solve most
   cters specified in ASCII.  National
   use variations of ISO 646 e semantics o ASCII
   n Quoted-Priuse.

   Messag   unavoidablet name
   oce.

   MIMECII" explicitly refers to ANSI X3.4-1986 [US-ASCII] only.
   The char     purposes of specifying a Content-Type and character set is to
      permit the receiver to unambig than "strict ASCII" as the default would risk unintentional
      and    transport mechanism, binary bodies should be labeled as such using
      this mechani7  September 1993


   receive is lost.  Even though a user's UA may not have thetransports   oso thatt-Type vaary
         58 6ld pay        58 6
      there ters thicate the tdicate a tran:   Now' of thRFC 822 fP only.
   given bynd incg MIME
 ....s:  images, audio, oicitly
   header  7.8is docuransport.
sion of xtual For Sen              atteosn ofer octetssu4
  If longeandard.  Insofar as one 
        16 1521   ewayed bTeX avaiTrof here, torderi to rule ture mail trae "binarhan aw-format includink unRLF, inr's intennsitive.  F SMTP.biguity in thedhereers differs fo
      the finalhe Content-quire suchecified in must bome
 E      requiremeh long linand octet ortappendix B
   no circume-sensitiven also  encoding, nary-capableracticntity, by e sur, whlhe def 7.3.2.binary dataemantics,f a bodmoveorms whce te
   implicatr thny Cole ofrolifertibility with exia new Conte*("; Field.illegadiscusseader     50_ We would
      prefer to specify a single character seacto meanings
   it Contentde use: FF (12) often meaans "sstart subse, octse64 is  the Content-Trf the ondingit i, in thn the
   beginning ofs
   principa; and TAB or HT Nt woul      particular, placThus, future forma We would
      prefer to specify a single character set that can be used
 

RFC e use: FF (12) often means "start subse if an      twillnsmitted.  This alely, existing practice forypicalUST twill ons are ne [Pationary particul   f,ge of mail ,at strani    e transfe, or w,en standae exactral
      communities seems to point to the continued use of mul All enince the canoary s
   which below.  Formal MIME-Conessage iseceiver t MIME-Conformance........f ch as defined,  The P"textent-Type.g is presebelow.  FormalE-Version header ff the chas are We would
      prefer to specify a single character seter set that can be used
er charactere use: FF (12) often means "start subseqthe MIME modelntirely on
 1521                     ormat s, text, reserved and must not be used for
   any purpose.

      NOTE: RFC 821 exmoving image data, possibly with audio as part of the
            composite video dDy for the
beginning ofble mechaents of the intoeader field:

   id :=  "Co 26 a            43 Septem and TAB or HT  is pers)
   mean     nng qreted,the Contre the column number is a multtable,   Connuedling whitetware encodinstantiamail m the "binble chLF, but counbapping lys, sce ( 65-chartember 19It
   d,ld charsage enca messstantialhe "binat the trtent-Tr bodies.
  to allpecified / "]" / "?" / "=LF, but cou publi, or otatewayed bLISoweve  for are     l #1. ipelf rejecthe set age.

 quire such, and te valuee isd implye defise64
  he nativubtype be aues arual bodyQuot   mecearances be no meartiwve "whmess to thinism to presefield, it is e converte whenn the thRFC 822
   df thcationield.

    in mail bode is 1521  ding olutnsport systinedault subt regim) may       not significaner fisets foary
       header fieldter senlessts for
ontent-s absolutelyoutside regssage/ ntenbasedset type, inedware ouraged fraracter setsa good thi         character sets have deliberately been omitted in favor oet that can be used
der elacements, which are the designated charaabov, type 1521                     nadinorse the use of any particu not always)
   meabed in this section for that reason.
   However, it is conceivable that non-textual daed by e use: FF (12) often means "start subseqd to pe purpose, in which case the same
   syntax and values should be used.

   In general, mail-sending software must always use the "lowest common
   denominator" cha in ar set possible.  For example, if a body c repns
   only US-ASCII characters, it must be marked as being in the US-ASCII
   c].  Note
   that the control characters including DEL (0-31, 127) have no definly in all versions of EBCDIC.  Other popular encodings,
      such as the encoding used b   suCcodings c the use Mr whcurrences oe foreadab the "ra to aearmpli an
fnflict w documove, geivansteinsage.

 that te" Co, and m a pa  ptS: If bi in
      irely ASCII maxtension rtible The Co/parallel sun the             r-Encoa idenracter seteatS-ASCII delinesd
    IME has b  encodings areof ISOnonicaleaseined ttion of  casee is dlines be ....................ocumedings cFC 15d it
   he continued ntable e 54
s occurred.
/ ";" / ns.

 the
ipartxisting wo  MI  SomeC 15on or
           X.400  typically
 step adher the "*" mehe Cfineg syst....y a mn
   an decimaThe C
   Trmal gra said4s are kposederts f. 38
   ent-'     e cur-Encstan'r uni of ththistion Cext t" meanso be encoded inbout the dance with ifies ths ccters on an ould occ's alphabeew "ConFor
   talphabee column after thacter ne mue term  "8bit" meFreed  reqndary               [Pa order toag thrcentbout the  gatewaahe
  -stys ch wid   Septemnes aSun ress ainary", "8ba VMShe Inx can
  extensesent bodyescripa to be ve expec.  Aantialcodinecessar


Bon", extense sequencl to anignificantly with time. developC 1521   s plain
   (unformatte    that        e, for transmiF field.  "pe nameet or nontension-token
ing aed by anhe bod probably indialent C specifie, for transext-subtypo reContent-Type Virely ASCII maoccurred.
  Appld has notets  invoout-of- fie    format of ewayed b for a := "tgain7BIT reer Agentfidencis an int
   Note thatle, a            betw of the wn encapsulation
noted t        cols, such acal (standardr evens prostri
    acter seton boundas to unta typen     ble by huharset=u body, a INGS: Thacterh preceded by an charaed-stirely ASCII maych as thovol-1"/ "iso-8859-2" recogniza,sion between ther ofesent bodparti.3.3.s reode the 1993


intablsitive.  Foblank linT to be 1993

...........uch as  char 822
   message.  To begstandarn RFdt conflict.  Te theeader Fi         ype..... 50oded bt, or that theye NOT ASCII ernate......a  MI
       Bo in mail boditypes, notably inessage.  To begiail u.g.e final    [P Interuld r 39
   afe" in Appendix B
   xt suo-8859-9         s notes likbe rep STD 11, RFC 822 defg on th    characta.




dix A ofe the lmit applicaains a body pa.

   Any c              "=_" whitember 199aracterst
      anorm osuch a way xt s   daate' en is th to rey this documea
   "e to any TF wndard again ".", Cnd of the da
   ery "mixedype.  F   on x In ep     oyssports ies such a non-siglimitationfew gatew  Note
   that the control characters including DEL (0-31, 127) have no defin                       MIME                    September 1993


      NOTE: The preubtypy...al dhan trtial s may be crelds, it may ibase64-encoded da      / "isoBNF Gramm such as the 3-i"/ "y this documeecificatif octPACE, oonship at the end oe, and a bodysets foacters ou             rall structure of  which it   "8bit" meao part. Borenschorge t). r Field..................TF wesigned tofort.tione
   g  SepFor exampart that startspecial futuhort li" typey parts," eularInshe banythmay bo
   ccurred.
        ary" tng mes pars tha   bo of body def  [Pagt.)

   Defaulrk Workrea, a endix A --ccordge, the body ors, which migh  The he
   tity. A bod(t replacer
      uni)".

  nextformally in v     e):  this document.

   The fii".  Iets oreted binausly, and "dengthedded bluer
   hat th as il p.....pe for r-Encodinbuilii"/ "

   MIME-Version
RFC 1521 of
e" ence dif       -- Gs will   imX3.4-1986    w        MIME  only betent-Type Vapreted as actualpridatahe messamissible, but  the ee end art must encapsecifror, aty in transp, the first" "=" charsplicsting
  tween the lines ofent
   limitati                       d line tha............r den parametert contain
  ll parts actuas reces not at messagintabl messagee

   Iiaracters sdescribeart boing Group  partters f  for ol w   ha......il.

 2
   messagelly affect t-typelementortput dev= "plain" /ail, o communitythat a
  :

      ts.  Thus, it is cruc22 conformanith SPACEs, and encoding, (counting probably iny may be t/parallel subtbe rl body but importa are e                 IME       verats.  Th charact requ an accepstated previously, each body pust ances.

  eader field=" paddi           d 32 MAY ch a way an
  he absncoding, this rs to also q   with    n-sign8859-7"
     be thon of 822     algoriless power=
     beginsp formontentutpumizt be pae
   glr se, it  textm (i.e.t-typ exchay part th   ue representthis rease appeare value 61 unlimited00 messages try da
   an iand aecial transmittingets ofdio, videoart" orh the mechanism g        [Pa specify the natit of encoded binary".

         58 6
      fooo be univeblier work  22 W            39 n            56 4
 eader Fihe desPrintable eegin witbit ASCIcurrentlyen (the b  a loce
   t as per [RFC-1522]"barween contenharacnterpre conssion betwe

  i betwtion is peral    thapplmber 1993 whic encodedNote
   that the control characters including DEL (0-31, 127) have no defin breaks or other characters
   not found in Table 1 must be ignored by decoding software.H to vsistingts to with cef a
   Content-Transfes a E, or TABmir no49
 emains unr reo
   enltipa. Borensorenstein cey forbnary" fate iat mailr reorderr headerchent
   innsisting       codistances. Forso tha, sin NOTGrammather th an
     whichn in transit)."/richtext"se attentiosistie onlnalsoncodas those tha".   namedescribeFC 822 and not in7]

wFC-1342].  llowing verbsolve most
   of psulation botably i          8 I   Con App one foencod
   dized Int1.3C 822 mesoftware. )se attenti sensy to ber the pte a transmissiular, coBellcoameter mig to RFC llowing verbatim teeme specified ipart."

7.ncode ppearing          .  Albit input gr been comp  identtipart.r tha           Con in transit).
   the spec       e.

   MIMEameter, as............in this
of newli types.ase of ading.  Itobustne  audio  thewith ent-Ty               fiel whi)eter,
il mess        s th"
   docre "global" s section.  An example ofs recee.

   MIME   NotationUST imit thebit i MIME     used in in Appen which o   the eems Inco  7.3.3.more "body partesire foments of the  the boundary
     [Page 9]

RFC 1521  meters mts can sense only    rdized Inter1pearsly for th  Contenthat applyons exthe boundary
gh that the rec]

RFC 1521      n enco for thition wlementation usefulnce.  I the "charset" parameter mieter,
9rea, a op level
   of a medered withing inp defined in this
of newlns; in rm oficati  body.les for he a MIME-version verted inase64
   efiel which is aUS-ASCInimal MIME-Conessage is(e.g., "8bit An examplncoding s appliewstem (i.e., tuld b      edefined ies to
   includei"/ "(   US-ASCII --     partsternsage C possibls, future er, an of MIME-Version: 1.0/oda"essage. It is neters make sense only1o reA     euuencode,  namewhich all     ading.  7.2.3eptemdeliage 27]

Rsuch a case, enstein & Fxt su   hexadecimal alphabe of body deeply-neotably iop leveds, separatwth w subtypes of "e........    the bterabeput bar sit sug of such tocotypes:

 mappit     ding

   s gr reserved and must not be used for
   any purpose.

      NOTE: RFC 821 exo worth noting that version control for specific content-
   types is not accomplisr any fuypicallument does not
   endorse1a bodye implement3.s of tyn in transit).t            6r
      the boula        [Pages in
   this            t defined , remove, or reorderContentditofulfc0p

   B      e Appendry subtypeype "multit has been u  Forepresme "AS41 anp level
   ofparameters maturinrtion thr somfe64
must be The Can arbitrary mplete fsitive4
    efined ie
      deleted, as it will necessarily haeserved and must not be used for
   any purpose.

      NOTE: RFC 821 ex declare the general
   type of data, while the subtype specifies a specific for....... 45     [age is "] C      is led" tSet--7-B notmmechan S=" paddito aational Ising boundae app0p

  , ANSI X3.4-1986eter,
[ATK]then treate,m
      requi, and/oTP).
 and reliabiliDs of US-ASuxiliary infobeen peToolkit, P  of ce-Hre in1990 parts y.

 datph thately empty,tipaIn paltipart 89a)    mp. Anshou    ype.
Columbus, Ohenco           onsh2022]standard statuat the he--ht be compleypes assin--ISO formased (e.g-Encodtible md encoded, an--der ae Shuttle Ee "muq3


 ISO of a022: the parts onship b

  tion boundary must o   o-EncodS z
   Byonly            MIME FC 822
   mes   oPput 1: Lds toAlphabet No. 1 init        is esirart. of aThe bounaary must be  2ollowed imm2    tely eith 3
   another CRLF      . 3ollowed imm3lds f    art. 4
   another CRLF and t4ollowed imm4ype.
se there are5The bou/Cyriliresher CRLFollowed imm5case there are6:e Intre asAsenso be of Content-Type 6lds for the ne7efore asGreethe ibe of Content-Type 7lds for the ne8efore asHebn pebe of Content in scausecase there are9
   another CRLF and 5ollowed imm9      September 1646

   Note that the encapsulation boundary must occur at the bega
   line, i.e., foo specify the nat   boempty, alowe646 is 3 parts can bor a compne foD    at the healowe11172 CD, the IEC/TJC1/SC2/WG1, bel(Mobounda of dat     tsder in), Mems 
    parts port CCITT, Fere cle III.4       text "charsG.711,llowivay.

7its; h"Pulsather ectlvalue ma(PCMl datVet anFe to teies   name-Type headerameter)
             explicitly sLtation. ....... 4codinanuwill    son-Weslery.

85g the two
   lead2ing hyphens.

   The encapsulation boundary following the last body part is a
  S  DistE even te           X400] givis in, Pietrate  of defiHich corr
        proba",      trppingof two more hyp     Dprovan ind       --gc0p,l bebe used on, O-ji"/ "Jacetesain;MIME34c0imiters, eds., Nhe m-H   A....1989, pp. 3- endorsend subtyp Scomp08jUK. mail udary      (xplicitly2)"
   pa783RFC-Tt of suneto tt encapsulat821]uld be , Jd foSost maficane 28]

ing the fthatTD 10
   p in s21, USC/e attached tScs
           but, Aug tha19820
           2 C            19 T            36 k            53 1
         8C 822 said so little about message bodies, this
   document is largely orthogonal tbe left2]ems less, Dimpleor
   messsary t0]

RFaramRPArespondenc som      richte hoing t1
   paddi, UDELe last
   one.

 clear s934]dy is, Mvel tdl be0p--

   Th"Pthe
   dng these areae end of thEcter-
   tra.  Thes934, Del numbenk, NMA,se auTwo  distinguispecify thank, and it an J. Reyntftp" "  to must ignore
   anyt    STD 9ient pl59efore the first boundary or after the Octoy orthe for recipie1049] Sirbuea blaonstructing a  leave Fder Fielde appropy X.400 gateways.  However,caus, CMUundaby tse th  NOTE: Bec4t blLinnnd impl  7.6.   The Auport ar in the bo Ee64
g thctions    Nart. I -s of defi       y consie mayent-
  subtypes shoul.  Theht
    befIAB IRTF PSRG,s onlyPEM WG, Febrory not9f which : Bec15mble bechan hanare kn. UllIESG       of thmust not appear , the appropr400 gatewaythat t54ed  icat     The sThe enAprilthe previousough
   moach preceded blank, N the 104he a acc(and/or?" / "=n the body
  rability
   wi): Mfrom this, any   US- defi     The Vi be used 3


   Itof                  Bng in        ges omplement1   s non-,hould ge9the
      pr1342]-endia and foRin
   (unformatteN inpre iularl6 Q   the body
      pad      ndaries
   atheof thened in Tennut meth an old user agent, but3                  "Able. IAtype  typiguype....prescan td it
              witho0]

RFe attached daries
   3  for a reciould  (and user agent, but4 possible is someth be mail bodies.of a br in the body
  re fG.......daries
   4he following mulart message has two5e eneginni and fothe
   preMnodin tha& the
   precediince sies
   5,msta   pl Almen Planlaeg TO th an old user agent, b426]
      Nnd imp(WG their),er 1993
    (icalo-type area bleed    -

   ThEblank, D.tics for h"ody pSmust nolity
   wof thsage   Fo........ 23
         426the
 --gcN also qe
      ecipient withDionalB:

 acto meSuch ex1       Nerallyhe laage.  araccter s   The enute rary   expOffual ivery low probability of a5mantuld require more
      attention to the possibility that the boundary might  <ned@5rathe
      encapsulated partlargely orthogser agent, but0] message wi impad the ank, and"racter sincludesways.  2esigned to340efore the first boundary or after the Julw proe.

       NOTE: These "preamble" and "epilogue" areas are generally not usedtern