




Network Working Group                                          J. Callas
Request for Comments: 4880                               PGP Corporation
Obsoletes: 1991, 2440                                     L. Donnerhacke
Category: Standards Track                                       IKS GmbH
                                                               H. Finney
                                                         PGP Corporation
                                                                 D. Shaw
                                                               R. Thayer
                                                           November 2007


                         OpenPGP Message Format

Status of This Memo

   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the "Internet
   Official Protocol Standards" (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.

Abstract

   This document is maintained in order to publish all necessary
   information needed to develop interoperable applications based on the
   OpenPGP format.  It is not a step-by-step cookbook for writing an
   application.  It describes only the format and methods needed to
   read, check, generate, and write conforming packets crossing any
   network.  It does not deal with storage and implementation questions.
   It does, however, discuss implementation issues necessary to avoid
   security flaws.

   OpenPGP software uses a combination of strong public-key and
   symmetric cryptography to provide security services for electronic
   communications and data storage.  These services include
   confidentiality, key management, authentication, and digital
   signatures.  This document specifies the message formats used in
   OpenPGP.













Callas, et al               Standards Track                     [Page 1]

RFC 4880                 OpenPGP Message Format            November 2007


Table of Contents

   1. Introduction ....................................................5
      1.1. Terms ......................................................5
   2. General functions ...............................................6
      2.1. Confidentiality via Encryption .............................6
      2.2. Authentication via Digital Signature .......................7
      2.3. Compression ................................................7
      2.4. Conversion to Radix-64 .....................................8
      2.5. Signature-Only Applications ................................8
   3. Data Element Formats ............................................8
      3.1. Scalar Numbers .............................................8
      3.2. Multiprecision Integers ....................................9
      3.3. Key IDs ....................................................9
      3.4. Text .......................................................9
      3.5. Time Fields ...............................................10
      3.6. Keyrings ..................................................10
      3.7. String-to-Key (S2K) Specifiers ............................10
           3.7.1. String-to-Key (S2K) Specifier Types ................10
                  3.7.1.1. Simple S2K ................................10
                  3.7.1.2. Salted S2K ................................11
                  3.7.1.3. Iterated and Salted S2K ...................11
           3.7.2. String-to-Key Usage ................................12
                  3.7.2.1. Secret-Key Encryption .....................12
                  3.7.2.2. Symmetric-Key Message Encryption ..........13
   4. Packet Syntax ..................................................13
      4.1. Overview ..................................................13
      4.2. Packet Headers ............................................13
           4.2.1. Old Format Packet Lengths ..........................14
           4.2.2. New Format Packet Lengths ..........................15
                  4.2.2.1. One-Octet Lengths .........................15
                  4.2.2.2. Two-Octet Lengths .........................15
                  4.2.2.3. Five-Octet Lengths ........................15
                  4.2.2.4. Partial Body Lengths ......................16
           4.2.3. Packet Length Examples .............................16
      4.3. Packet Tags ...............................................17
   5. Packet Types ...................................................17
      5.1. Public-Key Encrypted Session Key Packets (Tag 1) ..........17
      5.2. Signature Packet (Tag 2) ..................................19
           5.2.1. Signature Types ....................................19
           5.2.2. Version 3 Signature Packet Format ..................21
           5.2.3. Version 4 Signature Packet Format ..................24
                  5.2.3.1. Signature Subpacket Specification .........25
                  5.2.3.2. Signature Subpacket Types .................27
                  5.2.3.3. Notes on Self-Signatures ..................27
                  5.2.3.4. Signature Creation Time ...................28
                  5.2.3.5. Issuer ....................................28
                  5.2.3.6. Key Expiration Time .......................28



Callas, et al               Standards Track                     [Page 2]

RFC 4880                 OpenPGP Message Format            November 2007


                  5.2.3.7. Preferred Symmetric Algorithms ............28
                  5.2.3.8. Preferred Hash Algorithms .................29
                  5.2.3.9. Preferred Compression Algorithms ..........29
                  5.2.3.10. Signature Expiration Time ................29
                  5.2.3.11. Exportable Certification .................29
                  5.2.3.12. Revocable ................................30
                  5.2.3.13. Trust Signature ..........................30
                  5.2.3.14. Regular Expression .......................31
                  5.2.3.15. Revocation Key ...........................31
                  5.2.3.16. Notation Data ............................31
                  5.2.3.17. Key Server Preferences ...................32
                  5.2.3.18. Preferred Key Server .....................33
                  5.2.3.19. Primary User ID ..........................33
                  5.2.3.20. Policy URI ...............................33
                  5.2.3.21. Key Flags ................................33
                  5.2.3.22. Signer's User ID .........................34
                  5.2.3.23. Reason for Revocation ....................35
                  5.2.3.24. Features .................................36
                  5.2.3.25. Signature Target .........................36
                  5.2.3.26. Embedded Signature .......................37
           5.2.4. Computing Signatures ...............................37
                  5.2.4.1. Subpacket Hints ...........................38
      5.3. Symmetric-Key Encrypted Session Key Packets (Tag 3) .......38
      5.4. One-Pass Signature Packets (Tag 4) ........................39
      5.5. Key Material Packet .......................................40
           5.5.1. Key Packet Variants ................................40
                  5.5.1.1. Public-Key Packet (Tag 6) .................40
                  5.5.1.2. Public-Subkey Packet (Tag 14) .............40
                  5.5.1.3. Secret-Key Packet (Tag 5) .................41
                  5.5.1.4. Secret-Subkey Packet (Tag 7) ..............41
           5.5.2. Public-Key Packet Formats ..........................41
           5.5.3. Secret-Key Packet Formats ..........................43
      5.6. Compressed Data Packet (Tag 8) ............................45
      5.7. Symmetrically Encrypted Data Packet (Tag 9) ...............45
      5.8. Marker Packet (Obsolete Literal Packet) (Tag 10) ..........46
      5.9. Literal Data Packet (Tag 11) ..............................46
      5.10. Trust Packet (Tag 12) ....................................47
      5.11. User ID Packet (Tag 13) ..................................48
      5.12. User Attribute Packet (Tag 17) ...........................48
           5.12.1. The Image Attribute Subpacket .....................48
      5.13. Sym. Encrypted Integrity Protected Data Packet (Tag 18) ..49
      5.14. Modification Detection Code Packet (Tag 19) ..............52
   6. Radix-64 Conversions ...........................................53
      6.1. An Implementation of the CRC-24 in "C" ....................54
      6.2. Forming ASCII Armor .......................................54
      6.3. Encoding Binary in Radix-64 ...............................57
      6.4. Decoding Radix-64 .........................................58
      6.5. Examples of Radix-64 ......................................59



Callas, et al               Standards Track                     [Page 3]

RFC 4880                 OpenPGP Message Format            November 2007


      6.6. Example of an ASCII Armored Message .......................59
   7. Cleartext Signature Framework ..................................59
      7.1. Dash-Escaped Text .........................................60
   8. Regular Expressions ............................................61
   9. Constants ......................................................61
      9.1. Public-Key Algorithms .....................................62
      9.2. Symmetric-Key Algorithms ..................................62
      9.3. Compression Algorithms ....................................63
      9.4. Hash Algorithms ...........................................63
   10. IANA Considerations ...........................................63
      10.1. New String-to-Key Specifier Types ........................64
      10.2. New Packets ..............................................64
           10.2.1. User Attribute Types ..............................64
                  10.2.1.1. Image Format Subpacket Types .............64
           10.2.2. New Signature Subpackets ..........................64
                  10.2.2.1. Signature Notation Data Subpackets .......65
                  10.2.2.2. Key Server Preference Extensions .........65
                  10.2.2.3. Key Flags Extensions .....................65
                  10.2.2.4. Reason For Revocation Extensions .........65
                  10.2.2.5. Implementation Features ..................66
           10.2.3. New Packet Versions ...............................66
      10.3. New Algorithms ...........................................66
           10.3.1. Public-Key Algorithms .............................66
           10.3.2. Symmetric-Key Algorithms ..........................67
           10.3.3. Hash Algorithms ...................................67
           10.3.4. Compression Algorithms ............................67
   11. Packet Composition ............................................67
      11.1. Transferable Public Keys .................................67
      11.2. Transferable Secret Keys .................................69
      11.3. OpenPGP Messages .........................................69
      11.4. Detached Signatures ......................................70
   12. Enhanced Key Formats ..........................................70
      12.1. Key Structures ...........................................70
      12.2. Key IDs and Fingerprints .................................71
   13. Notes on Algorithms ...........................................72
      13.1. PKCS#1 Encoding in OpenPGP ...............................72
           13.1.1. EME-PKCS1-v1_5-ENCODE .............................73
           13.1.2. EME-PKCS1-v1_5-DECODE .............................73
           13.1.3. EMSA-PKCS1-v1_5 ...................................74
      13.2. Symmetric Algorithm Preferences ..........................75
      13.3. Other Algorithm Preferences ..............................76
           13.3.1. Compression Preferences ...........................76
           13.3.2. Hash Algorithm Preferences ........................76
      13.4. Plaintext ................................................77
      13.5. RSA ......................................................77
      13.6. DSA ......................................................77
      13.7. Elgamal ..................................................78
      13.8. Reserved Algorithm Numbers ...............................78



Callas, et al               Standards Track                     [Page 4]

RFC 4880                 OpenPGP Message Format            November 2007


      13.9. OpenPGP CFB Mode .........................................78
      13.10. Private or Experimental Parameters ......................79
      13.11. Extension of the MDC System .............................80
      13.12. Meta-Considerations for Expansion .......................80
   14. Security Considerations .......................................81
   15. Implementation Nits ...........................................84
   16. References ....................................................86
      16.1. Normative References .....................................86
      16.2. Informative References ...................................88

1.  Introduction

   This document provides information on the message-exchange packet
   formats used by OpenPGP to provide encryption, decryption, signing,
   and key management functions.  It is a revision of RFC 2440, "OpenPGP
   Message Format", which itself replaces RFC 1991, "PGP Message
   Exchange Formats" [RFC1991] [RFC2440].

1.1.  Terms

     * OpenPGP - This is a term for security software that uses PGP 5.x
       as a basis, formalized in RFC 2440 and this document.

     * PGP - Pretty Good Privacy.  PGP is a family of software systems
       developed by Philip R. Zimmermann from which OpenPGP is based.

     * PGP 2.6.x - This version of PGP has many variants, hence the term
       PGP 2.6.x.  It used only RSA, MD5, and IDEA for its cryptographic
       transforms.  An informational RFC, RFC 1991, was written
       describing this version of PGP.

     * PGP 5.x - This version of PGP is formerly known as "PGP 3" in the
       community and also in the predecessor of this document, RFC 1991.
       It has new formats and corrects a number of problems in the PGP
       2.6.x design.  It is referred to here as PGP 5.x because that
       software was the first release of the "PGP 3" code base.

     * GnuPG - GNU Privacy Guard, also called GPG.  GnuPG is an OpenPGP
       implementation that avoids all encumbered algorithms.
       Consequently, early versions of GnuPG did not include RSA public
       keys.  GnuPG may or may not have (depending on version) support
       for IDEA or other encumbered algorithms.

   "PGP", "Pretty Good", and "Pretty Good Privacy" are trademarks of PGP
   Corporation and are used with permission.  The term "OpenPGP" refers
   to the protocol described in this and related documents.





Callas, et al               Standards Track                     [Page 5]

RFC 4880                 OpenPGP Message Format            November 2007


   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   The key words "PRIVATE USE", "HIERARCHICAL ALLOCATION", "FIRST COME
   FIRST SERVED", "EXPERT REVIEW", "SPECIFICATION REQUIRED", "IESG
   APPROVAL", "IETF CONSENSUS", and "STANDARDS ACTION" that appear in
   this document when used to describe namespace allocation are to be
   interpreted as described in [RFC2434].

2.  General functions

   OpenPGP provides data integrity services for messages and data files
   by using these core technologies:

     - digital signatures

     - encryption

     - compression

     - Radix-64 conversion

   In addition, OpenPGP provides key management and certificate
   services, but many of these are beyond the scope of this document.

2.1.  Confidentiality via Encryption

   OpenPGP combines symmetric-key encryption and public-key encryption
   to provide confidentiality.  When made confidential, first the object
   is encrypted using a symmetric encryption algorithm.  Each symmetric
   key is used only once, for a single object.  A new "session key" is
   generated as a random number for each object (sometimes referred to
   as a session).  Since it is used only once, the session key is bound
   to the message and transmitted with it.  To protect the key, it is
   encrypted with the receiver's public key.  The sequence is as
   follows:

   1.  The sender creates a message.

   2.  The sending OpenPGP generates a random number to be used as a
       session key for this message only.

   3.  The session key is encrypted using each recipient's public key.
       These "encrypted session keys" start the message.






Callas, et al               Standards Track                     [Page 6]

RFC 4880                 OpenPGP Message Format            November 2007


   4.  The sending OpenPGP encrypts the message using the session key,
       which forms the remainder of the message.  Note that the message
       is also usually compressed.

   5.  The receiving OpenPGP decrypts the session key using the
       recipient's private key.

   6.  The receiving OpenPGP decrypts the message using the session key.
       If the message was compressed, it will be decompressed.

   With symmetric-key encryption, an object may be encrypted with a
   symmetric key derived from a passphrase (or other shared secret), or
   a two-stage mechanism similar to the public-key method described
   above in which a session key is itself encrypted with a symmetric
   algorithm keyed from a shared secret.

   Both digital signature and confidentiality services may be applied to
   the same message.  First, a signature is generated for the message
   and attached to the message.  Then the message plus signature is
   encrypted using a symmetric session key.  Finally, the session key is
   encrypted using public-key encryption and prefixed to the encrypted
   block.

2.2.  Authentication via Digital Signature

   The digital signature uses a hash code or message digest algorithm,
   and a public-key signature algorithm.  The sequence is as follows:

   1.  The sender creates a message.

   2.  The sending software generates a hash code of the message.

   3.  The sending software generates a signature from the hash code
       using the sender's private key.

   4.  The binary signature is attached to the message.

   5.  The receiving software keeps a copy of the message signature.

   6.  The receiving software generates a new hash code for the received
       message and verifies it using the message's signature.  If the
       verification is successful, the message is accepted as authentic.

2.3.  Compression

   OpenPGP implementations SHOULD compress the message after applying
   the signature but before encryption.




Callas, et al               Standards Track                     [Page 7]

RFC 4880                 OpenPGP Message Format            November 2007


   If an implementation does not implement compression, its authors
   should be aware that most OpenPGP messages in the world are
   compressed.  Thus, it may even be wise for a space-constrained
   implementation to implement decompression, but not compression.

   Furthermore, compression has the added side effect that some types of
   attacks can be thwarted by the fact that slightly altered, compressed
   data rarely uncompresses without severe errors.  This is hardly
   rigorous, but it is operationally useful.  These attacks can be
   rigorously prevented by implementing and using Modification Detection
   Codes as described in sections following.

2.4.  Conversion to Radix-64

   OpenPGP's underlying native representation for encrypted messages,
   signature certificates, and keys is a stream of arbitrary octets.
   Some systems only permit the use of blocks consisting of seven-bit,
   printable text.  For transporting OpenPGP's native raw binary octets
   through channels that are not safe to raw binary data, a printable
   encoding of these binary octets is needed.  OpenPGP provides the
   service of converting the raw 8-bit binary octet stream to a stream
   of printable ASCII characters, called Radix-64 encoding or ASCII
   Armor.

   Implementations SHOULD provide Radix-64 conversions.

2.5.  Signature-Only Applications

   OpenPGP is designed for applications that use both encryption and
   signatures, but there are a number of problems that are solved by a
   signature-only implementation.  Although this specification requires
   both encryption and signatures, it is reasonable for there to be
   subset implementations that are non-conformant only in that they omit
   encryption.

3.  Data Element Formats

   This section describes the data elements used by OpenPGP.

3.1.  Scalar Numbers

   Scalar numbers are unsigned and are always stored in big-endian
   format.  Using n[k] to refer to the kth octet being interpreted, the
   value of a two-octet scalar is ((n[0] << 8) + n[1]).  The value of a
   four-octet scalar is ((n[0] << 24) + (n[1] << 16) + (n[2] << 8) +
   n[3]).





Callas, et al               Standards Track                     [Page 8]

RFC 4880                 OpenPGP Message Format            November 2007


3.2.  Multiprecision Integers

   Multiprecision integers (also called MPIs) are unsigned integers used
   to hold large integers such as the ones used in cryptographic
   calculations.

   An MPI consists of two pieces: a two-octet scalar that is the length
   of the MPI in bits followed by a string of octets that contain the
   actual integer.

   These octets form a big-endian number; a big-endian number can be
   made into an MPI by prefixing it with the appropriate length.

   Examples:

   (all numbers are in hexadecimal)

   The string of octets [00 01 01] forms an MPI with the value 1.  The
   string [00 09 01 FF] forms an MPI with the value of 511.

   Additional rules:

   The size of an MPI is ((MPI.length + 7) / 8) + 2 octets.

   The length field of an MPI describes the length starting from its
   most significant non-zero bit.  Thus, the MPI [00 02 01] is not
   formed correctly.  It should be [00 01 01].

   Unused bits of an MPI MUST be zero.

   Also note that when an MPI is encrypted, the length refers to the
   plaintext MPI.  It may be ill-formed in its ciphertext.

3.3.  Key IDs

   A Key ID is an eight-octet scalar that identifies a key.
   Implementations SHOULD NOT assume that Key IDs are unique.  The
   section "Enhanced Key Formats" below describes how Key IDs are
   formed.

3.4.  Text

   Unless otherwise specified, the character set for text is the UTF-8
   [RFC3629] encoding of Unicode [ISO10646].







Callas, et al               Standards Track                     [Page 9]

RFC 4880                 OpenPGP Message Format            November 2007


3.5.  Time Fields

   A time field is an unsigned four-octet number containing the number
   of seconds elapsed since midnight, 1 January 1970 UTC.

3.6.  Keyrings

   A keyring is a collection of one or more keys in a file or database.
   Traditionally, a keyring is simply a sequential list of keys, but may
   be any suitable database.  It is beyond the scope of this standard to
   discuss the details of keyrings or other databases.

3.7.  String-to-Key (S2K) Specifiers

   String-to-key (S2K) specifiers are used to convert passphrase strings
   into symmetric-key encryption/decryption keys.  They are used in two
   places, currently: to encrypt the secret part of private keys in the
   private keyring, and to convert passphrases to encryption keys for
   symmetrically encrypted messages.

3.7.1.  String-to-Key (S2K) Specifier Types

   There are three types of S2K specifiers currently supported, and
   some reserved values:

       ID          S2K Type
       --          --------
       0           Simple S2K
       1           Salted S2K
       2           Reserved value
       3           Iterated and Salted S2K
       100 to 110  Private/Experimental S2K

   These are described in Sections 3.7.1.1 - 3.7.1.3.

3.7.1.1.  Simple S2K

   This directly hashes the string to produce the key data.  See below
   for how this hashing is done.

       Octet 0:        0x00
       Octet 1:        hash algorithm

   Simple S2K hashes the passphrase to produce the session key.  The
   manner in which this is done depends on the size of the session key
   (which will depend on the cipher used) and the size of the hash





Callas, et al               Standards Track                    [Page 10]

RFC 4880                 OpenPGP Message Format            November 2007


   algorithm's output.  If the hash size is greater than the session key
   size, the high-order (leftmost) octets of the hash are used as the
   key.

   If the hash size is less than the key size, multiple instances of the
   hash context are created -- enough to produce the required key data.
   These instances are preloaded with 0, 1, 2, ... octets of zeros (that
   is to say, the first instance has no preloading, the second gets
   preloaded with 1 octet of zero, the third is preloaded with two
   octets of zeros, and so forth).

   As the data is hashed, it is given independently to each hash
   context.  Since the contexts have been initialized differently, they
   will each produce different hash output.  Once the passphrase is
   hashed, the output data from the multiple hashes is concatenated,
   first hash leftmost, to produce the key data, with any excess octets
   on the right discarded.

3.7.1.2.  Salted S2K

   This includes a "salt" value in the S2K specifier -- some arbitrary
   data -- that gets hashed along with the passphrase string, to help
   prevent dictionary attacks.

       Octet 0:        0x01
       Octet 1:        hash algorithm
       Octets 2-9:     8-octet salt value

   Salted S2K is exactly like Simple S2K, except that the input to the
   hash function(s) consists of the 8 octets of salt from the S2K
   specifier, followed by the passphrase.

3.7.1.3.  Iterated and Salted S2K

   This includes both a salt and an octet count.  The salt is combined
   with the passphrase and the resulting value is hashed repeatedly.
   This further increases the amount of work an attacker must do to try
   dictionary attacks.

       Octet  0:        0x03
       Octet  1:        hash algorithm
       Octets 2-9:      8-octet salt value
       Octet  10:       count, a one-octet, coded value








Callas, et al               Standards Track                    [Page 11]

RFC 4880                 OpenPGP Message Format            November 2007


   The count is coded into a one-octet number using the following
   formula:

       #define EXPBIAS 6
           count = ((Int32)16 + (c & 15)) << ((c >> 4) + EXPBIAS);

   The above formula is in C, where "Int32" is a type for a 32-bit
   integer, and the variable "c" is the coded count, Octet 10.

   Iterated-Salted S2K hashes the passphrase and salt data multiple
   times.  The total number of octets to be hashed is specified in the
   encoded count in the S2K specifier.  Note that the resulting count
   value is an octet count of how many octets will be hashed, not an
   iteration count.

   Initially, one or more hash contexts are set up as with the other S2K
   algorithms, depending on how many octets of key data are needed.
   Then the salt, followed by the passphrase data, is repeatedly hashed
   until the number of octets specified by the octet count has been
   hashed.  The one exception is that if the octet count is less than
   the size of the salt plus passphrase, the full salt plus passphrase
   will be hashed even though that is greater than the octet count.
   After the hashing is done, the data is unloaded from the hash
   context(s) as with the other S2K algorithms.

3.7.2.  String-to-Key Usage

   Implementations SHOULD use salted or iterated-and-salted S2K
   specifiers, as simple S2K specifiers are more vulnerable to
   dictionary attacks.

3.7.2.1.  Secret-Key Encryption

   An S2K specifier can be stored in the secret keyring to specify how
   to convert the passphrase to a key that unlocks the secret data.
   Older versions of PGP just stored a cipher algorithm octet preceding
   the secret data or a zero to indicate that the secret data was
   unencrypted.  The MD5 hash function was always used to convert the
   passphrase to a key for the specified cipher algorithm.

   For compatibility, when an S2K specifier is used, the special value
   254 or 255 is stored in the position where the hash algorithm octet
   would have been in the old data structure.  This is then followed
   immediately by a one-octet algorithm identifier, and then by the S2K
   specifier as encoded above.






Callas, et al               Standards Track                    [Page 12]

RFC 4880                 OpenPGP Message Format            November 2007


   Therefore, preceding the secret data there will be one of these
   possibilities:

       0:           secret data is unencrypted (no passphrase)
       255 or 254:  followed by algorithm octet and S2K specifier
       Cipher alg:  use Simple S2K algorithm using MD5 hash

   This last possibility, the cipher algorithm number with an implicit
   use of MD5 and IDEA, is provided for backward compatibility; it MAY
   be understood, but SHOULD NOT be generated, and is deprecated.

   These are followed by an Initial Vector of the same length as the
   block size of the cipher for the decryption of the secret values, if
   they are encrypted, and then the secret-key values themselves.

3.7.2.2.  Symmetric-Key Message Encryption

   OpenPGP can create a Symmetric-key Encrypted Session Key (ESK) packet
   at the front of a message.  This is used to allow S2K specifiers to
   be used for the passphrase conversion or to create messages with a
   mix of symmetric-key ESKs and public-key ESKs.  This allows a message
   to be decrypted either with a passphrase or a public-key pair.

   PGP 2.X always used IDEA with Simple string-to-key conversion when
   encrypting a message with a symmetric algorithm.  This is deprecated,
   but MAY be used for backward-compatibility.

4.  Packet Syntax

   This section describes the packets used by OpenPGP.

4.1.  Overview

   An OpenPGP message is constructed from a number of records that are
   traditionally called packets.  A packet is a chunk of data that has a
   tag specifying its meaning.  An OpenPGP message, keyring,
   certificate, and so forth consists of a number of packets.  Some of
   those packets may contain other OpenPGP packets (for example, a
   compressed data packet, when uncompressed, contains OpenPGP packets).

   Each packet consists of a packet header, followed by the packet body.
   The packet header is of variable length.

4.2.  Packet Headers

   The first octet of the packet header is called the "Packet Tag".  It
   determines the format of the header and denotes the packet contents.
   The remainder of the packet header is the length of the packet.



Callas, et al               Standards Track                    [Page 13]

RFC 4880                 OpenPGP Message Format            November 2007


   Note that the most significant bit is the leftmost bit, called bit 7.
   A mask for this bit is 0x80 in hexadecimal.

              +---------------+
         PTag |7 6 5 4 3 2 1 0|
              +---------------+
         Bit 7 -- Always one
         Bit 6 -- New packet format if set

   PGP 2.6.x only uses old format packets.  Thus, software that
   interoperates with those versions of PGP must only use old format
   packets.  If interoperability is not an issue, the new packet format
   is RECOMMENDED.  Note that old format packets have four bits of
   packet tags, and new format packets have six; some features cannot be
   used and still be backward-compatible.

   Also note that packets with a tag greater than or equal to 16 MUST
   use new format packets.  The old format packets can only express tags
   less than or equal to 15.

   Old format packets contain:

         Bits 5-2 -- packet tag
         Bits 1-0 -- length-type

   New format packets contain:

         Bits 5-0 -- packet tag

4.2.1.  Old Format Packet Lengths

   The meaning of the length-type in old format packets is:

   0 - The packet has a one-octet length.  The header is 2 octets long.

   1 - The packet has a two-octet length.  The header is 3 octets long.

   2 - The packet has a four-octet length.  The header is 5 octets long.

   3 - The packet is of indeterminate length.  The header is 1 octet
       long, and the implementation must determine how long the packet
       is.  If the packet is in a file, this means that the packet
       extends until the end of the file.  In general, an implementation
       SHOULD NOT use indeterminate-length packets except where the end
       of the data will be clear from the context, and even then it is
       better to use a definite length, or a new format header.  The new
       format headers described below have a mechanism for precisely
       encoding data of indeterminate length.



Callas, et al               Standards Track                    [Page 14]

RFC 4880                 OpenPGP Message Format            November 2007


4.2.2.  New Format Packet Lengths

   New format packets have four possible ways of encoding length:

   1. A one-octet Body Length header encodes packet lengths of up to 191
      octets.

   2. A two-octet Body Length header encodes packet lengths of 192 to
      8383 octets.

   3. A five-octet Body Length header encodes packet lengths of up to
      4,294,967,295 (0xFFFFFFFF) octets in length.  (This actually
      encodes a four-octet scalar number.)

   4. When the length of the packet body is not known in advance by the
      issuer, Partial Body Length headers encode a packet of
      indeterminate length, effectively making it a stream.

4.2.2.1.  One-Octet Lengths

   A one-octet Body Length header encodes a length of 0 to 191 octets.
   This type of length header is recognized because the one octet value
   is less than 192.  The body length is equal to:

       bodyLen = 1st_octet;

4.2.2.2.  Two-Octet Lengths

   A two-octet Body Length header encodes a length of 192 to 8383
   octets.  It is recognized because its first octet is in the range 192
   to 223.  The body length is equal to:

       bodyLen = ((1st_octet - 192) << 8) + (2nd_octet) + 192

4.2.2.3.  Five-Octet Lengths

   A five-octet Body Length header consists of a single octet holding
   the value 255, followed by a four-octet scalar.  The body length is
   equal to:

       bodyLen = (2nd_octet << 24) | (3rd_octet << 16) |
                 (4th_octet << 8)  | 5th_octet

   This basic set of one, two, and five-octet lengths is also used
   internally to some packets.






Callas, et al               Standards Track                    [Page 15]

RFC 4880                 OpenPGP Message Format            November 2007


4.2.2.4.  Partial Body Lengths

   A Partial Body Length header is one octet long and encodes the length
   of only part of the data packet.  This length is a power of 2, from 1
   to 1,073,741,824 (2 to the 30th power).  It is recognized by its one
   octet value that is greater than or equal to 224, and less than 255.
   The Partial Body Length is equal to:

       partialBodyLen = 1 << (1st_octet & 0x1F);

   Each Partial Body Length header is followed by a portion of the
   packet body data.  The Partial Body Length header specifies this
   portion's length.  Another length header (one octet, two-octet,
   five-octet, or partial) follows that portion.  The last length header
   in the packet MUST NOT be a Partial Body Length header.  Partial Body
   Length headers may only be used for the non-final parts of the
   packet.

   Note also that the last Body Length header can be a zero-length
   header.

   An implementation MAY use Partial Body Lengths for data packets, be
   they literal, compressed, or encrypted.  The first partial length
   MUST be at least 512 octets long.  Partial Body Lengths MUST NOT be
   used for any other packet types.

4.2.3.  Packet Length Examples

   These examples show ways that new format packets might encode the
   packet lengths.

   A packet with length 100 may have its length encoded in one octet:
   0x64.  This is followed by 100 octets of data.

   A packet with length 1723 may have its length encoded in two octets:
   0xC5, 0xFB.  This header is followed by the 1723 octets of data.

   A packet with length 100000 may have its length encoded in five
   octets: 0xFF, 0x00, 0x01, 0x86, 0xA0.

   It might also be encoded in the following octet stream: 0xEF, first
   32768 octets of data; 0xE1, next two octets of data; 0xE0, next one
   octet of data; 0xF0, next 65536 octets of data; 0xC5, 0xDD, last 1693
   octets of data.  This is just one possible encoding, and many
   variations are possible on the size of the Partial Body Length
   headers, as long as a regular Body Length header encodes the last
   portion of the data.




Callas, et al               Standards Track                    [Page 16]

RFC 4880                 OpenPGP Message Format            November 2007


   Please note that in all of these explanations, the total length of
   the packet is the length of the header(s) plus the length of the
   body.

4.3.  Packet Tags

   The packet tag denotes what type of packet the body holds.  Note that
   old format headers can only have tags less than 16, whereas new
   format headers can have tags as great as 63.  The defined tags (in
   decimal) are as follows:

       0        -- Reserved - a packet tag MUST NOT have this value
       1        -- Public-Key Encrypted Session Key Packet
       2        -- Signature Packet
       3        -- Symmetric-Key Encrypted Session Key Packet
       4        -- One-Pass Signature Packet
       5        -- Secret-Key Packet
       6        -- Public-Key Packet
       7        -- Secret-Subkey Packet
       8        -- Compressed Data Packet
       9        -- Symmetrically Encrypted Data Packet
       10       -- Marker Packet
       11       -- Literal Data Packet
       12       -- Trust Packet
       13       -- User ID Packet
       14       -- Public-Subkey Packet
       17       -- User Attribute Packet
       18       -- Sym. Encrypted and Integrity Protected Data Packet
       19       -- Modification Detection Code Packet
       60 to 63 -- Private or Experimental Values

5.  Packet Types

5.1.  Public-Key Encrypted Session Key Packets (Tag 1)

   A Public-Key Encrypted Session Key packet holds the session key used
   to encrypt a message.  Zero or more Public-Key Encrypted Session Key
   packets and/or Symmetric-Key Encrypted Session Key packets may
   precede a Symmetrically Encrypted Data Packet, which holds an
   encrypted message.  The message is encrypted with the session key,
   and the session key is itself encrypted and stored in the Encrypted
   Session Key packet(s).  The Symmetrically Encrypted Data Packet is
   preceded by one Public-Key Encrypted Session Key packet for each
   OpenPGP key to which the message is encrypted.  The recipient of the
   message finds a session key that is encrypted to their public key,
   decrypts the session key, and then uses the session key to decrypt
   the message.




Callas, et al               Standards Track                    [Page 17]

RFC 4880                 OpenPGP Message Format            November 2007


   The body of this packet consists of:

     - A one-octet number giving the version number of the packet type.
       The currently defined value for packet version is 3.

     - An eight-octet number that gives the Key ID of the public key to
       which the session key is encrypted.  If the session key is
       encrypted to a subkey, then the Key ID of this subkey is used
       here instead of the Key ID of the primary key.

     - A one-octet number giving the public-key algorithm used.

     - A string of octets that is the encrypted session key.  This
       string takes up the remainder of the packet, and its contents are
       dependent on the public-key algorithm used.

   Algorithm Specific Fields for RSA encryption

     - multiprecision integer (MPI) of RSA encrypted value m**e mod n.

   Algorithm Specific Fields for Elgamal encryption:

     - MPI of Elgamal (Diffie-Hellman) value g**k mod p.

     - MPI of Elgamal (Diffie-Hellman) value m * y**k mod p.

   The value "m" in the above formulas is derived from the session key
   as follows.  First, the session key is prefixed with a one-octet
   algorithm identifier that specifies the symmetric encryption
   algorithm used to encrypt the following Symmetrically Encrypted Data
   Packet.  Then a two-octet checksum is appended, which is equal to the
   sum of the preceding session key octets, not including the algorithm
   identifier, modulo 65536.  This value is then encoded as described in
   PKCS#1 block encoding EME-PKCS1-v1_5 in Section 7.2.1 of [RFC3447] to
   form the "m" value used in the formulas above.  See Section 13.1 of
   this document for notes on OpenPGP's use of PKCS#1.

   Note that when an implementation forms several PKESKs with one
   session key, forming a message that can be decrypted by several keys,
   the implementation MUST make a new PKCS#1 encoding for each key.

   An implementation MAY accept or use a Key ID of zero as a "wild card"
   or "speculative" Key ID.  In this case, the receiving implementation
   would try all available private keys, checking for a valid decrypted
   session key.  This format helps reduce traffic analysis of messages.






Callas, et al               Standards Track                    [Page 18]

RFC 4880                 OpenPGP Message Format            November 2007


5.2.  Signature Packet (Tag 2)

   A Signature packet describes a binding between some public key and
   some data.  The most common signatures are a signature of a file or a
   block of text, and a signature that is a certification of a User ID.

   Two versions of Signature packets are defined.  Version 3 provides
   basic signature information, while version 4 provides an expandable
   format with subpackets that can specify more information about the
   signature.  PGP 2.6.x only accepts version 3 signatures.

   Implementations SHOULD accept V3 signatures.  Implementations SHOULD
   generate V4 signatures.

   Note that if an implementation is creating an encrypted and signed
   message that is encrypted to a V3 key, it is reasonable to create a
   V3 signature.

5.2.1.  Signature Types

   There are a number of possible meanings for a signature, which are
   indicated in a signature type octet in any given signature.  Please
   note that the vagueness of these meanings is not a flaw, but a
   feature of the system.  Because OpenPGP places final authority for
   validity upon the receiver of a signature, it may be that one
   signer's casual act might be more rigorous than some other
   authority's positive act.  See Section 5.2.4, "Computing Signatures",
   for detailed information on how to compute and verify signatures of
   each type.

   These meanings are as follows:

   0x00: Signature of a binary document.
       This means the signer owns it, created it, or certifies that it
       has not been modified.

   0x01: Signature of a canonical text document.
       This means the signer owns it, created it, or certifies that it
       has not been modified.  The signature is calculated over the text
       data with its line endings converted to <CR><LF>.

   0x02: Standalone signature.
       This signature is a signature of only its own subpacket contents.
       It is calculated identically to a signature over a zero-length
       binary document.  Note that it doesn't make sense to have a V3
       standalone signature.





Callas, et al               Standards Track                    [Page 19]

RFC 4880                 OpenPGP Message Format            November 2007


   0x10: Generic certification of a User ID and Public-Key packet.
       The issuer of this certification does not make any particular
       assertion as to how well the certifier has checked that the owner
       of the key is in fact the person described by the User ID.

   0x11: Persona certification of a User ID and Public-Key packet.
       The issuer of this certification has not done any verification of
       the claim that the owner of this key is the User ID specified.

   0x12: Casual certification of a User ID and Public-Key packet.
       The issuer of this certification has done some casual
       verification of the claim of identity.

   0x13: Positive certification of a User ID and Public-Key packet.
       The issuer of this certification has done substantial
       verification of the claim of identity.

       Most OpenPGP implementations make their "key signatures" as 0x10
       certifications.  Some implementations can issue 0x11-0x13
       certifications, but few differentiate between the types.

   0x18: Subkey Binding Signature
       This signature is a statement by the top-level signing key that
       indicates that it owns the subkey.  This signature is calculated
       directly on the primary key and subkey, and not on any User ID or
       other packets.  A signature that binds a signing subkey MUST have
       an Embedded Signature subpacket in this binding signature that
       contains a 0x19 signature made by the signing subkey on the
       primary key and subkey.

   0x19: Primary Key Binding Signature
       This signature is a statement by a signing subkey, indicating
       that it is owned by the primary key and subkey.  This signature
       is calculated the same way as a 0x18 signature: directly on the
       primary key and subkey, and not on any User ID or other packets.

   0x1F: Signature directly on a key
       This signature is calculated directly on a key.  It binds the
       information in the Signature subpackets to the key, and is
       appropriate to be used for subpackets that provide information
       about the key, such as the Revocation Key subpacket.  It is also
       appropriate for statements that non-self certifiers want to make
       about the key itself, rather than the binding between a key and a
       name.







Callas, et al               Standards Track                    [Page 20]

RFC 4880                 OpenPGP Message Format            November 2007


   0x20: Key revocation signature
       The signature is calculated directly on the key being revoked.  A
       revoked key is not to be used.  Only revocation signatures by the
       key being revoked, or by an authorized revocation key, should be
       considered valid revocation signatures.

   0x28: Subkey revocation signature
       The signature is calculated directly on the subkey being revoked.
       A revoked subkey is not to be used.  Only revocation signatures
       by the top-level signature key that is bound to this subkey, or
       by an authorized revocation key, should be considered valid
       revocation signatures.

   0x30: Certification revocation signature
       This signature revokes an earlier User ID certification signature
       (signature class 0x10 through 0x13) or direct-key signature
       (0x1F).  It should be issued by the same key that issued the
       revoked signature or an authorized revocation key.  The signature
       is computed over the same data as the certificate that it
       revokes, and should have a later creation date than that
       certificate.

   0x40: Timestamp signature.
       This signature is only meaningful for the timestamp contained in
       it.

   0x50: Third-Party Confirmation signature.
       This signature is a signature over some other OpenPGP Signature
       packet(s).  It is analogous to a notary seal on the signed data.
       A third-party signature SHOULD include Signature Target
       subpacket(s) to give easy identification.  Note that we really do
       mean SHOULD.  There are plausible uses for this (such as a blind
       party that only sees the signature, not the key or source
       document) that cannot include a target subpacket.

5.2.2.  Version 3 Signature Packet Format

   The body of a version 3 Signature Packet contains:

     - One-octet version number (3).

     - One-octet length of following hashed material.  MUST be 5.

         - One-octet signature type.

         - Four-octet creation time.

     - Eight-octet Key ID of signer.



Callas, et al               Standards Track                    [Page 21]

RFC 4880                 OpenPGP Message Format            November 2007


     - One-octet public-key algorithm.

     - One-octet hash algorithm.

     - Two-octet field holding left 16 bits of signed hash value.

     - One or more multiprecision integers comprising the signature.
       This portion is algorithm specific, as described below.

   The concatenation of the data to be signed, the signature type, and
   creation time from the Signature packet (5 additional octets) is
   hashed.  The resulting hash value is used in the signature algorithm.
   The high 16 bits (first two octets) of the hash are included in the
   Signature packet to provide a quick test to reject some invalid
   signatures.

   Algorithm-Specific Fields for RSA signatures:

     - multiprecision integer (MPI) of RSA signature value m**d mod n.

   Algorithm-Specific Fields for DSA signatures:

     - MPI of DSA value r.

     - MPI of DSA value s.

   The signature calculation is based on a hash of the signed data, as
   described above.  The details of the calculation are different for
   DSA signatures than for RSA signatures.

   With RSA signatures, the hash value is encoded using PKCS#1 encoding
   type EMSA-PKCS1-v1_5 as described in Section 9.2 of RFC 3447.  This
   requires inserting the hash value as an octet string into an ASN.1
   structure.  The object identifier for the type of hash being used is
   included in the structure.  The hexadecimal representations for the
   currently defined hash algorithms are as follows:

     - MD5:        0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x02, 0x05

     - RIPEMD-160: 0x2B, 0x24, 0x03, 0x02, 0x01

     - SHA-1:      0x2B, 0x0E, 0x03, 0x02, 0x1A

     - SHA224:     0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x04

     - SHA256:     0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01

     - SHA384:     0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x02



Callas, et al               Standards Track                    [Page 22]

RFC 4880                 OpenPGP Message Format            November 2007


     - SHA512:     0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03

   The ASN.1 Object Identifiers (OIDs) are as follows:

     - MD5:        1.2.840.113549.2.5

     - RIPEMD-160: 1.3.36.3.2.1

     - SHA-1:      1.3.14.3.2.26

     - SHA224:     2.16.840.1.101.3.4.2.4

     - SHA256:     2.16.840.1.101.3.4.2.1

     - SHA384:     2.16.840.1.101.3.4.2.2

     - SHA512:     2.16.840.1.101.3.4.2.3

   The full hash prefixes for these are as follows:

       MD5:        0x30, 0x20, 0x30, 0x0C, 0x06, 0x08, 0x2A, 0x86,
                   0x48, 0x86, 0xF7, 0x0D, 0x02, 0x05, 0x05, 0x00,
                   0x04, 0x10

       RIPEMD-160: 0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2B, 0x24,
                   0x03, 0x02, 0x01, 0x05, 0x00, 0x04, 0x14

       SHA-1:      0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2b, 0x0E,
                   0x03, 0x02, 0x1A, 0x05, 0x00, 0x04, 0x14

       SHA224:     0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
                   0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x04, 0x05,
                   0x00, 0x04, 0x1C

       SHA256:     0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
                   0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05,
                   0x00, 0x04, 0x20

       SHA384:     0x30, 0x41, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
                   0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x02, 0x05,
                   0x00, 0x04, 0x30

       SHA512:     0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86,
                   0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05,
                   0x00, 0x04, 0x40

   DSA signatures MUST use hashes that are equal in size to the number
   of bits of q, the group generated by the DSA key's generator value.



Callas, et al               Standards Track                    [Page 23]

RFC 4880                 OpenPGP Message Format            November 2007


   If the output size of the chosen hash is larger than the number of
   bits of q, the hash result is truncated to fit by taking the number
   of leftmost bits equal to the number of bits of q.  This (possibly
   truncated) hash function result is treated as a number and used
   directly in the DSA signature algorithm.

5.2.3.  Version 4 Signature Packet Format

   The body of a version 4 Signature packet contains:

     - One-octet version number (4).

     - One-octet signature type.

     - One-octet public-key algorithm.

     - One-octet hash algorithm.

     - Two-octet scalar octet count for following hashed subpacket data.
       Note that this is the length in octets of all of the hashed
       subpackets; a pointer incremented by this number will skip over
       the hashed subpackets.

     - Hashed subpacket data set (zero or more subpackets).

     - Two-octet scalar octet count for the following unhashed subpacket
       data.  Note that this is the length in octets of all of the
       unhashed subpackets; a pointer incremented by this number will
       skip over the unhashed subpackets.

     - Unhashed subpacket data set (zero or more subpackets).

     - Two-octet field holding the left 16 bits of the signed hash
       value.

     - One or more multiprecision integers comprising the signature.
       This portion is algorithm specific, as described above.

   The concatenation of the data being signed and the signature data
   from the version number through the hashed subpacket data (inclusive)
   is hashed.  The resulting hash value is what is signed.  The left 16
   bits of the hash are included in the Signature packet to provide a
   quick test to reject some invalid signatures.

   There are two fields consisting of Signature subpackets.  The first
   field is hashed with the rest of the signature data, while the second
   is unhashed.  The second set of subpackets is not cryptographically




Callas, et al               Standards Track                    [Page 24]

RFC 4880                 OpenPGP Message Format            November 2007


   protected by the signature and should include only advisory
   information.

   The algorithms for converting the hash function result to a signature
   are described in a section below.

5.2.3.1.  Signature Subpacket Specification

   A subpacket data set consists of zero or more Signature subpackets.
   In Signature packets, the subpacket data set is preceded by a two-
   octet scalar count of the length in octets of all the subpackets.  A
   pointer incremented by this number will skip over the subpacket data
   set.

   Each subpacket consists of a subpacket header and a body.  The header
   consists of:

     - the subpacket length (1, 2, or 5 octets),

     - the subpacket type (1 octet),

   and is followed by the subpacket-specific data.

   The length includes the type octet but not this length.  Its format
   is similar to the "new" format packet header lengths, but cannot have
   Partial Body Lengths.  That is:

       if the 1st octet <  192, then
           lengthOfLength = 1
           subpacketLen = 1st_octet

       if the 1st octet >= 192 and < 255, then
           lengthOfLength = 2
           subpacketLen = ((1st_octet - 192) << 8) + (2nd_octet) + 192

       if the 1st octet = 255, then
           lengthOfLength = 5
           subpacket length = [four-octet scalar starting at 2nd_octet]

   The value of the subpacket type octet may be:

            0 = Reserved
            1 = Reserved
            2 = Signature Creation Time
            3 = Signature Expiration Time
            4 = Exportable Certification
            5 = Trust Signature
            6 = Regular Expression



Callas, et al               Standards Track                    [Page 25]

RFC 4880                 OpenPGP Message Format            November 2007


            7 = Revocable
            8 = Reserved
            9 = Key Expiration Time
           10 = Placeholder for backward compatibility
           11 = Preferred Symmetric Algorithms
           12 = Revocation Key
           13 = Reserved
           14 = Reserved
           15 = Reserved
           16 = Issuer
           17 = Reserved
           18 = Reserved
           19 = Reserved
           20 = Notation Data
           21 = Preferred Hash Algorithms
           22 = Preferred Compression Algorithms
           23 = Key Server Preferences
           24 = Preferred Key Server
           25 = Primary User ID
           26 = Policy URI
           27 = Key Flags
           28 = Signer's User ID
           29 = Reason for Revocation
           30 = Features
           31 = Signature Target
           32 = Embedded Signature
   100 To 110 = Private or experimental

   An implementation SHOULD ignore any subpacket of a type that it does
   not recognize.

   Bit 7 of the subpacket type is the "critical" bit.  If set, it
   denotes that the subpacket is one that is critical for the evaluator
   of the signature to recognize.  If a subpacket is encountered that is
   marked critical but is unknown to the evaluating software, the
   evaluator SHOULD consider the signature to be in error.

   An evaluator may "recognize" a subpacket, but not implement it.  The
   purpose of the critical bit is to allow the signer to tell an
   evaluator that it would prefer a new, unknown feature to generate an
   error than be ignored.

   Implementations SHOULD implement the three preferred algorithm
   subpackets (11, 21, and 22), as well as the "Reason for Revocation"
   subpacket.  Note, however, that if an implementation chooses not to
   implement some of the preferences, it is required to behave in a
   polite manner to respect the wishes of those users who do implement
   these preferences.



Callas, et al               Standards Track                    [Page 26]

RFC 4880                 OpenPGP Message Format            November 2007


5.2.3.2.  Signature Subpacket Types

   A number of subpackets are currently defined.  Some subpackets apply
   to the signature itself and some are attributes of the key.
   Subpackets that are found on a self-signature are placed on a
   certification made by the key itself.  Note that a key may have more
   than one User ID, and thus may have more than one self-signature, and
   differing subpackets.

   A subpacket may be found either in the hashed or unhashed subpacket
   sections of a signature.  If a subpacket is not hashed, then the
   information in it cannot be considered definitive because it is not
   part of the signature proper.

5.2.3.3.  Notes on Self-Signatures

   A self-signature is a binding signature made by the key to which the
   signature refers.  There are three types of self-signatures, the
   certification signatures (types 0x10-0x13), the direct-key signature
   (type 0x1F), and the subkey binding signature (type 0x18).  For
   certification self-signatures, each User ID may have a self-
   signature, and thus different subpackets in those self-signatures.
   For subkey binding signatures, each subkey in fact has a self-
   signature.  Subpackets that appear in a certification self-signature
   apply to the user name, and subpackets that appear in the subkey
   self-signature apply to the subkey.  Lastly, subpackets on the
   direct-key signature apply to the entire key.

   Implementing software should interpret a self-signature's preference
   subpackets as narrowly as possible.  For example, suppose a key has
   two user names, Alice and Bob.  Suppose that Alice prefers the
   symmetric algorithm CAST5, and Bob prefers IDEA or TripleDES.  If the
   software locates this key via Alice's name, then the preferred
   algorithm is CAST5; if software locates the key via Bob's name, then
   the preferred algorithm is IDEA.  If the key is located by Key ID,
   the algorithm of the primary User ID of the key provides the
   preferred symmetric algorithm.

   Revoking a self-signature or allowing it to expire has a semantic
   meaning that varies with the signature type.  Revoking the self-
   signature on a User ID effectively retires that user name.  The
   self-signature is a statement, "My name X is tied to my signing key
   K" and is corroborated by other users' certifications.  If another
   user revokes their certification, they are effectively saying that
   they no longer believe that name and that key are tied together.
   Similarly, if the users themselves revoke their self-signature, then
   the users no longer go by that name, no longer have that email
   address, etc.  Revoking a binding signature effectively retires that



Callas, et al               Standards Track                    [Page 27]

RFC 4880                 OpenPGP Message Format            November 2007


   subkey.  Revoking a direct-key signature cancels that signature.
   Please see the "Reason for Revocation" subpacket (Section 5.2.3.23)
   for more relevant detail.

   Since a self-signature contains important information about the key's
   use, an implementation SHOULD allow the user to rewrite the self-
   signature, and important information in it, such as preferences and
   key expiration.

   It is good practice to verify that a self-signature imported into an
   implementation doesn't advertise features that the implementation
   doesn't support, rewriting the signature as appropriate.

   An implementation that encounters multiple self-signatures on the
   same object may resolve the ambiguity in any way it sees fit, but it
   is RECOMMENDED that priority be given to the most recent self-
   signature.

5.2.3.4.  Signature Creation Time

   (4-octet time field)

   The time the signature was made.

   MUST be present in the hashed area.

5.2.3.5.  Issuer

   (8-octet Key ID)

   The OpenPGP Key ID of the key issuing the signature.

5.2.3.6.  Key Expiration Time

   (4-octet time field)

   The validity period of the key.  This is the number of seconds after
   the key creation time that the key expires.  If this is not present
   or has a value of zero, the key never expires.  This is found only on
   a self-signature.

5.2.3.7.  Preferred Symmetric Algorithms

   (array of one-octet values)

   Symmetric algorithm numbers that indicate which algorithms the key
   holder prefers to use.  The subpacket body is an ordered list of
   octets with the most preferred listed first.  It is assumed that only



Callas, et al               Standards Track                    [Page 28]

RFC 4880                 OpenPGP Message Format            November 2007


   algorithms listed are supported by the recipient's software.
   Algorithm numbers are in Section 9.  This is only found on a self-
   signature.

5.2.3.8.  Preferred Hash Algorithms

   (array of one-octet values)

   Message digest algorithm numbers that indicate which algorithms the
   key holder prefers to receive.  Like the preferred symmetric
   algorithms, the list is ordered.  Algorithm numbers are in Section 9.
   This is only found on a self-signature.

5.2.3.9.  Preferred Compression Algorithms

   (array of one-octet values)

   Compression algorithm numbers that indicate which algorithms the key
   holder prefers to use.  Like the preferred symmetric algorithms, the
   list is ordered.  Algorithm numbers are in Section 9.  If this
   subpacket is not included, ZIP is preferred.  A zero denotes that
   uncompressed data is preferred; the key holder's software might have
   no compression software in that implementation.  This is only found
   on a self-signature.

5.2.3.10.  Signature Expiration Time

   (4-octet time field)

   The validity period of the signature.  This is the number of seconds
   after the signature creation time that the signature expires.  If
   this is not present or has a value of zero, it never expires.

5.2.3.11.  Exportable Certification

   (1 octet of exportability, 0 for not, 1 for exportable)

   This subpacket denotes whether a certification signature is
   "exportable", to be used by other users than the signature's issuer.
   The packet body contains a Boolean flag indicating whether the
   signature is exportable.  If this packet is not present, the
   certification is exportable; it is equivalent to a flag containing a
   1.

   Non-exportable, or "local", certifications are signatures made by a
   user to mark a key as valid within that user's implementation only.





Callas, et al               Standards Track                    [Page 29]

RFC 4880                 OpenPGP Message Format            November 2007


   Thus, when an implementation prepares a user's copy of a key for
   transport to another user (this is the process of "exporting" the
   key), any local certification signatures are deleted from the key.

   The receiver of a transported key "imports" it, and likewise trims
   any local certifications.  In normal operation, there won't be any,
   assuming the import is performed on an exported key.  However, there
   are instances where this can reasonably happen.  For example, if an
   implementation allows keys to be imported from a key database in
   addition to an exported key, then this situation can arise.

   Some implementations do not represent the interest of a single user
   (for example, a key server).  Such implementations always trim local
   certifications from any key they handle.

5.2.3.12.  Revocable

   (1 octet of revocability, 0 for not, 1 for revocable)

   Signature's revocability status.  The packet body contains a Boolean
   flag indicating whether the signature is revocable.  Signatures that
   are not revocable have any later revocation signatures ignored.  They
   represent a commitment by the signer that he cannot revoke his
   signature for the life of his key.  If this packet is not present,
   the signature is revocable.

5.2.3.13.  Trust Signature

   (1 octet "level" (depth), 1 octet of trust amount)

   Signer asserts that the key is not only valid but also trustworthy at
   the specified level.  Level 0 has the same meaning as an ordinary
   validity signature.  Level 1 means that the signed key is asserted to
   be a valid trusted introducer, with the 2nd octet of the body
   specifying the degree of trust.  Level 2 means that the signed key is
   asserted to be trusted to issue level 1 trust signatures, i.e., that
   it is a "meta introducer".  Generally, a level n trust signature
   asserts that a key is trusted to issue level n-1 trust signatures.
   The trust amount is in a range from 0-255, interpreted such that
   values less than 120 indicate partial trust and values of 120 or
   greater indicate complete trust.  Implementations SHOULD emit values
   of 60 for partial trust and 120 for complete trust.









Callas, et al               Standards Track                    [Page 30]

RFC 4880                 OpenPGP Message Format            November 2007


5.2.3.14.  Regular Expression

   (null-terminated regular expression)

   Used in conjunction with trust Signature packets (of level > 0) to
   limit the scope of trust that is extended.  Only signatures by the
   target key on User IDs that match the regular expression in the body
   of this packet have trust extended by the trust Signature subpacket.
   The regular expression uses the same syntax as the Henry Spencer's
   "almost public domain" regular expression [REGEX] package.  A
   description of the syntax is found in Section 8 below.

5.2.3.15.  Revocation Key

   (1 octet of class, 1 octet of public-key algorithm ID, 20 octets of
   fingerprint)

   Authorizes the specified key to issue revocation signatures for this
   key.  Class octet must have bit 0x80 set.  If the bit 0x40 is set,
   then this means that the revocation information is sensitive.  Other
   bits are for future expansion to other kinds of authorizations.  This
   is found on a self-signature.

   If the "sensitive" flag is set, the keyholder feels this subpacket
   contains private trust information that describes a real-world
   sensitive relationship.  If this flag is set, implementations SHOULD
   NOT export this signature to other users except in cases where the
   data needs to be available: when the signature is being sent to the
   designated revoker, or when it is accompanied by a revocation
   signature from that revoker.  Note that it may be appropriate to
   isolate this subpacket within a separate signature so that it is not
   combined with other subpackets that need to be exported.

5.2.3.16.  Notation Data

       (4 octets of flags, 2 octets of name length (M),
                           2 octets of value length (N),
                           M octets of name data,
                           N octets of value data)

   This subpacket describes a "notation" on the signature that the
   issuer wishes to make.  The notation has a name and a value, each of
   which are strings of octets.  There may be more than one notation in
   a signature.  Notations can be used for any extension the issuer of
   the signature cares to make.  The "flags" field holds four octets of
   flags.





Callas, et al               Standards Track                    [Page 31]

RFC 4880                 OpenPGP Message Format            November 2007


   All undefined flags MUST be zero.  Defined flags are as follows:

       First octet: 0x80 = human-readable.  This note value is text.
       Other octets: none.

   Notation names are arbitrary strings encoded in UTF-8.  They reside
   in two namespaces: The IETF namespace and the user namespace.

   The IETF namespace is registered with IANA.  These names MUST NOT
   contain the "@" character (0x40).  This is a tag for the user
   namespace.

   Names in the user namespace consist of a UTF-8 string tag followed by
   "@" followed by a DNS domain name.  Note that the tag MUST NOT
   contain an "@" character.  For example, the "sample" tag used by
   Example Corporation could be "sample@example.com".

   Names in a user space are owned and controlled by the owners of that
   domain.  Obviously, it's bad form to create a new name in a DNS space
   that you don't own.

   Since the user namespace is in the form of an email address,
   implementers MAY wish to arrange for that address to reach a person
   who can be consulted about the use of the named tag.  Note that due
   to UTF-8 encoding, not all valid user space name tags are valid email
   addresses.

   If there is a critical notation, the criticality applies to that
   specific notation and not to notations in general.

5.2.3.17.  Key Server Preferences

   (N octets of flags)

   This is a list of one-bit flags that indicate preferences that the
   key holder has about how the key is handled on a key server.  All
   undefined flags MUST be zero.

   First octet: 0x80 = No-modify
       the key holder requests that this key only be modified or updated
       by the key holder or an administrator of the key server.

   This is found only on a self-signature.








Callas, et al               Standards Track                    [Page 32]

RFC 4880                 OpenPGP Message Format            November 2007


5.2.3.18.  Preferred Key Server

   (String)

   This is a URI of a key server that the key holder prefers be used for
   updates.  Note that keys with multiple User IDs can have a preferred
   key server for each User ID.  Note also that since this is a URI, the
   key server can actually be a copy of the key retrieved by ftp, http,
   finger, etc.

5.2.3.19.  Primary User ID

   (1 octet, Boolean)

   This is a flag in a User ID's self-signature that states whether this
   User ID is the main User ID for this key.  It is reasonable for an
   implementation to resolve ambiguities in preferences, etc. by
   referring to the primary User ID.  If this flag is absent, its value
   is zero.  If more than one User ID in a key is marked as primary, the
   implementation may resolve the ambiguity in any way it sees fit, but
   it is RECOMMENDED that priority be given to the User ID with the most
   recent self-signature.

   When appearing on a self-signature on a User ID packet, this
   subpacket applies only to User ID packets.  When appearing on a
   self-signature on a User Attribute packet, this subpacket applies
   only to User Attribute packets.  That is to say, there are two
   different and independent "primaries" -- one for User IDs, and one
   for User Attributes.

5.2.3.20.  Policy URI

   (String)

   This subpacket contains a URI of a document that describes the policy
   under which the signature was issued.

5.2.3.21.  Key Flags

   (N octets of flags)

   This subpacket contains a list of binary flags that hold information
   about a key.  It is a string of octets, and an implementation MUST
   NOT assume a fixed size.  This is so it can grow over time.  If a
   list is shorter than an implementation expects, the unstated flags
   are considered to be zero.  The defined flags are as follows:





Callas, et al               Standards Track                    [Page 33]

RFC 4880                 OpenPGP Message Format            November 2007


       First octet:

       0x01 - This key may be used to certify other keys.

       0x02 - This key may be used to sign data.

       0x04 - This key may be used to encrypt communications.

       0x08 - This key may be used to encrypt storage.

       0x10 - The private component of this key may have been split
              by a secret-sharing mechanism.

       0x20 - This key may be used for authentication.

       0x80 - The private component of this key may be in the
              possession of more than one person.

   Usage notes:

   The flags in this packet may appear in self-signatures or in
   certification signatures.  They mean different things depending on
   who is making the statement -- for example, a certification signature
   that has the "sign data" flag is stating that the certification is
   for that use.  On the other hand, the "communications encryption"
   flag in a self-signature is stating a preference that a given key be
   used for communications.  Note however, that it is a thorny issue to
   determine what is "communications" and what is "storage".  This
   decision is left wholly up to the implementation; the authors of this
   document do not claim any special wisdom on the issue and realize
   that accepted opinion may change.

   The "split key" (0x10) and "group key" (0x80) flags are placed on a
   self-signature only; they are meaningless on a certification
   signature.  They SHOULD be placed only on a direct-key signature
   (type 0x1F) or a subkey signature (type 0x18), one that refers to the
   key the flag applies to.

5.2.3.22.  Signer's User ID

   (String)

   This subpacket allows a keyholder to state which User ID is
   responsible for the signing.  Many keyholders use a single key for
   different purposes, such as business communications as well as
   personal communications.  This subpacket allows such a keyholder to
   state which of their roles is making a signature.




Callas, et al               Standards Track                    [Page 34]

RFC 4880                 OpenPGP Message Format            November 2007


   This subpacket is not appropriate to use to refer to a User Attribute
   packet.

5.2.3.23.  Reason for Revocation

   (1 octet of revocation code, N octets of reason string)

   This subpacket is used only in key revocation and certification
   revocation signatures.  It describes the reason why the key or
   certificate was revoked.

   The first octet contains a machine-readable code that denotes the
   reason for the revocation:

        0  - No reason specified (key revocations or cert revocations)
        1  - Key is superseded (key revocations)
        2  - Key material has been compromised (key revocations)
        3  - Key is retired and no longer used (key revocations)
        32 - User ID information is no longer valid (cert revocations)
   100-110 - Private Use

   Following the revocation code is a string of octets that gives
   information about the Reason for Revocation in human-readable form
   (UTF-8).  The string may be null, that is, of zero length.  The
   length of the subpacket is the length of the reason string plus one.
   An implementation SHOULD implement this subpacket, include it in all
   revocation signatures, and interpret revocations appropriately.
   There are important semantic differences between the reasons, and
   there are thus important reasons for revoking signatures.

   If a key has been revoked because of a compromise, all signatures
   created by that key are suspect.  However, if it was merely
   superseded or retired, old signatures are still valid.  If the
   revoked signature is the self-signature for certifying a User ID, a
   revocation denotes that that user name is no longer in use.  Such a
   revocation SHOULD include a 0x20 code.

   Note that any signature may be revoked, including a certification on
   some other person's key.  There are many good reasons for revoking a
   certification signature, such as the case where the keyholder leaves
   the employ of a business with an email address.  A revoked
   certification is no longer a part of validity calculations.









Callas, et al               Standards Track                    [Page 35]

RFC 4880                 OpenPGP Message Format            November 2007


5.2.3.24.  Features

   (N octets of flags)

   The Features subpacket denotes which advanced OpenPGP features a
   user's implementation supports.  This is so that as features are
   added to OpenPGP that cannot be backwards-compatible, a user can
   state that they can use that feature.  The flags are single bits that
   indicate that a given feature is supported.

   This subpacket is similar to a preferences subpacket, and only
   appears in a self-signature.

   An implementation SHOULD NOT use a feature listed when sending to a
   user who does not state that they can use it.

   Defined features are as follows:

       First octet:

       0x01 - Modification Detection (packets 18 and 19)

   If an implementation implements any of the defined features, it
   SHOULD implement the Features subpacket, too.

   An implementation may freely infer features from other suitable
   implementation-dependent mechanisms.

5.2.3.25.  Signature Target

   (1 octet public-key algorithm, 1 octet hash algorithm, N octets hash)

   This subpacket identifies a specific target signature to which a
   signature refers.  For revocation signatures, this subpacket
   provides explicit designation of which signature is being revoked.
   For a third-party or timestamp signature, this designates what
   signature is signed.  All arguments are an identifier of that target
   signature.

   The N octets of hash data MUST be the size of the hash of the
   signature.  For example, a target signature with a SHA-1 hash MUST
   have 20 octets of hash data.









Callas, et al               Standards Track                    [Page 36]

RFC 4880                 OpenPGP Message Format            November 2007


5.2.3.26.  Embedded Signature

   (1 signature packet body)

   This subpacket contains a complete Signature packet body as
   specified in Section 5.2 above.  It is useful when one signature
   needs to refer to, or be incorporated in, another signature.

5.2.4.  Computing Signatures

   All signatures are formed by producing a hash over the signature
   data, and then using the resulting hash in the signature algorithm.

   For binary document signatures (type 0x00), the document data is
   hashed directly.  For text document signatures (type 0x01), the
   document is canonicalized by converting line endings to <CR><LF>,
   and the resulting data is hashed.

   When a signature is made over a key, the hash data starts with the
   octet 0x99, followed by a two-octet length of the key, and then body
   of the key packet.  (Note that this is an old-style packet header for
   a key packet with two-octet length.)  A subkey binding signature
   (type 0x18) or primary key binding signature (type 0x19) then hashes
   the subkey using the same format as the main key (also using 0x99 as
   the first octet).  Key revocation signatures (types 0x20 and 0x28)
   hash only the key being revoked.

   A certification signature (type 0x10 through 0x13) hashes the User
   ID being bound to the key into the hash context after the above
   data.  A V3 certification hashes the contents of the User ID or
   attribute packet packet, without any header.  A V4 certification
   hashes the constant 0xB4 for User ID certifications or the constant
   0xD1 for User Attribute certifications, followed by a four-octet
   number giving the length of the User ID or User Attribute data, and
   then the User ID or User Attribute data.

   When a signature is made over a Signature packet (type 0x50), the
   hash data starts with the octet 0x88, followed by the four-octet
   length of the signature, and then the body of the Signature packet.
   (Note that this is an old-style packet header for a Signature packet
   with the length-of-length set to zero.)  The unhashed subpacket data
   of the Signature packet being hashed is not included in the hash, and
   the unhashed subpacket data length value is set to zero.

   Once the data body is hashed, then a trailer is hashed.  A V3
   signature hashes five octets of the packet body, starting from the
   signature type field.  This data is the signature type, followed by
   the four-octet signature time.  A V4 signature hashes the packet body



Callas, et al               Standards Track                    [Page 37]

RFC 4880                 OpenPGP Message Format            November 2007


   starting from its first field, the version number, through the end
   of the hashed subpacket data.  Thus, the fields hashed are the
   signature version, the signature type, the public-key algorithm, the
   hash algorithm, the hashed subpacket length, and the hashed
   subpacket body.

   V4 signatures also hash in a final trailer of six octets: the
   version of the Signature packet, i.e., 0x04; 0xFF; and a four-octet,
   big-endian number that is the length of the hashed data from the
   Signature packet (note that this number does not include these final
   six octets).

   After all this has been hashed in a single hash context, the
   resulting hash field is used in the signature algorithm and placed
   at the end of the Signature packet.

5.2.4.1.  Subpacket Hints

   It is certainly possible for a signature to contain conflicting
   information in subpackets.  For example, a signature may contain
   multiple copies of a preference or multiple expiration times.  In
   most cases, an implementation SHOULD use the last subpacket in the
   signature, but MAY use any conflict resolution scheme that makes
   more sense.  Please note that we are intentionally leaving conflict
   resolution to the implementer; most conflicts are simply syntax
   errors, and the wishy-washy language here allows a receiver to be
   generous in what they accept, while putting pressure on a creator to
   be stingy in what they generate.

   Some apparent conflicts may actually make sense -- for example,
   suppose a keyholder has a V3 key and a V4 key that share the same
   RSA key material.  Either of these keys can verify a signature
   created by the other, and it may be reasonable for a signature to
   contain an issuer subpacket for each key, as a way of explicitly
   tying those keys to the signature.

5.3.  Symmetric-Key Encrypted Session Key Packets (Tag 3)

   The Symmetric-Key Encrypted Session Key packet holds the
   symmetric-key encryption of a session key used to encrypt a message.
   Zero or more Public-Key Encrypted Session Key packets and/or
   Symmetric-Key Encrypted Session Key packets may precede a
   Symmetrically Encrypted Data packet that holds an encrypted message.
   The message is encrypted with a session key, and the session key is
   itself encrypted and stored in the Encrypted Session Key packet or
   the Symmetric-Key Encrypted Session Key packet.





Callas, et al               Standards Track                    [Page 38]

RFC 4880                 OpenPGP Message Format            November 2007


   If the Symmetrically Encrypted Data packet is preceded by one or
   more Symmetric-Key Encrypted Session Key packets, each specifies a
   passphrase that may be used to decrypt the message.  This allows a
   message to be encrypted to a number of public keys, and also to one
   or more passphrases.  This packet type is new and is not generated
   by PGP 2.x or PGP 5.0.

   The body of this packet consists of:

     - A one-octet version number.  The only currently defined version
       is 4.

     - A one-octet number describing the symmetric algorithm used.

     - A string-to-key (S2K) specifier, length as defined above.

     - Optionally, the encrypted session key itself, which is decrypted
       with the string-to-key object.

   If the encrypted session key is not present (which can be detected
   on the basis of packet length and S2K specifier size), then the S2K
   algorithm applied to the passphrase produces the session key for
   decrypting the file, using the symmetric cipher algorithm from the
   Symmetric-Key Encrypted Session Key packet.

   If the encrypted session key is present, the result of applying the
   S2K algorithm to the passphrase is used to decrypt just that
   encrypted session key field, using CFB mode with an IV of all zeros.
   The decryption result consists of a one-octet algorithm identifier
   that specifies the symmetric-key encryption algorithm used to
   encrypt the following Symmetrically Encrypted Data packet, followed
   by the session key octets themselves.

   Note: because an all-zero IV is used for this decryption, the S2K
   specifier MUST use a salt value, either a Salted S2K or an
   Iterated-Salted S2K.  The salt value will ensure that the decryption
   key is not repeated even if the passphrase is reused.

5.4.  One-Pass Signature Packets (Tag 4)

   The One-Pass Signature packet precedes the signed data and contains
   enough information to allow the receiver to begin calculating any
   hashes needed to verify the signature.  It allows the Signature
   packet to be placed at the end of the message, so that the signer
   can compute the entire signed message in one pass.

   A One-Pass Signature does not interoperate with PGP 2.6.x or
   earlier.



Callas, et al               Standards Track                    [Page 39]

RFC 4880                 OpenPGP Message Format            November 2007


   The body of this packet consists of:

     - A one-octet version number.  The current version is 3.

     - A one-octet signature type.  Signature types are described in
       Section 5.2.1.

     - A one-octet number describing the hash algorithm used.

     - A one-octet number describing the public-key algorithm used.

     - An eight-octet number holding the Key ID of the signing key.

     - A one-octet number holding a flag showing whether the signature
       is nested.  A zero value indicates that the next packet is
       another One-Pass Signature packet that describes another
       signature to be applied to the same message data.

   Note that if a message contains more than one one-pass signature,
   then the Signature packets bracket the message; that is, the first
   Signature packet after the message corresponds to the last one-pass
   packet and the final Signature packet corresponds to the first
   one-pass packet.

5.5.  Key Material Packet

   A key material packet contains all the information about a public or
   private key.  There are four variants of this packet type, and two
   major versions.  Consequently, this section is complex.

5.5.1.  Key Packet Variants

5.5.1.1.  Public-Key Packet (Tag 6)

   A Public-Key packet starts a series of packets that forms an OpenPGP
   key (sometimes called an OpenPGP certificate).

5.5.1.2.  Public-Subkey Packet (Tag 14)

   A Public-Subkey packet (tag 14) has exactly the same format as a
   Public-Key packet, but denotes a subkey.  One or more subkeys may be
   associated with a top-level key.  By convention, the top-level key
   provides signature services, and the subkeys provide encryption
   services.

   Note: in PGP 2.6.x, tag 14 was intended to indicate a comment
   packet.  This tag was selected for reuse because no previous version
   of PGP ever emitted comment packets but they did properly ignore



Callas, et al               Standards Track                    [Page 40]

RFC 4880                 OpenPGP Message Format            November 2007


   them.  Public-Subkey packets are ignored by PGP 2.6.x and do not
   cause it to fail, providing a limited degree of backward
   compatibility.

5.5.1.3.  Secret-Key Packet (Tag 5)

   A Secret-Key packet contains all the information that is found in a
   Public-Key packet, including the public-key material, but also
   includes the secret-key material after all the public-key fields.

5.5.1.4.  Secret-Subkey Packet (Tag 7)

   A Secret-Subkey packet (tag 7) is the subkey analog of the Secret
   Key packet and has exactly the same format.

5.5.2.  Public-Key Packet Formats

   There are two versions of key-material packets.  Version 3 packets
   were first generated by PGP 2.6.  Version 4 keys first appeared in
   PGP 5.0 and are the preferred key version for OpenPGP.

   OpenPGP implementations MUST create keys with version 4 format.  V3
   keys are deprecated; an implementation MUST NOT generate a V3 key,
   but MAY accept it.

   A version 3 public key or public-subkey packet contains:

     - A one-octet version number (3).

     - A four-octet number denoting the time that the key was created.

     - A two-octet number denoting the time in days that this key is
       valid.  If this number is zero, then it does not expire.

     - A one-octet number denoting the public-key algorithm of this key.

     - A series of multiprecision integers comprising the key material:

           - a multiprecision integer (MPI) of RSA public modulus n;

           - an MPI of RSA public encryption exponent e.

   V3 keys are deprecated.  They contain three weaknesses.  First, it is
   relatively easy to construct a V3 key that has the same Key ID as any
   other key because the Key ID is simply the low 64 bits of the public
   modulus.  Secondly, because the fingerprint of a V3 key hashes the
   key material, but not its length, there is an increased opportunity
   for fingerprint collisions.  Third, there are weaknesses in the MD5



Callas, et al               Standards Track                    [Page 41]

RFC 4880                 OpenPGP Message Format            November 2007


   hash algorithm that make developers prefer other algorithms.  See
   below for a fuller discussion of Key IDs and fingerprints.

   V2 keys are identical to the deprecated V3 keys except for the
   version number.  An implementation MUST NOT generate them and MAY
   accept or reject them as it sees fit.

   The version 4 format is similar to the version 3 format except for
   the absence of a validity period.  This has been moved to the
   Signature packet.  In addition, fingerprints of version 4 keys are
   calculated differently from version 3 keys, as described in the
   section "Enhanced Key Formats".

   A version 4 packet contains:

     - A one-octet version number (4).

     - A four-octet number denoting the time that the key was created.

     - A one-octet number denoting the public-key algorithm of this key.

     - A series of multiprecision integers comprising the key material.
       This algorithm-specific portion is:

       Algorithm-Specific Fields for RSA public keys:

         - multiprecision integer (MPI) of RSA public modulus n;

         - MPI of RSA public encryption exponent e.

       Algorithm-Specific Fields for DSA public keys:

         - MPI of DSA prime p;

         - MPI of DSA group order q (q is a prime divisor of p-1);

         - MPI of DSA group generator g;

         - MPI of DSA public-key value y (= g**x mod p where x
           is secret).

       Algorithm-Specific Fields for Elgamal public keys:

         - MPI of Elgamal prime p;

         - MPI of Elgamal group generator g;





Callas, et al               Standards Track                    [Page 42]

RFC 4880                 OpenPGP Message Format            November 2007


         - MPI of Elgamal public key value y (= g**x mod p where x
           is secret).

5.5.3.  Secret-Key Packet Formats

   The Secret-Key and Secret-Subkey packets contain all the data of the
   Public-Key and Public-Subkey packets, with additional algorithm-
   specific secret-key data appended, usually in encrypted form.

   The packet contains:

     - A Public-Key or Public-Subkey packet, as described above.

     - One octet indicating string-to-key usage conventions.  Zero
       indicates that the secret-key data is not encrypted.  255 or 254
       indicates that a string-to-key specifier is being given.  Any
       other value is a symmetric-key encryption algorithm identifier.

     - [Optional] If string-to-key usage octet was 255 or 254, a one-
       octet symmetric encryption algorithm.

     - [Optional] If string-to-key usage octet was 255 or 254, a
       string-to-key specifier.  The length of the string-to-key
       specifier is implied by its type, as described above.

     - [Optional] If secret data is encrypted (string-to-key usage octet
       not zero), an Initial Vector (IV) of the same length as the
       cipher's block size.

     - Plain or encrypted multiprecision integers comprising the secret
       key data.  These algorithm-specific fields are as described
       below.

     - If the string-to-key usage octet is zero or 255, then a two-octet
       checksum of the plaintext of the algorithm-specific portion (sum
       of all octets, mod 65536).  If the string-to-key usage octet was
       254, then a 20-octet SHA-1 hash of the plaintext of the
       algorithm-specific portion.  This checksum or hash is encrypted
       together with the algorithm-specific fields (if string-to-key
       usage octet is not zero).  Note that for all other values, a
       two-octet checksum is required.

       Algorithm-Specific Fields for RSA secret keys:

       - multiprecision integer (MPI) of RSA secret exponent d.

       - MPI of RSA secret prime value p.




Callas, et al               Standards Track                    [Page 43]

RFC 4880                 OpenPGP Message Format            November 2007


       - MPI of RSA secret prime value q (p < q).

       - MPI of u, the multiplicative inverse of p, mod q.

       Algorithm-Specific Fields for DSA secret keys:

       - MPI of DSA secret exponent x.

       Algorithm-Specific Fields for Elgamal secret keys:

       - MPI of Elgamal secret exponent x.

   Secret MPI values can be encrypted using a passphrase.  If a string-
   to-key specifier is given, that describes the algorithm for
   converting the passphrase to a key, else a simple MD5 hash of the
   passphrase is used.  Implementations MUST use a string-to-key
   specifier; the simple hash is for backward compatibility and is
   deprecated, though implementations MAY continue to use existing
   private keys in the old format.  The cipher for encrypting the MPIs
   is specified in the Secret-Key packet.

   Encryption/decryption of the secret data is done in CFB mode using
   the key created from the passphrase and the Initial Vector from the
   packet.  A different mode is used with V3 keys (which are only RSA)
   than with other key formats.  With V3 keys, the MPI bit count prefix
   (i.e., the first two octets) is not encrypted.  Only the MPI non-
   prefix data is encrypted.  Furthermore, the CFB state is
   resynchronized at the beginning of each new MPI value, so that the
   CFB block boundary is aligned with the start of the MPI data.

   With V4 keys, a simpler method is used.  All secret MPI values are
   encrypted in CFB mode, including the MPI bitcount prefix.

   The two-octet checksum that follows the algorithm-specific portion is
   the algebraic sum, mod 65536, of the plaintext of all the algorithm-
   specific octets (including MPI prefix and data).  With V3 keys, the
   checksum is stored in the clear.  With V4 keys, the checksum is
   encrypted like the algorithm-specific data.  This value is used to
   check that the passphrase was correct.  However, this checksum is
   deprecated; an implementation SHOULD NOT use it, but should rather
   use the SHA-1 hash denoted with a usage octet of 254.  The reason for
   this is that there are some attacks that involve undetectably
   modifying the secret key.








Callas, et al               Standards Track                    [Page 44]

RFC 4880                 OpenPGP Message Format            November 2007


5.6.  Compressed Data Packet (Tag 8)

   The Compressed Data packet contains compressed data.  Typically, this
   packet is found as the contents of an encrypted packet, or following
   a Signature or One-Pass Signature packet, and contains a literal data
   packet.

   The body of this packet consists of:

     - One octet that gives the algorithm used to compress the packet.

     - Compressed data, which makes up the remainder of the packet.

   A Compressed Data Packet's body contains an block that compresses
   some set of packets.  See section "Packet Composition" for details on
   how messages are formed.

   ZIP-compressed packets are compressed with raw RFC 1951 [RFC1951]
   DEFLATE blocks.  Note that PGP V2.6 uses 13 bits of compression.  If
   an implementation uses more bits of compression, PGP V2.6 cannot
   decompress it.

   ZLIB-compressed packets are compressed with RFC 1950 [RFC1950] ZLIB-
   style blocks.

   BZip2-compressed packets are compressed using the BZip2 [BZ2]
   algorithm.

5.7.  Symmetrically Encrypted Data Packet (Tag 9)

   The Symmetrically Encrypted Data packet contains data encrypted with
   a symmetric-key algorithm.  When it has been decrypted, it contains
   other packets (usually a literal data packet or compressed data
   packet, but in theory other Symmetrically Encrypted Data packets or
   sequences of packets that form whole OpenPGP messages).

   The body of this packet consists of:

     - Encrypted data, the output of the selected symmetric-key cipher
       operating in OpenPGP's variant of Cipher Feedback (CFB) mode.

   The symmetric cipher used may be specified in a Public-Key or
   Symmetric-Key Encrypted Session Key packet that precedes the
   Symmetrically Encrypted Data packet.  In that case, the cipher
   algorithm octet is prefixed to the session key before it is
   encrypted.  If no packets of these types precede the encrypted data,
   the IDEA algorithm is used with the session key calculated as the MD5
   hash of the passphrase, though this use is deprecated.



Callas, et al               Standards Track                    [Page 45]

RFC 4880                 OpenPGP Message Format            November 2007


   The data is encrypted in CFB mode, with a CFB shift size equal to the
   cipher's block size.  The Initial Vector (IV) is specified as all
   zeros.  Instead of using an IV, OpenPGP prefixes a string of length
   equal to the block size of the cipher plus two to the data before it
   is encrypted.  The first block-size octets (for example, 8 octets for
   a 64-bit block length) are random, and the following two octets are
   copies of the last two octets of the IV.  For example, in an 8-octet
   block, octet 9 is a repeat of octet 7, and octet 10 is a repeat of
   octet 8.  In a cipher of length 16, octet 17 is a repeat of octet 15
   and octet 18 is a repeat of octet 16.  As a pedantic clarification,
   in both these examples, we consider the first octet to be numbered 1.

   After encrypting the first block-size-plus-two octets, the CFB state
   is resynchronized.  The last block-size octets of ciphertext are
   passed through the cipher and the block boundary is reset.

   The repetition of 16 bits in the random data prefixed to the message
   allows the receiver to immediately check whether the session key is
   incorrect.  See the "Security Considerations" section for hints on
   the proper use of this "quick check".

5.8.  Marker Packet (Obsolete Literal Packet) (Tag 10)

   An experimental version of PGP used this packet as the Literal
   packet, but no released version of PGP generated Literal packets with
   this tag.  With PGP 5.x, this packet has been reassigned and is
   reserved for use as the Marker packet.

   The body of this packet consists of:

     - The three octets 0x50, 0x47, 0x50 (which spell "PGP" in UTF-8).

   Such a packet MUST be ignored when received.  It may    placed at therkinbeginning of a message that uses features not available

NePGP 2.6.xrkinin order to caus       version    reporst fat newer software isrkinnec    ry    pro Stat fo        .

5.9.  Literal Data P      (Tag 11)orkinA                     contain      body880          ; d        Lategoryot    be further interpretedWorkinT           this           sists of:orkin  - A one-octet fieldFinneydescribes how      H. Fis format      
    Callas, et al               Standards Track                R. T[P    46]

RFC 4880             R. TOpenObsoM       F   D.            November 2007
orkinIf iey
  a 'b' (0x62),t fon                             binndar H. .                t  Ope74GP Messai            ext This, an    us J. Cneedrkinline ends    verted    local     , or o     ck p-mode changes.     rkintag 'us an I5) mea       same asfies, bu    so indicate    at: 199mplementat    believ
   Off     l        H. F         tworkestioWorkinEarly        n
  
Obsohe "Idefineque valuetoco'l' edia ' disc' s forkinfor machine- discu and rs pro.      1991 [RFCorde] incorrectly staternet       discus forflag edit1' (ASCII num     one).  Both      esetion nrkins fos ke
Cdeprenet
           File nent edia str: 48(          length, followed by a filtract onltep catiT    J. Calla zero-   appook for.  Commonly, ised obes onlysourcs mem    encrypeque        descriP Meis will        tep cofbes onlying packets crscri.  Anal Protocol StanMAYrporat440  helemennot dbes onlyisage Format

Status o      a more authoriol Sv not dethasage bes onlyactuscusdiscuss WorkinIrming specialnot de"_CONSOLE"    usedP Mes         iy, an, howquestr Comm "

  your eyes k, g"format aadvi    TD 1) for               rkinunusualessaensi flaol for te       : 48program should Track   itoid
 rkincareful genperhaps avoid: 48sto for entiality, crossinto disklicarrkinexa Pronot a stepA four       nu07


inney
ternet
  age. t edsoci is  witht for Co     the standard, check, gen       e mightt does nmodifrnet                80   
   neowever,ti

   eStatus owas cre is emberods ne  Officiaementaernet
  noong pufic07


not a step    remain440 orming        mati       [Pageot a st  Tk protoc....docu Track  <CR><LF>ack prenThiss (i.e., network-bes only    Dl communit fun formaon tent, aube, and requestsny flawcomm........ral funcbydentiality, keyerhacke
     10formrust    IKS GmbH
 2          . Autherms .....ric ronicrack in key forsl fori   PGP......ly used          ignature ...y, an      H. Finneyrecoridentiuser'ese s........ssageotocowhich7
   holder format Autworthy    roducers,rkinalongrack   suggein    D.     nney
 Protoco...........6       ts use.....tions ......roveme     D.  1...............isribution It degivenicial Protocol Sta       .............SHOULD NO     emi. Shssagoutputook eamons anda and dtransfersecuripplicatonvesconfidenty........           on an
   puficia sugges Ope discu
        Novsaw
                                                             R. Thayer
  7                                                        November 2007


       5.11.  User ID    IKS GmbH
 3        10
     PGP Corporation
  state
   anFinney
      nd......r.  Isenficiaes not de for..5
l addrk   orming ..........atioyt is mn...., ificialncluGP fond in 2822r to ) Sp] rs ..tep -....n of t    eformanity sreok fc64 .... sta......ent.......       ded to
tation heades use.......ions e........orming 10
    
     2...10
  Attribute    IKS GmbH
 7 Digital S...............erms .....of tri......Salted S2K ...ated an     : 199s caporatiof documentid
  typctrof  H. Finnsage F.........11
  ignat...........mi.......  and    kdoes n.........12
    a  3.7.1.3. Iterrkin       J. Callcert    ..8
 ........owner ("self-signed") Intrny......rkinKey Messagwh            .2.2.y iret-Except edino  1. ...........12
                  3......anyw
    ltipre................erview ..........Whdisc 3.7.1.3. Iterated an forma PGP  requi....par.....  3.                   ,al Protocol Sta.........provideuestleasneraoughnd diompatibilitards Trape of handl avo7.2.2. essage ptio      SimnPGP so 3.7.1.3. Iterated antati s..... waards dtion10
 ......

  ment sp....................15
  cookbo...............ly Apppaqu 2.1. ...sn of gnatuon questions.
   J. C    ....method    ....           3.7.1.3. Iterated and Samade up....onemberid
   ...12
      subders ......ach 4.2.2.4. .............aBody Length.10
  ecifiar Comody.......16
    poration
            strondy Lengthded to
(1, 2ember5      s      ...................... (1Packet      3. Compcation.  It ..........................................currencessibution ...............is 1,et Leify.........         on questions.
   .......           ..........................t doe             gnizntatS.............s 100 thr.... 110formang-trs th Data Epriv    or....eritocoll15
 ................Id Se.............................        5.2.2. V..................to pac forypted Se, ing-umab......(of t.............     )Packet...........Messa.......... Packet Format ...........mmentrk. th    5.2.3t Lengt........irs-Key (woPacket ........tion ................  3.7.1.2. Salted ed Sesion........2Not        nley E suggemulti






Caleriiscu this0
  .1. Osiondocutoco, dueat .a hidocumiscuacciden.10
isf this is       dcookb................9
      3.4. Text ........................................8                                                        November 2007


          little-....an
Callas.19
   gnature Subpa............17
   5. P   4.singtrin      ber 200gnature Subpa mainta.19
   ..............
    bution         3.2. Signature Subpa. Publ         a 16       ..27
             5
           eRFC 488.......        1          Open.....hu7
   0x10, 0x0......1..........



2. S       5.2.3.8. Preferred Hash Al    Leng     3.     ingract

 .......         sage Format          ovember 2.....29
........27
     3. this 1at ......... JPEG    ion .       ......19
           5.2.1       gnature Ts .................................            .3.8. Preicial        5.2.3.7...........12. Signatur      , all..........       age 2sary t0......................      ody Lengths .                itEncrtati     ...........................        5.1. P. Ex4880  .................i.1. S  3.. Exp-by-sI    
   im        (JFIF)....3
      s a co        Data E          s [ ...]......ion questions.
   It dtdards determommu 2007........cation .b.......amiiali
               ......        unoratito 4.2.2. Ne....icula  4. 007


                  5.2.or....a         me ............... this    3.7..............2.25.13....ym. Eackets cr.3.1gr..14Protec....        IKS GmbH
 8 Digital SSymme 3.7es in...................33
             ted and Sal 5.2.d S2n......... .......................          5      ed Synewract
      ts

   10            ltipre......     3.problem.....e    Encry OpenPGrmat Packe1
    kets crossi         .....in....mo

referpecifisionM24. FeaturesD      on C for
      ........e
Cat Newll nspo.....3.23. ReaTypes .         S Lengths .........           ....Multipreon questions.
   can                   PGP Co     ypntation questions.
   I    sup     de.....ment spseaders ....nrnet rmat Packefer generengths ..m.1. S For....ID .....................sion          5.     possibentatSinces .... H. F       p
     s ag    ......24. Featuresattacksnetwork.........    ur     ple prolif...38s ..13
      blan.15
 dopreferred K One-Pass Signawt, aus

   : 1991te     a.....1435
    s, rapid...........2.3ed rehelticatm    antssion Key Packets (Tag 1) ....to Radix-s in......                  PGP Coignatof tit It din....it fromtes on Se
   ism....      ed in
  ol f.................     key Pat (Ta4. Conv.3.9. cip
   4. s Grous AdvanRequ.......Tag 1........(AES.....Twofis    .....onve...41
     ons                 J     as
Re5.2.3.26unhash....orreferre................'s Packt Lengths a F        .........2. Public-Kehe "ypes .g-to-.......Specificao     un..14
  re......3....3ir
    Encryage 2]Lengths pecificret-Key Packet Form................9
      3.4. Text ........................................9                                                        November 2007


          mat a                 H. F................4s........-....algurithm........ture Pa....ts (Ta) ............. PackeSHA-1 s .. Trust Pac.3
  3.1. Sct
    been 5.2.4.1 1. i4.2.ll................... suggeders ...(oft3.1. Sa                     or che........          5....... l.............           .....275.12. U' Subyload         a5.2.3.25. Signature Target .                                 PGP Corporation
                                           St        5.2.3.15. Revocime ............9
         ..........otocol Symm
            sel .....6
      5.10. .........4     ants1. Suin C..... Feedb    s forpecifshift amount equses.3. Sy. An Impblock siznforming ...... (CFB-ng 3)......40     g ASCII A Workin    6
      5.............        ..........in a Public-K24
 ..... .......................Ses     ............7) .  IteGP f 6.2. FD .........................34
         n ei     cas netw........gnaturust Pac   5.2.e Surefix.2.1. S.....64 .......bef...1      used........          ..................n ofFB "C" ,.......4    ......II Ar.54
      6.2. F......'s........54
.19
    nitubliVector (IV)..............ookbl  Opes nePartInstead....u2]
    IV,ocation .llas, e-Key   5.2.ok for rity s         andards Trac                  .1.2. Salted ork ........ used54
 .............54
rmor ..........8
  re ....plus    ..25
                  Types .group,....Escaped.54
      6.ing ASCII Armor .........ignatu.1. andom;pes ......       5.2.....eal Bcop          ir 2............: 488    .0
             ......4.......whosts ........... Pu281.2. ple or 16ar Expres....35as, [Page .............16.......ar Expre.......n.....id
  r Expres..........ublic-Key Alg 15cificd 16     5.2lgorit        vel. PaU3. Noter ID .........................34   IKS,       ng publi    resynchroniz       One....after

RFC 4ment s
Callas, 
    ......See "            Mode"ndarowt

   ...1detail....40
     5petireferred16ms ...Types .ompresse-Passlas, et al            gnaturlow......       0    immedrds ....heckg 3).......            Stack   h all nec          plat Vax.........e messag....
RFC 4880  Sub.....        .......47         fune Tarconfidentialsul......... New ....pp   3.7. S 6.2. F.1.1. Imag......2.3.25. Signature Target .........    StaIDs      6.2. F New Signaturtring-to-K................        d above;s Traing-to-         1.1. Te1.1. Imaconfidentnthe "Int.2. Key       5.2.3.2...... .....D3....14.........tring-to-torage a............2.3.25. Signature Tar.40
et .........  Pl4. HEscaped      of 20.........................9
      3.4. Text .......................................50acket (Obsolete Literal Packet) (Tag 10) ..........46
      5.9. Literal Data Packetkets ...  7. New ime ............0.2.2.1. Signature Notation DataSignaMDC)....................      e..........e ........jment   3........2.2.4. Reaple     10.2.2.5. Implemkets ..          e MDC      5.2.........20       .................47
              .2.3.25. Signature Target ...................64
       10.2.2.3........ Types ...ure-Only Ap 11. Packet C9
   7. current     ctet and statDu for 5.2.4.1.ure .............. H. F.6
      2s .....pecif...47goritnsions....................as well....able of Con    10.2.2.5. Implem.....rithms 1. Signature Notation Data Subpackets ..h Algorithms ..          , upge FPublic Keyso prompa.........ackets ...........  10.2.2. New.17. Keyy failths .rithms ...nternet
   Offd data storagTag 13) ..24. FThe Im4. H        t Lenessage  secu....335
    ....y Form....ng-to     5differe  5.........         ngths  Distr 11.abs. Key       .........gorit.....s ...........3. Keypode
 
   ................menta 11. Packet Cssion K Key Forma.........9      .67
   11.onve...40
    : fu. Realgorit-Key new this protoco     PGP Corent, aurovide s.....oll4 in ....... 2]
Key .......alla.....38     a........40        im9
              4 in toadix-64 Co NON-NORMATIVE EXPLANATION3
      mpresDC system,....ders ...18.4. Ha9......all 1. w....son for rity s ....et Leng.2.2.......3...............10
     stre-On.....    5............, y .....ong........b....    ..63
   s ......on o         3.7Preferred........76
   .......ation K............et Compo    62
   rrup......aff .................2.3. Cants .....cationread      1Add.........enera........remoature (Tag 5).......penPG- Types ..      1.....ys .7
   moval......      orat.  (     .......at CBC "C" .ha
   6. Ra    ilarCompressionn of t H. F.................fror's User I.....      1................Tags .........bvious     4.2ture Pa13. NuFlagt2.3.11anion .............2
   6. Rsage gites incig sta.  How    , mms ..eo    do.3.20w(Tag hm Prefehabi use........otocolME-PK large
Callas,of reasd Fobeyo......orithm Pco      ...40
       .....ffi73
   to s   4...........78

      1rovide s       t    1
      denis ......y to av Time orati
      13..................        .................   4...33
vpenPture.............ra5.2.3          .....nds ........rv..............ack     ...........tatio  13.11.....0
     aintext .......MAC     snot detent    .........  5.2.twaree Crea          nalog.... 5.2......sumtrically Encrypted Data Packet (Tag 9) ...............45
      5.8. Marker51                                                        November 2007


          ansfespit (Tag fac.......1       rely flalyenPGP t.........t (Tagm PreferencPubl..............eal wor.3.3. Conside ethm Pflawdefen    hm Prefes    natu.......  Nov.....surf
Requ...73
   Tag 13) .s

   1                   .....ences .go....admirn 4 .........Consequ....., be      .1. Normences ...............................ences .ket Fortoco. Sim.........Signatur(s)to pemploy.....(Tag 2) .. ........ly3.3.            10.2be  7.colli    -free.....rards. Simgorithm mat", which itself r    wa. PaI     org....Frank....sh......se......3.4.lrmata (bers ....) unption               says, "I'v....way........secreiratl.....youblic-Ked Bob".....    ar easicketor hi 5.3

      13.truc....                stan........d....any....ion .16.e77
      13.....Bob...................if R. 
     * Opecommun2.3.11s, forma      13.ths is an of ts veo .........78
 .....r  Crea...........n67
        13.6    Noveodel, et al ng-to-K

1.1.s, ......    5
     on ........ Intecnity,metric yptanagphy..........................3. Notnes of     ..13
  vate or Esub........0
   80
   14.....    am.......................80
I Third-vember.....47
ateria informati  It is a format a.2.3.20 Alg. Security Consideta-Considera

      hormat 5.2.  T downgr.... PGPcross-ts a nu.......w     mak    5.2.3ge 2]      f..........80
(Aorrects a nu..... 5.5.1.............     transforeas
Requ    2567
      11.2  * Pd in
       r of problems in t      13t, au the fi       pecific......160-b  Thish,Mode ....RIPE........MD/160PGP 3" code ba..................s .....Secret. Reaary
               10.2tionaderays2
   6. Rumber onal RFC, .....J. Callamete.......3upts a n..............- Pretty Gy.  PG also in the prey SpSre Targ13.11y IDs an"IANA
   formats how Old F"  * Pguid    RI ...    Messages ...................   IKS GmbH
 9 Digital Sssion Algorithms ..................n .......a....47
     .................... Preferred ....21
       GP is a f.24. Featurenformati         ...........4 ................................33
            ypted Integration and are used with permission.  The Structur       e Image Attribut......................10

RFC 4880   er ID ...........statu..................33
                  5ol for     ....aegula           5.s
Re.17. Ke       OpenPGP Message Format            .....a-Escaped Tetion Features .res ..................66
           10.2.3. New Packet Versions ...........2...................66
      10.3. New Algorithms .....................................             PGP Corporation
              .........PGP" refers
       Co......................mespac. An Imp ................................33
                  5gorit..78
 sferable...........ys ...  Pl.....ol forEscaped  5.2.3.9erpreted as.2.3.25. Signature Target ..............     5.2.3PGP Messages .........................Y", and   as15
   egory:.........For Revocati..............ol fora           For Revocat...................16.........age           .....ures

 penP    rul 3. Data EnPGP Message Fture Targ......70
               10.2riting an
   app: 1991,ormat Sub12. E3
      1. One-Oams .     3.7.1  coion
 2.5. et a....lex 13.106ned adix-64rmat maintai17. Ke39
  IRED", "SHA     2.5c Keys       '......rl Encriality.............s, hen * Pobj Packncryp 3.2. .....rbitrndarure .....nd sos impl......arameters packeey is uspacketi.

 mats .......     ....80
 charac....
    Inteive ....ndardiza maintai    cation otinginci       ....in.....ent and cesche

   Olateres

 y management3. OpenPGP unsafor
   ne16.2, aus Formablic.73
     key,    . Notaterpretecryption almo

   tion 3.2. Mution, Oiality         ......Priva....    1....n of PGP.........          ....1
   ession key is bound
   to tPrettens   5.2Variants ........40
mmetric enonfidentiFor Revoc.......o.....f.........s:ryptase64k      n addition, Omo

   Thisides ke.........       sing 

   3.  The. Trahe teiscu.......MIME sessionctet Le- Integer..........cifie0453.17. K............sed on24 an OCyclic Redunod",y C.....(CRC), and requestract

urometimes rs
   re only.

   3.  T. Packetent Callas, et sion Integs ....... Ver......8
  n  9. Co.....(=
       CR. Met....u7
     b    ..............3or 0x864    des kty vxampl........of 0xB704CEs a messaaccumu
   as.........functio...............59
Message Format  2007


 ..............functio and requeg-to-KeAg Op    l Protocol Sta3. OpenPGncry.........Meta- (S2K)....sre Tar                 [Ps verple learable,
       whIt dd "OPTIfunctio28
   via Encr......ants ession keys  The re..40
R   asa. EME-PCRC-24:6.3. E......624ms ...fple eve....in.....sion kef thesing rypted nonducti  is also usualputind relat....error....8age
   o-stage mechanism saw
                                                               R. Thayer
 53                                                        November 2007


       6...19An I Protocol Stantion, Ommetrissio"C"........#vembersage24_INIT compressL signature is generatPOLY     messaL............def re-Oncrc24;

      s si is
_r Expr(ity softwmeti *r Expresderi_.....)PGP pro{PGP provre is
   enc =generated fgnature ..78
   ing public-ke PGP
 (len--)the session kon key  ^= (ic sess++) << 16ng public-key Phian Ai = 0; i < 8; ithene encrypted
   b   block<<= 1ion via Digital ..78
f (lock&.....nd a nally, tey signature alglock.

ached to tion via Digital }blic-key sis:

   1.  Tretur of m,
   F.

  Lgnature }ay b....        teropeArmor..13
  enage.

         .......r othenerates a ide cputArmored Mc             rou.......ge only.

   3 ........soage.

   puti    d Privac decrypt
Callat     Ae of the m questions.
   It d ...teropeas a ............     13mo

   This ivate or Eions ........43
  he mki......Page 3]

R   uic-key encr
   5.  The r4
          ...........10
  ....40
Connet
    ...........76
  a sessi

   she sending s           ntes a  H SubpaLin    p     S2K EME-P..32
        The          erificationthe ob      ..... (s needed toembern .....RFC199....hitespace)ic-key............terop-ntic.  The r the
       verifi    Osume after applyierifiTail66
     de....t functiontic.

2.3.  is s17. Key k                .............lgoriessful, thes Track .....t Composurrom tssion fflaw(5) d ...s ('-'....2D) Wit.......   " interpretege Format        Packet Lengthat       The s2. S....objeached..32
   3. Open H. Finney
 tself r....31
   ding sof.  A     of soessed.  Thus,    1cation at       ........70s it using theok fors:ch a session key is itself encrypted with a symmetric
   algorithm keyed f4                                                        November 2007


          BEGIN
ObsoMESSAGEPGP provUobjeSignption ,, "REQUIREmentati.................d, compressedPUBLIC KEY BLOCKa rarely uncompre  Theata i.....   Shardly
   rigorousRIVATE it is operationally useful.  These a....... can be
   rigorousl
   dat, PART X/Ya rarely uncompreSelf-S.....       ...........    rifi Armoli.....ngst ections fncrypol for te beyonde Xth.............Yction
   Codes as described in ctions following.

2.4.  Conversion to Radix-6n for encrypted mess    PGP provunmored Mess          ncrypned et For......
   dat-IDtes a hey signcation packet.......13
compressedSIGNATURta rarely uncompre....c.............ssymmetric/Callasafe to raw .......on kelea      a printabl        5.2.3Obsolex      compressed
   data rarelythat are not safe to raigital signature      genek                .......asedratio.......ty.   Packeat  rypte compr       PGP 5.sed o  - Ra Com....................erpretest    .....es .n impven be using the.......-64 conversionsrovements.ould be awa......rndard,       adixuest foomments: 4880   pleme
   enco     ......... Image..........press the 5.  Signature-m With sy Oped Radix-64 enon thlementatio     9rovide secu      ame messntic.

2.3. port880          pursion.............ifies itctet Le......de  3.7format     3.7           (or     5.5g 3) .ainder  7. g of these binary oc (seor Commlow      6.3. ntic.

2.3.  is vepaiember ession,ond thputi   3.4. Convember 20......ity, keyre is attached to the m newtions .......absage      andsoft   13.  10.3.2.        a Element Formats

   Thification requ
   Oidert-64 co............       ven be . Key........ 12) .....on ke    5.5.3.       ppl..............64
 
                   aPage 7]

RFC 4eyond th.....key- this is sase.

ols the (':' 0x38)ides ke2]

RFms tha(0x20) seon o......810. Tn.......    1n of PGP.5-ENCODE ..... are            D. Shment Formats

 packetialitHash eferred Keyenerates a .....kn ... can...........g in OpenPG........onven of t     [Page 8]

RFtin    5.Track                 tal signaturecalared to           
   Thclude
   ests lemeices, but     ...............  3.7n[1]76      Novemb        onfidenti H. F(EA or o hol6.3GP Mes  Armongrapnsis.......Escaped Tentic.

2.3.  d, c usednt, ach a session key is itself encrypted with a symmetric
   algorithm keyed f5                                                        November 2007


          cturakssageures

 ent Formats

   Thsh    ......g or urvithm.  s such aspy on      4.2.2.1. One-O. Stri onlar is ((n[0] << keNOT",Self-    7


 Specif  12.2.        s: a t.1. P........noenPGPaphic, et alv     re-O messag.................k            Kon Ig n[k....17
 , bumpressi"Vmainta"66
     t
   ......re is attached to the m     maintase of blo...21
        rs used
   to holhe lechecent"....onve in theCODE [00 py of the min the
 tream.....Pretty G...9
Network<< 8) + [00 and methonystate
    read, .........erpreted aswhol  13y en, for These ms an rences .....n an - of rds Tr    13.4rmats used by O..... an MPI ptog     Novembltiprecissagplemeerpreted asUS-teroperNotat......when y  keythis ..........)

    string of 
   The le       ID02 0132-metimes refk for sevession key     Novemrovements. desik for mment does n Openeful.l
Sta
   80    
2.4.  Conversion with stor        bereded in "(MPI.length +ettyat Key Ion descri.6
      se of blociwo-Ohexadeciamples:
recipiMPI interpres ..putitandards e ......h storagd.

3.4.  Te       s ver.1. Pnumbeeceivgoosymm     [Pnsporting RSA public
s a          10.2. ModForm
Cal...........le t the UTF-...........d "OPTIun      ..10
    Text

   Unporting  big-endia      d "OPTsuestallide c        ainder o.........vice of cin    d (hout severesses withtc.r toaphy tooctet is reassticvice of cpe oing ient's priva........asignssagompress      redecessor01 01].

      pes ...gitim  St





Call...............ures

  at Key IOpenPGP Man......ystetogracrules th the.....     2Message FormatThe
   ..78
 ormats ...
   The leHash02 01 an a-Standardd lcharact      5.11. Us............27
   ining the numbdecessor.............3of these binaftware thait binathe MPharse 02 01        November 20metimes referreatabase. Packet Compo  13.7.i
CalPs ....... Packetectly.  It shoul [00 01   Unused bits o   most sl Protocol Stan3.3.2gubpac key  ...-Octet  to
         onPGP cs ....       ed bits e that when        ..... (Ta    he PSome systems.

    and writai     n.....ignalsong-to-Key (Sed.

  CFB M.59
 s

 tax .....      PGP
 encompretate
 penPGP tifiesg n[kll happ.......Thestimes refer          ke ISO Lmetr-5 IntroJapanacke-----
       ix-64 1
   pecifier nPGP prov     5.5.1.3. SecrIt drulerID is a       defa....e message. 2
   6. Rae Subpake. Paion questions.
   It d.........e systck      an.x - Thired to
   asned f........; value
       3        ......1   o  encodingassuSpec be [00 i state
 which a session key is itself encrypted with a symmetric
   algorithm keyed f                                                         November 2007


          ........t al      cryptihe session ksion ke Openmect r........transporting OpenPGPis suce...........k for "comprymmet the firs. Packet.........ze o"END" made....Eandards Bo

   inoctet sca         tandards Track   tring-to-s6]

RFC.....nd
  .....6s ...as.......ide Ra    2.of 
       used Key FormatPrack...........lefe anyr    ,-64 co]

RFC.....6.....        er usece and verifies     8 the hash    T0]

Ry implemefrom a pgorith....es .......      e and vered 6 an igh-order ,e 9]

........ly a  symmehich  5.2.2]

RFbers ch thisypted fidentialphab2K
  code tandards yptionly once.........         ach recipieys ...to produce  how KeyVersiormat ..., 2440 Track      mo2007

ic-Keyicn-cotion     64 encodinys ...28
   the hawhich wiuce th     ........high- 2440 reloading, 28
   size, r messages .....    hh 1 oond length.
olloowed with 1 octet of zero, the third is pres.

 ..........  +--28
   a fil--+-ste kature .o ea-thirsh
   contis given i|7 6 5 4 3 2 1 0ave been initialized differently,is given indeifferent  dif differeoutput.  Onc different hacontexts haeen initialihe output data from the multiple hasis given inde1.
   xpassp2rst hash le3rst hash le4rst hash  statusch
   Ifsize is gr...... 1991.
dexcally en arra     64her shared sectwo pieces:  (Tag 5)on key.

3.dian
  -----
    ...... Ker used) . Trandiscaslas
Requading, 8
      3.
       TheVthis 
Callas, assphrase string, to help
   prevent dictionaryis given i0 Aey signature17 Rey signature34 iey signature51 zis given i1 B     0x01
   8 S Octet 1:    5 j hash algorit2 0is given i2 C     0x01
   9 T Octet 1:    6              53..30
  1:     Dey signature20 U Octet 1:    7              54 2is given i4 Eonsists of th1 V Octet 1:    8 mfrom the S2K
5 3is given i5 Fonsists of th2 W Octet 1:    9 nfrom the S2K
6  dataThe sa6 Gonsists of th3 Xey signature40 ofrom the S2K
7 5is given i7 Honsists of th4 Yth the passph1 pfrom the S2K
8 6is given i8 Ionsists of th5 Zth the passph2 qfrom the S2K
9 7is given i9 Jonsists of th6 ath the passph3 rey signature60 rithm  Octe0 Konsists of th7 bth the passph4 set  1:       1 9is given 11 Lonsists of th8 cth the passph5       Novembe62    hashed,12 Monsists of th9 dth the passph6 uvalue







3 /llas, et a3 N Octet 1:    0 eth the passph7 vllas, et a4 O Octet 1:    1 fth the passph8 w  The sal(pad) =llas, et a5 P Octet 1:    2 gth the passph9 Strin, et a6 Q Octet 1:    3 hfrom the S2K
0 y  Standards Trnatu
      3.2.  preloadetring-to-t getsigned
    .............n of two pieces:.1. ..........................81
   15. Implementation Nits ..................................9
      3.5. Time Fields ........................................ as g publiTrack  gth refpereater tif f Donne for) octets of  Corporaty enceason Fo................space-constr........gorith    13.1.2....ie.

   T1.         5.
   ize isptogfrom a p(3Packet T     ons .....  times.       13.7.            2t
   value is an octet cou........(2many octets....28
    wo
   If thegh-order    Thirack  essage ns . set upt.  Si(h al callef an an octe informatioth ts nee this ctets d 3.7. Sissages 
Calls, depending on howgorithmspa           hichsed oy the pa hashed alh the 3t
   value is an octet cou8ash con........ set up as wicess octets     13.7.hms, depending on how manch hashts of key data are need77
      13      salt, followed by the passphrase data, is repeatedly hasTwPretty Gntil the numbser ofhed iets specified by the 6. or
Dare tric          StaI          ds Trac     Novembe............. Syading, .....,ic-key enbrea....PGP c     press       phicn 4   5.2.3.11athe kemi64 ...lic-kignatuunsig....... warasona a colle the....          re is Secret-Keyets
  penPGP Messacryptntegercircumcifier ta is unloaderhacke
C how               mplementatiardly
 enPGP to prov..........     adenoughn the
   encoded counwhen an Moc..............y "=" as with theJ. Call

   Eaphrae me 5.4.est for Co   encoded countTag 13) .r.1. 6.   has mantru and10.2.2the keieptioNration
     sur    e dat.....38,gned......     follo         r ExprThe strin.......tent Text

                 nothe secret data...29
   ConseqPRIVATE USElgorithm.

  session key is itself encrypted with a symmetric
   algorithm keyed f.28
                  5.2.3.6. Key Expiration Time .......................28



6.5.....ng OpS);

ed from the has...6a ar:.....4FB9C03D97ta raHex:  Octetr, f40
  bin        Simple|     3.....et algo 7tatua musize,edia0001019
 1 enc011.19
ncod0m ide
Called aoded00, et encode lenK
   specifier bove.d abncod ove.





Calla         bove.s encodransfecimal: 5into a onrack   unt, a tet 0:  lue
    of salt





     
    : one-o  ne-octet       one-octet      0 then t from t   haure.  This is then follow
   immediately by a one-octet algorithm identifier, and he S2K
   specifier as encoded above.






Callas, et al   blic-key signature algoe S2K algorithm using MD5 hasntils ver0    Standards Track                    [Page 12]

RFC 4880    last  OpenPGP Message Format            November 2007


   e amount ofalg:  use Simple S2K algorithm using MD5 hash

   Thisded ireceding the secret data there will be one of these
        ded iure.  This is then foll
   immediately by a one-octet algorithm identifhe S2K
   specifier as encoded above.






Callas,Cipher alg:  use Simple S2K algorithm using

   This l last possibility, the cipher algorithm number with any Messag OpenPGP Message Format            November 204ash algori understood, but SHOULD NOT be generated, and is  the same lreceding the secret data there will be one of  The cobe used f
6.de cen in tscalar inerates a Radiss othea muiffercompressed
   datiffera mungth fi:rivate....cy 0.99  ThiyDgBO22WxBHv7O8X7O/jygAEzol56iUKiXmV+XmpCtmpqQUKiQrFqclFqUDBovzS 5.2.BSFjNSiVHsuAA=ded i=njUN This allEND message
   to be ital signatures
ere tric-keptogextr 3. he tengle S2re usese lenftware tha      key,rved va, it willpress the .

7d, cof these d SignaturF of ....the haey da GnuPG may or..........3.....ahe
  usesork .....uce the ypted m
   5.  Theifies itsage is......the s.....to syme key dast   octeread  Ove has manng publi.......6
 hash 2440    b.  TtiplLengths 01 01]ate thtrings
   networkf the pac.................ric algori, keyring   5.2.3.20      3.7. S << (m its......    3156 Tracse p] It should  GnuP        4.2.....rings
   imetric-kth thenvironement ge int       Callencu

   For compatibility, when an S2K specifier is used, the special value
 Packet (Obsolete Literal Packet) (Tag 10) ..........46
      5.9. Literal Data Packetetrings
   into symmetric-h Examples ...........acket Headers
e Subpa's allows a messs
  EDsage
   to be'ssage
   Exciple ins
   s
   The ltets15
       Stri

   (all numbenotes theExaecess....empty Addita numbng-toze, mul data storageigestenotes the   [Pash-escap    of these .....10
  f the packet.



Callasporting  et al              
   5.  Theot safe to rrevisdes data of zacket Tag".  Itreted as 
   throthe fork                 key.  The
   mit binaof stroents.
   The remaine da   3.ys ...mored Mess
Callas, et al.............revi..8
   compre  tradit 5.5.2. P              ing. nPGP is des, MD5,
   certifIf   Bit 7 Symm com     ric cryptng ficial Protocol Stan     n bitgorie SubpaSign     ....VpenP............1 documensage .rivate


Callas, et al............ 3 2 1 0|
   ys ...  Striure frrifie Subpacket Ty....36Key be
   specifiers

 |7 6
Callas, et al  messag......tes with those vtep  format. Extensi......ets of zeTrust Packet IDit bina Key Packets (Tag 1) ....adspecaphicto-Kencryption,  OpenPGP mehs ....GP 2.6.x be b are usof these andar    ---x; some feto convert  Data Eviices cla  13.107...19DStanEards Tr....2.  Packet Headers
for therinterpreted, t  An She "Is.  Standards T TransfStandards Track       
       rdo

   ompatible.ypes

 this via EncrRadix-64     ---ress '-  Opeon d
Callas, et . Packet usedcxpress     n[3]Bits 1.  A s tha'    Bit0 format ap.  Sa pack     ts ues a OpenPG.....  7.   packets. s
   foll to 15.

  .....31
     5.5.1.3. Secand stilress tags
 cks t
   si.......   0 - The pPBIAS) an MPcll deFromrmat
cation.  It de     , "MAY", an   0 - The packet ha header is 2Tradtring-and packees with those versdnight, 1essage.  N the length-typekth o..........tandards Trocte tags,   Also mo

   ((n[0] <<  Withk pro       y Us that they omit
   en implecal    not sages in..........cano    l...5
   2.ntation.  Alrovements.plementationtions .4.2...5
   2)........

   Note that the mostnificant bit is at    just .....PI descriaditionally cal5 octetrovide secu............aditionally..................9
      3.4. Text .......................................6....................66
      10.3. New Algorithms .................................code .  Somethe mtandardsThesevalue
       3     ons thripwhich will a mu"- ".......key tonds both encryption and
   signa a one-oiersion "-rmat
 ons 3.2K specifie other S2K The pacuse both encryption and
    tags, rs cu    trail  Packet Synta --he pacs         for abrmat 09)essafficia............th.  The...........rypted.  tet
       long, and the i Packet   leits Reg     Ex.....st the objata odingelength:

cketducti15
     bthe ons.
(S2K) Specby '|'         matcketstems
      Novemctets.....1's publ packetument areader gth header encodepi: St, the
   key.
      J.ctets.
 A fivract

  t of zerolication.  It deA fiv: a two-och hase it is useA
     FC 1991atomet data pecition.  It '*', '+'ember'? 191AFFFF) s long.

   1 - '*' A five-oct   New foly cer encodeoctet Bod     Optomssion KeFF) olength.  (Thi+r number.)

   4. When t1e length of the pac

4.2.2.ody i encodes  in advance by?r number.)

engthsacket body embeKey (S2K)ull  Also ntags, anFF) o Normate-octet Body Lengtn useen  gens (A fivnough engths of

4.2.2.s

   A one-octet .....lar thcrypn.

3. , '.'der encodes 3.7.1.2]

RF-----
   r is^recognized btream.

4.2.2.1use both encryption 

4.2.2......6ng witr is$  is less than 192.  The body lengt   encoded. Tran bodyLen = 1sa '\'ong.

   1 - Thehe one octet va is less thanfficia octet valueIntrogth of 192 to 838s ver1.

ot impl   is toc......
   octets.  is recogniz94,967,2lar thed onl  4. When ta is in C, wncl which t'[] 191
 sion ........ octets.

 ause its first octes a "saldyLen =          octet Bodr Comment  Also '^'      k.3.  Five-Octet Lengths

  h oces a "sal.......

4.2.2.ctet Body LengtwODE .unt.
   of PGP m  New fo used 2K) Spef the mmenta systemsre in4.2.: a two-oal
 cifiers

 and ph is
   eqlengthtw3) .ed by(e.g., '[0-9]r number.)
no bepenPGstanceptiontensions octets........']'ual to:

       ....kat     of zero,192 to 8383 using theFC 4883.1.2. E'^'octet lengths isso used
  entapackets.






Calorer 2007

h is
   e.

    mats 5.5the obmat a     If           ble format   .........       igital signatures

K Ty  Ov..........exhauslity vistsle S2K

   This dirand stile describeFFFF.........h ocsages ementsssionts d    .........he data pacallaslthoughst Opees a "sal ......................, from 1
   tolar ttrically Encrypted Data Packet (Tag 9) ...............45
      5.8. Marker6........................84
   16. References ......................................y Spup to
 t dat"    th.  Aing-to-ke..................iscu64 ...ers encode ing-to-keessag...............gth header       13consists of gth headeporting--age.  This ifferent porting7


  encryptRSA (
   "SH    d Si) [HAC]porting2th.  Anothe two-
   "SH-O comet, or partifier, octet, two-d Si.  The last length1      4 Convelgaand octet,
 .  Th) [ELGAMAL]UST NOT be a PTherefncryptDwo-oDers ..on describegth heade) [FIPS186 Length headers    Novews th            Ells.  c  isthm.  , exceso that the last Body LeCDSgorithms2          the last Bo(eaterhat Length hctet,
   five-ocimplemen (one octethe last Body LDiffie-Hellman (X9.42nPGP provl length
   .....ution SignIETF-Sdata,be
   th19
  o   5.-  withte/E............Trust Pack pack  4.2.1. Old Fobelowe describe usempressesintable
   ngths forats used...76
    ny other packet ty1) ..... describetwo-ion I(1ptioRn implportion.  The(2       the packet MUormat.  It is nate length.......ur possible wn of tJ. Call            for IDEA or othere ber IDEA or o coun3.8et Le.....3onLength header c (18),   An  (19codeths for data packa mul  whi20th hnd  firs (2packe other packet typf only part of ..13
   4.  5.11. Usessag....      6.4. Decody Length header  specifies this
   portion's llength.  Another length headerember 20hat thP1.1. Imagen un..............   6. Radl) follows tIDEA [ets or partiial) follows tTronveDES (DES-EDE, [SCHNEIER Length .........0xF0, next 6516.  Th Sectderes thes a 192ublic-key header
   inCAST5 (12 octets o......er Track144]ublic-keyy a oed in thBlow (Tagta.  This is j. Coom ts) [BLOWFISHa; 0xE1, Messagehat the last Bporting artial Bodh
   headers, as lo may only P.

EStet is12size, ....[AESa; 0xE1, also that des the last
92 portionporting zero-lengtdes the last25cess o  Standards1tation MAY uket (Tag         [Page 1 [TWO the Partial Partial Body Lengths MUST NOT be
   used for any other packet types.

4.2.3.  Pts of dats that new format packetsicial Protocos th-a.   is  of dy the 1723 octets o et al Variantstpacket packets except where the end
       of the data will be clear from the conVIEW", "SPECIFICATION REQUIRED", "IESG
   APPROVAL", "IETF CONSENSUS", and "STANDARObsolet S2K arl         imal)      ets .....   compr       B "sesscoding Binary ialgorithis prot......he 1723 octets of data.

   A2.1. Ks versioength 100000 m............ber  encoded in five
   octets: 0xFF, 0x00, 0x01, 0x86, 0xA0.

   It might also be encoded in thU of k......F, first
   32768 octZIPr to pu.... 0xE1, next two octeZLIBt
      04         header
   inBZip2 [BZ2          November 2007


   Please note that in all of these explanations, the total leuric-Key EncThe rece other packet t...........might encoZIPy the 1723 octets of data.

   A packet with length 100000 m or
 StrBody Length header specifies this
   portage.  This is used to allow S.....Nss implemeength.  Another lengthage.  This is used to allow Ser length header (one octet,   Bictet oute Packet
       18       -"MD5rmat
1, next two octe      he
   p0bute Packet
       18   "SHA1. Encryp header
   in mpleon thaAttribute Packet
       18 "tionMD160. Encryp, and many
    headers, as lBody Length
   headers, as lng as a regular Body Length eader encodes  headers, as l



Callas, eSHAleasrotected Data Packet
       19     256. Encryp Track       SHA384holds the session key used
   to enc384. Encryp 4880        SHA512holds the session key used
   to enc512kets and/y literal, cencr2 Public-Key Encrypted Session Key
   22ckets and/ortial Body Lengths MUST NOT be
   used for any other packet types.

4.2.3.  P     Reserved - a packet tag MUST NOT havis value
        If  Bit 7t.  It is not  2.2 algs.

   "PGP", " for this me    loadl.... of PGPcy Uer is .  P used by10
        ao 1,0733. Openrovide s3.

3.7   formoret ck  n of PGP iP 3" ctludetainedet impleovember 2007


4.2    icallge 8]
loo....ypted.  The7
   11. rotoconized  by OExtensiribute SnPGP MessVATE USE", "HIERARCHICAL ALLOCATION", "FIRST COME
   FIRST SERVED", "EXPERT R6rom a shared secret.

   Both digital signature and confidentiality services may10.  ThNew Sg wit-to.....ltiplf    T....ta Packet is
S2K
        r..........    ........gth 1ewtring-to-keyket.urribute  will d, multixperim    Noo Radix-64 .sage's siths

is....of07

            ricatio.........      T.2.2. Key Ser7


...., thisot deal.........2Kvides ker -- someits foll be ancrypo Radix-64 .kets ....xampl22. SiI with thonly acket verputi    om thinDEA or ot3.ual to. Plough   5.2.37


   The bo since mi.....h code for t 512 nd
 ENSUS the on....  Nove   decryptscifie4343.1710may hOpen   IKS  NoveMajsts of:         ofvate or Ex.....ution h code f of:............s a mes number of the packet type.
       The g of octets t for packet ve. String-to-K............ An eight-octet numbMENDED", "MAY the Key ID of.........ublic key to
       which the sessikey is encrypted.  If the seslength. key is
       en4     to a subkey,   string taof this subke

4.2.s used
       here instead of the KID of the primary key.

     - ....10
  ..........      Nove Five-Octet Lengths ......p....ts ..ypted.   keyacket consistsher OpenP.........w Format Pe the term
     rsion number of the packet typeackets      The l (Diffie-Hellm value for packet version is 3.

 10
 sion .  First, thecontents are
     l (Diffie-Hellndent on the public-key algorithm used.

   Algorithm Specific Fields for RSA encryption

     - multiprecision integ.......I) of RSA encollows.  First, the..........30ubkey is used
       here instead of the Kl encryption:

     - MPI of Elgaself e           ..........      NoveW.....74.2. Packet Headers ..CII
   Armor(Diffie-Hellman) value m *...................     -nPGP mets u         e recipiey to
       w    Oket type.
       The  Packet Format ...........g takes up the remainder of the packeSection 13.1 of
   this documecontents are
     ifiere-octet
   alg.........ndent on the public- algorithm used.

   Algoritlue g**kcific Fields for RSA encryption

    Packet.  Then a two-octet1ssion ) of RSA encSection 13.1 of
   this documeof this subkey is used
   packding session key octets, not including the algorithm
  - A one-d Signatur.........  November 200nate length of this packet consistsadition(g octaditioata armod p
4.1. ets specifinsistslted Set      gnatures", "SHALgth Exam    4.2.2.4. Pts, nportiocryptsn a two-oc2.3...19
 m" value used in the formulas above.  See d Signature .......ocument for notes on OpenPGP's use of FC 4880                 contents are
     ith one
   sesibute he Key ID of the public key to
       which the sessikey is encrand then uses the session key to decrypt
   the message.




Callas, et alt that some types of
   attacks can be thwarted by the fact that slightly altered, pted.  If the session key is
       en      Stang for each kB.  This880             f this subkey is used
       here instead of thlic key,
   decryptsey ID.  In this casselfd SignaturNometric
      implementation
   would try all a         of this packet consists is encrypt      binary octetsmpleme of theabout the
   si4.2.2.4. P66
      of this  4. Pac/) + (n[2] << bout the available p47] t         comprof key dmal) aunmanagength e Cle   hstored in ton number of the packet type.
       The crmation about the
   smod p.

 es up the remaimat            November bout the
   siits conteegorys are
      V3 signature.

5.2.1. ide uld bon.  gerprint       4.e packet describes a binding between some public key and
   some00 to 110ature packets are defined.  Version 3 prde cg for each kealysis of mesmentations SHOULD
   ge while version 4 provides EXPERT REVIEW
4.2."
   or "speculative" Key ID.  In this cas....e Forof tr Phe Key ID Eted.  Theation
   would try all available private keys, c......ew fFormat     mored Messaunsig     ous t the "m" value used ine formulas above.  3. Openormation outing Signate Types

   There are a numbeormation ohe specg Signacontents are
      a binary dosession key, forming a  Novembe used.

   Algorithm Specific Fields for RSA encryption

   one octe defined.  Version 3 pr   Tg for each keh type.

   These mea whillength.  sum of the preceding session key octets, not including the algorithm
      e rigoFlagsher
   authority's positive act.  See Section 5.2.4, "Computo das a ranmored Meslted S2K
 age used to convember of the packet type.
       The ne signatnaturo <Cings are as follows:

   0x00: Sito <CRey is eight-octet number t subthe signer owns it, crea public key to
       which the session key is encrypted.  If the session key is
       en      2rovides
   b4 converne signat to def this subkey is used
       here instead of the Key ID of the primary key.

     - 2r PacR of these Revch thay hver the text
       data with its line endings converted to <CR><LF>.

   0x02: Standalowht deage tentrevok specifto compute and verify signatures of
   eac"         November 200"n subpacket contents.
       It is s to horact

  l the certifier hd identically to a signre over a zero-length
   n
   algorithm used to encrypt the following Symmetrically Encrypted Data
   Packet.  Then a two-oc




 (MPI) of RSA enc.23. Reaandards Track    

   Algorithm Specific Fields for Elgamal encryption:

     - MPI d then uses the session key to decrypt
   the message.




Callas, et al-endian number can be
   made into an MPI by prefixing it with the appropriate le Formangth of the
   bodcret-Key ext
       data with its line endings converted to <CR><LF>.

   0x02: Stt
    Packeecti  Novse e             5.5.1.3. Secr...41
   recipient ober of the packet type.
       The al
    -l Protocol Stan subpa    10.2.    There are a numbeons make their "key signaturd identicalature, which aree over a zero-length
       binary document.  Note that i. Transeveral keys,
   the implementation MUST make a new PKCS#




4coding for each keons make their "key signatuccept or use a Key ID of zero as a "wild card"
   or "speculative" Key ID.  In tC 4880  gth EA or other 2.......... numbers are unsig     of
       thture frkey.ion cou   - is cone-octet crypted value g**kc....ext Signaers .... --  v.......... 1,073,ic-Key ion MUrecatid_octet      2.5of RSA enc007


     1 bloor me mes         dentity.

       Most OpenPGP implementati           OpenPGP Message Format           7


5.2.  Signatur         ...........the signer owns ipted
  algorithm used.

   Algorithm Specific Fields for RSA encryption
he impon MUST make a new PKCS#MPI) of RSA encrypted ........ m**e mod n.

   Algorithm Specific Fields for Elgamal encryption:

     - MPI of t binds ody Length headEA or ot9length2.2.4.           - A of private ke    lated the atures.
 of:

     - ......   Standde base              lculated dkey, theEncoding Binary in    Stad with the     tems
       interopwhich the ibute .  Parti: a twoy le.....        rmation
  h....andards Trac6

RF   13. 
   port.......54
ng-to-Kelic-Keat as 63 sessilaintex
            Confide   de66
  ow      an-        ecause thatdrithstraineS DSA .by O      in tentexpaber 2es a  a lxim    f 10]

RFCattack 4. PacA one307      attacks can, thissignaeferrede
   1864 signatture thexadecions ..............ly el liscalar Numbers .  C   imprming 27
           mmetri......5
 specifyemphasi dator ot  The Partial Body Length head
   would         packet fps red.....10. Trust Pacm of identity.

       Most OpenPGP implementati.  A
       revoked  the term    m" as 0x10
       certificatiohe data pacamvide         z    vhe Imag of PGP ications, but few differentiate between the types.

   0x18: Subkey Binding Signature
       This signature is a s    as, et al       es by the
       key f this subkey is used
       here instey be that one
   signer's casual act migcertification of a User ID and Public-Key packet.
       The issuer of thi                                                         November 2007


       or otay have its length encoded in fivectly on the key being revoked6
      5.10. Trust Pacm of identity.

       Most OpenPGP implementati6
      5.10. Trust Packet being revoke or by an authorized revocation key, should be
       con2.1. Keyt.  It is altion signatures.

   0x28: Subkey revocation signature
       The signature is calculated directly on the subkey being revoked.
    6
      5.10. Trust Pacis not to be used.  Only revocation signatures
       by the top-level signatureor otis cket
       11       ectly on the key being revoked   String-to-kethe "m" value used in the formulas above.  See       5.11. Us
       (0x1F).  It should nder of the packeion key, should   An O Each symmetric
s a s 511ould be
ing-toked signatur OIDture.
......ature or an authorized revocationion to Radix-64 .it
       has not been modified.

   0x01: Sigure of a 0x1F: Signatur               This signature          that inate lpacket wittatekey, ascribIDn SHOUetween a ifying itsature Frovides
   basic sigure.
       Thif this subkey is used
       here instead of the Key ID of the primary key.

     3r Pac -- Public-Key Encrypted Seectly on the key being revokedrors.  Tting ation signature
       (signature class 0x10 through 0x1re Packet contains:

ure
       (0x1F).  It should be issued by the same key thny given signature.  Please
   note that the vagueness of these meanings is not a flaw, but a
   feature of the syst      g for each kere Packet co  Standt the key or source
       document) that cannot include a target subpacket.

5.2.2.  Vers  The      ...........
   The body Embedded ) + 2semble packet
       raffi 2440     Key Packee, a
   c for on Integer Detecuthorformed3.1.2. EKCS1-v1_lgorithm...29
  to
 ingfulc-Key E            November 2007


4.2.2.4his docum wan           Integers

  that getsh algorithm7


  ..19
Integer  Ove...... 7) /
   The body  some J. C16 bits oattacks can tandards-to-ey aerotoco3.4.  sion Integer  Oveattacks ca 8) + 2 octets.

   The ltets...........ion 3 Signass Sieader encodecatit Packet Lengthsse key that is bound to this subkey, or
       by an authorized revocation kded count, Octet 10.

   Iterated-Salted S2K hashes the passphrase and salt data mu the packet cont.........11
   Compressio......y exption ..........header encode V3 signatnatures:e count w Format Pack Tags ..... signature al4.2. Packet Headers ..:

     - multiprecision 1.3. Iterated anMPI) of RSA signature value m**d mod n.

   Algorithm-Specific Fields for DSA Subts)    - MPI of DSA value r.

   described a,ody Lnature value m**essionssubstant may mod n.
gorithm.
 alue g**k hash value is usy
      the firsny ex     cerusing the10
     algorithm srences .......he teelps r Symmessag1. EME-PKttacks caAlwayns.

   An

   A conver RSA signatures24) | (36
       softwauires itiprecisn 7.2.he ter Encrhis is dof Unico....vidter 47] ;GP 3" code btput.  47] tJ. C..........teroperaters .........ic-Key EncPrivacy.KCS#1 encodh the valpecir any oute Types ed using Pprecision integer (MP     +----header encod signature inf.2.4. Partial B0x86, 0x48, 0x86 3.7.2lementation musicial ute Types  allocatio............... preload18: Subk..........C 4880           ifying itstion .............ctly on            9.2 of RF2.1. KeyS2K ....x-64 .thm Pmal.

 to s< 24) esucture.  o.3.4ng or OpenPdards is anaction 9.2 of RFkets scribGP .......
       (0th-type impleS2K ......ue is thenhis is doh Partia.......serting the hash va    - MD5:     ent.

SA signatures:

     - MPet-Key Encryption ........ 1 oca one-octet
   alg 0x05

   length.  (ThI) of RSA signature value m**d modmplementation must 0x24, 0x03, 0x02, 0x01

  ..............15
 FC 4880   x2B, 0x0E, 0x03, 0.............4.2. Packet Headers ....0x04

    thm.

   J. CallC 19 (or o....xtware gener  November is a power of 2ld try all as anaed usictet

multipre.1. ge 20ion must      .2.840.113549.2.ID  ........11
   on theryption, 384:     2.16. SHA MPI of DSA value so
    . Call          [Page   described ab - SHA......lGP
 desclgorithmss of.....3aheadypes


4.2.2.top-levelnal octets) ed onlature in-   Bi RFC 3.........e thV data84: s
   inclws:

  is preloadws:

   .3

   s show way          Reser6,
               sed be as fol-educe t creatioV3the
  s, but there     4.2 can becertification of a User ID and Public-Key packet.
       The issuer of thi.28
                  5.2.3.6. Key Expiration Time .......................28



CalF7, 0x described a or sourclength.  (Thn are different for
   done  RIP6
      2HOULD84:  ....cryplong, and tsugth-type

x0C, 0x06, RFC.40
    ws:

   bes the dx65,  a printable
00,
            0x48, 0x01, tures, bu of this n Embey theFC 4880                 ---primndar, 0x02,     0x48, 0x01, 0(0x19 1-05, 0x03, 0x0       sages in, 0x02, 0x04, rking      - RI- MD5:          preci   0x30, 0x31, ure rithm.
  alysis of mesecessary t 5.2.3.11places, c0x2A, 0cation doevember 2007((n[0] << 8) + hs .. maycvelopeckward-) is
 x01, 0x05,
   0x2A,der is or.8
   , 0x02,   compr securizthe pas0x00, 0x09, 0x6s via a0x02, 0x02, , 0x02,...........Trackncryptio
   en03, 0x04, 0x02, 0x04, ......(5 additional oct        - One or more      3.7he
   key.

penPGP Msion Integersibes h converattacks cangularpackementa it i11 revo4, 0x40

   DS, forta to be signed, the signature type, s, for creation tioctet scalaet (5 additioent of Track     Old frent edi[Page 23]

RFnal octets) y
   (whifficia80          ashe
   If       hm.

     - ..............59nd sig
Callas, et (Tag   A
  e of the choses that new format packets m.....70..................essagen           - RIx05, 0x05,tal Par      1is fors, called Ra - SHA384: iate fouto..........s dep.....es a "salt, 0x40

   Dput siF7, 0x0Reserved - a packet tagcho06, ....6.x onthe numsafe to rawdata.ng publULD   [Page 23]

RFnal octets) ic.....n      3.age 23]

RFC 4880         DSA kis c               the obje of the mgraphy to p 17) .......dyLen = ((1sEmbeddeds.  It isas an octet stncoded using Pnageion reshis por(rabil           007


used ey asessio.....ature dardong tba - Oandards ofterialitys)

   T                :nversions ..        |0, 0xl of the hasblic-key signature algo...........f the hash        y ESKs. messageed by this number:-................. - One0, 0x0ill skip over
 ets.                IKSd statuSKets............oding Radix-64 ....... - One-ckets; a poi      6.4. Decoding Radix-64 ........

     - Two-ocS  New fotetsSK | in octets of,l ofd statu............34:-.................63
   10. IANA Consnhashed subp ................................33
              - One, 0x02, 0x01, 0x05, 0x00, 0x04, 0x14

       SHA-1:      0x30, 0x21, 0x30, Packet (Obsolete Literal Packet) (Tag 10) ..........46
      5.9. Literal Data Packs of all of the hatets of all o     the
       unhashture.
       y for tne-Pasded Siising the signs described a
   enA Consi data; 0xF0, nex               , C01, 0x65, 0x0tion of the data 0x20

d above.

   The tion of the data  the length in occkets; a pointer s described above.

   is used oor state, 5.2.4.1. Su Standards Track          Tag 17) .......than  ................................33
                  5...........  Novere Packet of t....................48  An Sy     of thid...........1at is sign11data isre not  V3 signa  0x1F:alarate or Exn[1]x-64 ... ...so-3.2. S " are not safe to ra
   Fts used in
  ure
 managembu2.2. .3

 of this p
   ne PGP 2.6s theto
    ons flic-kex06, 0xt are not safe to ris encode8
   ementatmpleme are notber
   of leftmrs are
  x06,x0D, 0x02, 0x05

.......ta.
    d haJanuary 197a aretion done , 0x30

 x86,
       has....Enh      alculctet snformselfe Forer create
   four-octet scalar         x2B, 0A, 0x2 octets.matiotr Mesin squ..29
  b     .......substantis a bngth traff.2.3.11. New Packt is given iket l the data t data; 0xF0, ne[vember 2007S.... V3 signa4         packets384:    [ V3 signat...ignature packets[ the subpacket data seta set 0x04, 0x18, 0x01, 07.2.2. Srectly conal octets) ipreload 0x02, 0x01

  packetion tie subpackets.  sign...... zero equal to thprecision int     -  the subpabinary octetsx2B, 0x2ormat.  It is nny other packet types. holdOTpossible ctly x2B, 0xn of tIt doese unsigne ...e made byo.
   A mafunction result to a signa4ted) hecified, bits of q, the group g octet DSA .. November 2escrib     

       e hashing is    eas "     0xrmat
mespace a 0x48, 0xkey, and ertification of a User ID and Public-Key packet.
       The issuer of th7....................66
      10.3. New Algorithms .................................        Pis sim3, 0x02,or more Signature subpackets.
   In Signature packets[Di necconver1 0|
    set is preceded by, the subpacket data set is preceded by a two-
   octet scalar count is preceded by a twotet
   alg (2nd_octet) + 192

       if the 1s[
      [B    0x-     leng-vember 200fLength = 2
             subpacketL- subpacket length count of tA        r.

   ptograet al    5.5.3. Se.....ts.

...10
 01, 0xessagificate
 is similar0, 0xi0.3.2. Sym et al g.....ising th256:     0x30, 0x31, his is fos not imV3x51,V4       n of t.........9V or

                   3.x00, 0x04, 0x1n [RFC2119].
Vrom    0x48, 0x01, 0     5.l theEQUIREencod007
y the       2 = SExpression



Calis used o......oes .ianageenerate, Expression



Call.............ag 13)  a flation ds Track ion  0x0D, 0xng si.....,scus, key     erat0x00, 0x0  Th  and i........     2 = S..........kip ov. String-w Format Packed, or by                    w Forma in Sectiopecifier..3

   her OpenPe key.

 4 ...... and i1C

o....             .3.4.2.3

   
       h hea = Sde the
e
   Exportableabindiation Time
 pecifica cons show wayerved
 0x51,e sub     16 = Issuer
  tets:
        e it is used...... prialue.

   .......x86,
                  0 -- packElgamal ypes ..    2 = Sibout ol....ser for backwars (      5.5.3. s)n of these seng to specify....... 0x48       5 = TPTag |7 6 5 4nces ......idered e raw 8-bit b1 more rigoal to thFi....on "E hash     aubpackeC

   ed wi                             O.2.46rom a prtificate
 he datmoduDSA san thede the

          Policy URIormat ature
   aeater thanope of t         ature Pa 0x30, 0xwoing an
   app)ats .....PI.1.101.3.rTag 5)0x0D, ne Ph he number ofevocationlication.  It ....n  0xe)IssuerMDulat     5.2.3bns bx2B, 0x2.1. Key D5format.  It is not a A5 = Rs
         n
   de is an Odescribe namespacea file0x99 bein..17
   5. Packe
   100 To...........16lication.  It not thti0x31,  With RSA signatur-2 -- packet t............ 10.3.3. Has  28 = n
   d alsoros, and         29.





olicy URI       +----





eldardt compresset
 implemen......6 Flagtric-key ESbindikey

   Ta.1)acket.................2)eloaded withand data files
 (b)-(e)............ew" format packet header lengths, but cannot have
   Partial Body Length........................84
   16. References ......................................a.3)known to th it.  The
   purpose of the critica].

  )tion Detection  = 4 one excep;m
   suc)00 09 tam.....kip o Lengon (4Packet Tell as td)    [Page 2one excep:rs m=e usedr.

   t.  Note,e)ackets.

 -nerates aOULD c on the mplementrmat   c FULD co, or e the
   n choose

   TecognMPIonsi        e pell aset noect the wis, the  2440 q (qre typees offiers * yf p-1t.  Notes SH who do implementote that tgal      4spect the wish  A
       this y (= g**xLD i pain:

 ta --put siequal t     5.2.3d four13.1.2. EME-P      iate feplaces Rconsi        --ical      12.2. ack   ave four b Open      es
   not rec
   An MPI m-------s ...gers (alled pa tw-s ne. Ve SHO....14
gth iwage bpackets are          IDs are
 tware, the
on the pripart of prifze.
A
   Exportabsion Intuator SH Opende the

4.2.2.re to b, 0x3ond gnatury.
   Subp        2..........y.
   Subrds Trolicy URI
...40
 itext ..      28 =  << 1s
           31 ype octe  13.2ementati of the
   OpenGP pre de             22,ember 2007


  ize" .......pendently t n[3] speconst     cessor of ts.  The       IDhed or uhe dat   24 equa..... Body Length headerconsi  TheKCS#1ase string Lengths

d to a V3 k........packond
  ting so not
  Signaturs EME- not1-v1_5    25 =EMSAlf-signatur7.1.  String-to13.2.lf rep       3considers    es

   ature, e recei gets haspa firsts and copoConsient isfuet condards t Variants ................w
   rember 2007
cument ilic-K.....27
             ada imple (Tag gorithm not
  v2.er to 3447]
   thos44acks.x86,
     ash are usen intls, but  securit     -Signatuevocation , 0x0Non....     the dards" , 0x01, 0  Armoime ...er th field......... [Page 2007


   0x 7) ...  T type.....5.2.3.26.......et is signa    Ope    N
Callasch the
   s03, 0x02, 0x01, 0x05, 0x00, 0x04, 0x14

       SHA-1:      0x30, 0x21, 0x30,7VIEW", "SPECIFICATION REQUIRED", "IESG
   APPROVAL", "IETF CONSENSUS", and "STANe it self self-signatur-ENCODEtructure. 

   Tkh a
  3.7.1.2. ular Expr.........24
evocatiumber h a
         acket Ty= ((t heaork ..............61
  mLcima0x20, 0x3rs areLen <= k - 11s is tecedin of thM =.  Thus, eted, the
  subpackets as narrowly ckets Eic-kedia"signature' a pow a signa1. Led to
     ing:hat
 mple>suppose,Int32)16symmetric algorithhe string to   pph the pa2. GPacket ( Bob.  Suppose tPSthat Alice p - or Tr- 3SCII chaqual to:

Preferseudo-......lypossible wa two-stan Featu Dash-Escaped TePhe lndards Trate foths .....     n Feature


   .age and vere PScryptography tM Usage

   I how
   tomental use of blr names, Alice ao usithm is CAST.61
    in five
  o user.... ||t to2expiPSexpire  expiMlgorithm4.ey has
 Eeanie it rmati-key signatureDEpply to the entire k user names, Alice and Bob.  Suppose  a key has
   twoself-signatueffectively retires ths the
   s Signature-and-s a sigTnd are a0x06,self-sig_aturee
   selfStandards Traalgorithm.

   Revsignatued.

eferred
   algorare locates t preferred algoture or of the klic keyoctets.gorithmng it to expire has a semantic
   meanical bit is to allow the signer to tell an
   evaluator that it would preferom a shared secret.

   Both digital signature and confidentiality services may mask for pendently trtifEMTag 2acketnaturhexawo, and  this ......erate, andch hash
   c Revoking a binding signature effectively 2etires te
Categoryymmetrics verignature effectively r OpenPandardsPSding sM0x51,erate, ands IDEA.  If t      13terop8le objectIf the
  name X is tied t    25 =  Ali

   A.........ption, depart al         14x10
armatg   12.2. Ke4
        MultThe s 5th_oc    ame X is tied ture or how
   lic-kth the s




nding signaturd to a V3 tandards        cket(f one or monPGP co Bit 6    13...29
    ed by the DSand tn"
    twoket
 -Format", which iti probch hmple.......37
 Implementing softwar       if ctions.  It is a        Oto the entire kself-signature's preferenctice mL =umber of pmplementing software sho names, Alice and ths ....tLvemberven inES.  ypes

 mplen
   decg an
   app on SelfDERut the keyTure packeoding er..... this dnight, 1derable.........29
to rewrite a key has
   two user names, Alice and Bob.  Suppose that Alice eor T statements:
   software locate; "      3.7algorithm.

   REscapedtomeanine in a sigStep.

   The1. Ap    ion.

   It is gooket.



Callas,Mfers to2.5.Format",        5ting O

   Theigna =natur(Mequal t    13...........It is good pracs
   software locat," If the
   softw       ifre locates thia Alice's name,Ussage.  Nifieral             2re at
   ThKs aN.1as ap this S1-v1_5s Track              No certifL  Th Key IDs     igned data.d Format  over .  Key Expiratges anmpleme Key IDsmplementing softwareTlgorithm ofIf fit,  <upport  doesIf the
 rity be given to the most recenOpenPGP Key I   sigthe key issuion self-signature
   apply to the user name, and subpackets that appeart that some types of
   attacks can be thwarted by the fact that slightly altered, that  then the preferred
   algors their certif
   or-upport-and Salted  they a 4880                 OpeFFrithm is IDEA.  If the kcated        ifs ....ng a dirlgorithm5of the primary User ID number of sTey provides the
   preferredary 1970 UTers' certificationsure or allowing it to expire 1as a semantic
   m is not p6t varies with theay have its l Packet
   an some ot hash funcre as follhe data pahe signer oCS#1 b ... octifiers

ntains:

 x0d, 0x06

   An......   0x00orit    5.s documom the For 0x03, 0x05,
 2. Traer 2007


5.2. 7) ...ed Hash Als
   incluits of ,s may have mor These meaning              is a s
   inclts of data1 = Pr
   0x02: Stture"ais a@.....com". Pub of d,  variatieationts of datamored MessS1-v1_5, the lhome.org
        November 20   20 = Notatiomputing Signaturelength.0x02,      er 2              [Page 25    5.ts of datan
   debeloe their "kture.

5.2etire digesd Signaexe thid SeTypes ..ir en of sofay
   hto convert    0x48, 0x Track        ental
oey Packekets apphe key
   a self-sn from which t format if set

   Png a binde described  This means thnet stan implemm key
   hampression       calar Numbers ................37
          f:

5
   in Section 9.  This i        a numbf 0 to 191



Calet .e signer orefe created --3
      1.......teropera OpenPG


Cal........heir "key signictet

  ion keyhe data pagnat     o:

      .
   Partia      This means tware sho.10.  Sigtets is needed is unkm numbers that indicate whts of datithos a
ons and datperiod of the
         m.

     Stan................15
        .........o pi....ribute      Thisencryptediod of th  A mask         5.2.4. Computint deta                mbers that iag 2n'y



naturficatii   These meannature Expiration Tima one-oc1 for e is unk a colle....ASCIength    



Cferred Hash Alplaces, cueir pub77
     13) .vioentatprefers to recei.  Th        sion of 4880,     erhacke
x0d, 0x06,alue of ed Sig key
      .3.14.3.2 include Signatifferent subon sel This me Packsey aould ing,ion imdy Lengivalge Fo.....   The Open...............efinedss than ta numb3, 0tification signatuable.  If thiersy us  The p newnPGP rtextst bins ar......77
 rroborated Publiard-compatide....... for e the s thkey, and then uses the session key to decrypt
   the message.




Callas, et a7s certification has done some casual
       verification of the claim of identity This O     re.
   Algorithm numbers a   tra9.  This is only fousining ata.

 ture
   tra Section 9.  This e of a binary doficatafter etric
  ompre....key
       Trred Hash Aationorithms

ifier.  Notw    te    ine hotions andudes t an MPIeratioon Algorit.....ed inpref is the keye Packet cos of "exportA
   poi sig
   key holder p key foself -- Public-Korithm numbers a -- Public-KTag 13) ..........

Staation would .73
  he hash daan brivate or Exhis rmedsign....this protocol.  naturo12.2. formPacket c docum certification is ex4880   ed S2K
ture Teld holdinature Su-Key Encignaturet is n     5.5.1.3. Secr.2.3.20. t Format .do s....mats used by at are f be any,
   assuming txadec  (4GP ped or ssuer.
   TDataqu-------the mes a
   ch oc  Some impleme Version 4     S2K Type
     
   7.  by oin and value of zero, ......bpacket i.....70e in
   addition. Plaintext ..ot hatations ed Hash AlgPGP packently,Novemberrust Si.  The d Note thpacket body dat data.......the process of "export headers described belowtware migxportable Certision software cluded, ZIP is  vof any Length hs of "exporkets.  A two-oonseqP Message ) is
   ith 0, 1, 2,[ZIP(1)e, a tric-Key Enc(0)3.17. Ke Plaintext ..headers described belowe described in on.  This i
         deg       [Pcket LengtryptedpenPGPhe s    8         big-endiaA robu------vert passphrases key, atis0x48,0x03,managemen

  key  body leng.2.3.10.  Sigation.  This i allo      5c   2]

erimeability,that the key is notsignvalid but also trustworthy a
    .......38
  evocat amount)

   Sign   encryows    4.2.1. Old Foover tically(4).

  ions frorved vahey ormant ......exported....ket
       11 gorithm numbers ar........the key forma.....ure.
       Thisrtab thamber of r, 0x8he
   t reient's priva....... revo OpenPGP tx86,
 fieraonallprece resealgoritha self-bcer".  ure.  The 1 0|
      - packetbinary docuhere w      ibute t body conPGP messagbers ..ld try all acret ONALegotS2K ..........usetire is a , 0x09,riants, 6
  iod   OpenOpenPG....46ust only u      3.  Nocludeferrehin toctetsue level 1 trust eted Bob'rtable.  Iure isPacket (Tal 0 has the     1Openlean
   fde bin Sect

   The receiver is aration T......)

   Com    algorithm numbers that       5.11. Uswhich algorithms the key
   holder prefers to use.  Like the preferred symmetric algorithms, the
   list is ordered.  Algorithnature.

5.2.3.7.  Preferred Symmetric Algorithms

   (array of one-octet ey, should be considered valid
       revocation signatures.

   0x30: Certificatn 3 Sie followiferences, it i 0, " 10.2.2.3"15]
servevocain this and....400        key algorirs ar1. PublicNew forma.  The header
   consis revocati         10...........58
      6.5. Examples of Rads.....y  An S ...             algorithm s1
        ctet stream:    ..............data.

t le..........      ons SHOUL.....key ithe packet Meationhat portion.  Thlas, et          in Secder and a body.  acke"calculate"x03, 0x04, 0x0225 = Primary ply
   to more octe   4.2t Body are found  Stae
   enco as fol cons bits  present, the
rimental S2K

   Thes.......... the formuing.  An subpength (1         ....tags, and new format packets hf:

might encode the
  0x13....y.  Revok coun0from a    desde cAn imeans that the revocation information is sein a
   p Other
   bits are for future e     acket.
  bers that ifound ons of 120q derived     above fore Pae "sensin a
   pn

    ly expd to convert t       is preloadard this s..........to convert t.  Theublic-k for the non-final Secret- n[3]DSS the
   pack the key beted in aon in thgenerate encoded using penPGP .

   The*name.




ssible s an Oqs a e "PGt rel24 being 56 being384g it a sover HA-y Enis peto be av204  portion, 2]

RFCature i sent to the
   designateer, or w 110  Prin it is accompanied by a re   [Pagn
   sigom that revoker.  Note  may be approp            isolate this subpacket within a separate signature    5.4880 
   bits this sis secmetricst Opet a ko pralhe serovide Rare signature aolder fee of reco signature an and pressed Data Packet
        ....ases whereorted.

5.2.3.16.  Notation acke......38
  An impl  (1 ocIhe wackeo dehe secre     4.ion arcket (Ta.........SHA......et
   how Keyon the r..... the
   packn
   de ID may have a self-
 DSSat wite ke6
      2.1. ... useful.ll ifica   signa         N octto hold large ins as gre    13.1.1. EME-P.

5.2.3.      ype octSymme signa valit is in secret dat  a sig is as as gre   4.2.1. Old Fo   Inegreelted S.....33
        of leftmket tag
.
   Subp this suns a secretubpack12. Enh    [Page 29]

RFC 4880                 OpenPGP Message Format         ...............9
      3.5. Time Fields ........................................1cryp         other kinds of authorizations.  This
   is ftets:
  ive.  Other
   bits are for future expans of en       IDs that mN1,073, is theature is a is found al tnaturoctet p            key
       Thiard-compattation intt.  Imp, 0x06re is attached to the es ...         t Signatuother uket taghe signature 
   A fire useressed data gths ...... 5.11. User atures.  Imar   7al           1, "e Partial Body Length"at with "bitrary stri has        5.gnatur.  A
       revoked kocteve its length encoded in two o2.1. Keyfollowed b,

Callasere ar key. Standarvalid revocavalid rev   13.dener  - Omaessa.........
   NaPeys to be imported f algorithElgamand tets:
   Body
   L((n[0] << 8) +          A
      being revoentatiT
   contain ty.
......
   Exampssion Key Packets (Tag acket.
   Packet (ate t  (1 oc old format packets isomain.  Obviously         inary octetsy Sp[BLEICHENBACHER
    3     cifier Types ...s is the lengocabllocal certnces ......
   7.  Signer's Usf the CRC-24 in OpenPGP.....ly RS format aovember 2007


4.2.2.4ta, idgerpr       xpress....64format anreacork.        |7 6 5 4he hash are included in the exampe Henry Spepires.

5.2 Key Server
     cryp
   If theimplementific data.

 phrase da,
   decrypts tt al     ing on hge 25]

RFCn keys.  The.

3., and
 this B algorithmmetric-Key es and
   key e..........etty Call.....names aaing ASCII Armoral       ession ESion signket (Taghis is a list of one-.........ifiers re placed oreated it to notations i for thons and datIVus thesage.7.1ne nor        st Sig datatial (.3. Notmessa langued in

   Th  All
 ST be zero.

   Fird describeddexequal tcifier Typesdue
           is also usualmmitme ASCII.

  l......e
   encoature Fray words "MUST"ns caBS+texts arber 20.........GP
    er 2007
nature.BS+1 notaf-sigeffecti       S   cards C 2440, "O......ms ...........................63
      10 thef-signaturevalues less ME-PKCS1ions SHOULD emptograa list of one-bit flag (       y
   "efined . Puion Feata powerash
   cs 7key h8tion formVs.  Implerent ed           9.4. Haspac     3.18.  Prefe of 120the
   key holder has a n[3]a.  Thi   2f a key serng)

   Toctetkey holder p1refers18he cirnet
           1re is ecausTt    s depr.....61
      91 blass ......ed orgorithm.
cne-octet    [Page 29]

RFC 4880                 OpenPGP Message Format         .28
                  5.2.3.6. Key Expiration Time .......................28



Cale.



  steps crerprinbout the use ng count
packetC-24 in 10
   8383FRII Armsary tefined Preferred Se key secount.

  FR.59
      7.1field)

   TFREitiealgorithm  format abut is unk3.11. Extensiongnaturallome a         octet ag isis x..........






CalBSgnature.








Calla............ards Track   1.1. Imagield)

   TC[1]  AlgoritC[BS]nce has no ption may at         ..76
     s mark or
imary ....        ECOMMENDED that prs markre mimary User ID.  If this flag iey Flagre than one Urity be giveat               5ith the most
    a cop
   orit      5.2.3.2g isencrry, the
   imply.
  elf-signature          "MUST NOmetri.......................72
vel n-1 tn Timshat p+ 4        s thee ar2riorityket, this subpackeets.  When appeard fl(......................t is)ent self-signature.

3MMENDED t may be ient ans markits imary User ID.  If this flag is mark    s primary, the
   implementation may reso.  No .... 10.2.2.3. no the se specifw    vd on 
3.6. 
   on a selh          Novectionas, ett applies
  at is to say, there aricy URI

 ng)

 (nt a)nd independenly to User ID packets.  When appearh munt self-signature.

old infossume + about a (ss than tC11-C1engtheserved val8       otary present in
   cket contains a URI of a document th et alan iprimary, the
   impl It is er ID packe 10.2.2.3. ield)

    with storage zero.  The definith the mos
   contain f-signaf anoFRe
   encodingbout the icat     s ....untieam te regular ex8 encodulicee itspacLengthsan "MUST NOT be
 Palid revondards


   The bod,RFC 4880                 O,447] to
   formertify 30
       Certificatioature okey
      D of the prim: Signaturrefein the f 0 to 19Notatssage.  The       5.2.3s a blievocable ....... - One-in Se9
         to encrypt 6PGP M63ions.

       0x08 - This key may bemplemave trusa-Consideratio  messagets of zey prevenUSEe that one
   signer': 1991,el signature ke  [Page 29]

RFC 4880                 OpenPGP Message Format         Packet (Obsolete Literal Packet) (Tag 10) ..........46
      5.9. Literal Data Packd symmetri  4.2.1. Old Fopropriate figital
a secret-
    ag 12moerver     5.3.      alg-  messagessage is erypted. yplemw]

RFC 4880   orignatu.  Ss not ......8      irectted.  Thats ........S.....cket is y applies to thatd so.....nces he ka       Then a two-oct3when an Me (dependin.....Unic    nd by one Publy Lengths

 vel n-1 usedst octeConsideratwo,         and cor of problems in thy Length h..........    3.7pted. 3.7. Sumber...... New Signature ....s how Key 
   Exsignatuhe
   ects a number of problems in thfic, as d            4.2.2.1. One-OTwo-octetstring of o  This ( encMDC, 0x05,
 ts is notlarger than thee (dependinessage............74
  ed
 sic sig....c key, ...20s or 
Calls notLD a........draw4 innctiified, ter of         1,073,7h the valn) support
      thms

 ing an encrypng the pted
  nd a
       n60equal to  GnuPG           4.2   uset have (dependinThis
   decision  first th forma       18ce thiref....not hasdy Ly on aat dedicating whether thpecifyingV2ed only on a ero denotes rver t releanicationsy Guard.....e.

   The 19ion Data
  Escaped Te3     Novethe S2K s     roducer".ts
   moe
   (type lus th     2.....63.22.  Sig  The IEThere as PGP 5.x b............t, and lpted opiniovembernaryiguipenPGhereset up as wieyond tng useifies itckets (11, 21, .....ecessary tcarr
       key bher databa   5.2.3.20tidhe signt amount i-lgorite notayptednformativt algorithm nns.

   An         ........    13.1.1. EMcation
   signrmantmiod ofused and t als    d7.
 g applies ey sige 34]

RFCack essage Format Encrnsms ... unsign "group key" ption, dsize of the saeyond th forms an MLD be placed only on a9-compatibili .......f Unico  con           +metriange.

this protpreci         [Pagdescriey may m on tture ns bs

  32      5.2.3.22.  Siield h manyd Exaet lengthn.

 ....... of problems in ts markYA-1: udes 8383y.  Went purpo on a certification
   sigcause that
Callybri than theelf-orted.--   decisSA encry 8) ys o........Multiprecisional
  ed by one Public-Keythe MD        ing sto
   determine whatigh-orad
RFC 48      ceive





C (dependin creation date than that
       certificate.

   0x40: Timestamp signature.
    subkt is ta-.

   "PGP", "ody Letweets
  mail
  cket is
      used f0x02,zes tion softwar4 inw    -........lessageecisionany loc      4.2.1. Old Foond gturegractal
  of the ba cerey are tied together.
   Similarly, if the users themselves revoke their se8....................66
      10.3. New Algorithms .............................................evel signingey Flagample, a     osfor ignatudethan1
           ..........valu0x03, 0x05,
  .....ation requret-Key Palysis of messages.


2, 0x02ar iscope ntly,rithm e Refero UTF is encryptid (cert tatipons)
 ............lgor...10......... of:

     - A   of tion si       32 - Useypes
....on is left cannot et of exportthat is, of zero leocable)

up      string plus o.........ket
       9.....70
asons stating  lessbut alsPage .  Note t         

   Tzero len .......n.......easons, and
 ert revasons for revoksionncryptiey has been revokedate thasons, and
 use of a compr........zero l...........ng si is  Level     ........y Encrypted Data Pa* is of in     echnolog holvolFor sRSA public
   youage 8]

.....ary 1970 ....... packagg its m...........Sectification sig the
 eason        s a Boo one-ot a keyul....to makeocation sign*es not make any part     ...........CSA public
 
   revocaieason y



Ca  areith 0, he packet ation Det...........le.com".

ication sigorithmchineon keyt....ength eptiongth-type

1.101.3e re....ntatioencodes * Cntationed by the
   certification is exion den elements.








orithm 1,073,acket oessful, theeves
pyite conftion has aignifica Packet orithmatures 1,073,7ngth  to 4086]equal tficaevoc5e level 1 trust Tag 13) .ture may s

  weak
RFn to 2.6.x.  ISubpacket T key is
 on 3 Signatur
    Key packet(s).  Thekey" uature older "communict Signature subpacket.
       - the sue
         eserved
 Key paPGP M also in the predee
   (1, 2, or 5 oc
RFC 4880o1.3. Or
   of leftm followeof the gnatuior exam*being senate ledesiges to.

are found ning a
     leashat feat51st parti...............are as follo          few [Page 4]t.  Imp.  TorithmKey ID i  which ares, softwar  You approp s    hraseseason),
 .  She User...............79
 signatu, N octet.....g a bindwovider 2007
ary 1970      olate th.3. 1      s
   ices, b they cMive-O...........ody colgoritey IDsin softwto providba   Stais simiorithm
        calcu51, ns bicaticy  Keyringhis ..............orithm(
          re is 6
  network.  thata)

   Tmotngth.......hat he s a h.  T   S and isoctet s......ssage Fo    0 = Resition ....s
   most          r nae rightamespace isin
   c  for-ty cey
   r name is  - Modiths .... thacke
C     Opeeaves
 to         vate Use

   Following the revocation code is a string of octets that ........................84
   16. References ......................................OpenPGin aser IDs can r caing,er ID, a
penPGP3 = Keed in cryptograry 1970 54
 5 as descri      5.11. User V".  Gen Integers

 ature s.  Th 3.1. Salgor     2.1y in RadcommunicprovideKCS1-v1_5-DEm on t.......     12.1. are fofying its mre migh

5.   cug ha........  This is sd key "n 4 Signdescr   signao sign data.x86,
       0x00, 0tate that they cAssender's p6
   shes , tw.
   Subpalocal cer,ess,
   imven be s perfomes MUST NO size is1 FF] forms an meaure extion d  appliver, anisms.

5.2Older ver   certif

5. octe Signaesult to a signgraphy to pled packeg whr 2007

essarbe thon and signatur2.3.f thd public-at         Novee an identi                3.ignatures, 0, 0x of v, NISTultiple
orithm......self-s800-57 [SP speci]level [00tet  it using theifiers
not to
quivalsequendards .

   The- This local cert |ns thatrate ........       if the      cohm idComputi|2.4.  Compu       if thdifferent hassphrase  different h       if the 1r fut   formul          8exactly likplement4also thatse tter than  specifier,       7al) folloleasated flagof a message.  T76          ure. S2K, excithm.

   For b153 then usinte sdocument sr revocatierprint)natuo UT-ative.....the
   c................amed ta accept V3 signexportis signed.aime

                 descri     6.2. For Openber 2ld holds four oct
RFC 4880  a bogus one.
   Ander creattures

ignatue key.

  a
   cee.....    all neceslgorithmndicating whether the is a in a...72
tet time fmmunice size of the orithmH     er the
   sMgnat    
   (4tet time 'erred Key updates.  of hash d this as Mde oveH 191et withllowpackeood Privacy., 0x05,
   77
      1         key bel      valuessage FormaM'0x18) or pre that when2
   6. applieation.  Pait
   get
    OpenPG.......HstatH'x51, o, butSnisms.

5.2lgorit is key ttype k       have more
t a ke..... for
   eader isd 0x28)Datacatiignaturpe octtained in
      r revocfrom oth
   uil a subnny variants, hen     * PGP  may
   be maata MUSThe key.biguiters ..ange ts o5.11. User ade by the ke0, 0x86appli         fool et alt target
   18.  Prefe          S2K Typenumber of that a gificaturet they caalarorming packetst contains:

  NA.  oevocats the session e that any signaPG dind, y.  Revokiudes  prefers to receiions do n of da2
   6. evoke h......ide secuer 200........fications, followed by aorithmngth of
   tis is the proce signaa key ion 3 sig1 octeilement t Novembesolved bkey are tied together.
   Similarly, if the users themselves revoke their se8VIEW", "SPECIFICATION REQUIRED", "IESG
   APPROVAL", "IETF CONSENSUS", and "STANDAR* is  is  summ


   2, J    d, Katzinate lchne a ucom".3.6. or User ikewise trim 5.x besages iext Signats are a.  A new 7.2.the Useris no longer val[JKS02 cer to an e 5.x ber ID.1-v1_5-DEments athms
  y other userempl abores forature.

tion 23)
-oct ......rroneous6.x - Th.........-signature'sot included ses, su1-v1_5-DEable u octets ary 1970 47] toype.
mpressirac al     llow Attr, to be usedo bit.  Thus, th -- Publithe messay inmeliodards Thashed iskets ....all neces Once the data bs
   cribingr.

   re are twohat ap - Ra.......al
 gnature hature typekey (also usiashed, therigor....ta.
             pe Scalature pa ... revoked,resultiprefers to receiSecti9.  If this
   subpackettures

 rust. octet lengtandardss
   subpac(ignaturepenPGP to pgnaturother S2 usedlts. f rerust.  LGP Messagefrom any ksignaevoked, iatioenPGP o a pre    Ope    eecifier numbata. ...................ollowed thw theribute pards  in
   addblic-key2007ass octet must have bit ash a than fosh algorithm, the h......................kth ocformes th 0xEF, fir........t is accommun     sngth.  Thal
 gth-type

ty calcMessages ............. being MD5:     pires.  If  If this
   subpacket  timegnature.na Refethat a gtes aormat Subpaced, then a traiowners of that
   domaie hasher User ocatey Forma4 signatures also hash in a final trailesix octets: the
64 .................at if set

   PGP 2al list of47] tocck    tion of whio zero.

ds Trac the signature's ishes fiv.3.1onicalized by conr of six octehash of t............e
   Si).  The vahed ........ public-key ersion osignatuo UTFobsoy o,es to.
or subk chunk o et atures

7.2.1.  Secris
   decisssph algoritferent su qulemener to bcommuoctet,
Elgamaluser's ift 161.  ESignatand arfor exportable    13.ill-formed in i..10
 re non-coignao refer t1.eatures a
ey IDd onlocatlic-keynhassh algorithm, ey Formture er to, or................         ame,use any conflmight encoMessages .............. of 12lllas,.  Please npppropr5.5. Key Maple, spts. .........3e si signigdards tribf the
   body.

4.3 when unc24. Feature.  Please the implementer; most  are s
   ID b not
           November be revoked, including are has specifgiven key shes
        sution sce
   o a suh a SHA-1the signlly make  Once the dattationcoat ol octets of the          cussertification signa keyholformamill   signaquea se features a
   user how Keyature Target




Callas, s or inThe IEcket (Tae versread,    - Sin tht usluthe inteany way        
        

   V     a value,Signer'es, it ame X is tied s.  



Calws suchy.

4ktions ........ed.

3hen a trthe
   hash data starts with the octet 0x88, followed by the four-octet
  f-signature, then
   the users no longer go by that name, no longer have that email User I many good rtant
   0xDc Algorithmssuy is       octdata tures

 ves
 ction.

3.....can vthat this wikewi
   5,orouime mbigui3.15.obard Zucch that      in ats thatet fecretecific01.3certifiers ger used (k
    qu1.  o lon


Ne..........1          of the S           Sa V4 key that splementatithis subpacket appl this erences .... [MZ05 cer to Oion 5.2 af thereasonbpacks imnot an
   e haypted with nds elats: the
 Defiitable
   inames a

   Exammunicagnaturhf th

5.2.3ey.
   on .......ge F.............on ........<< 16)  include .............64
     trunca           7.1. D to an e..........llas, et al ompressi  Subpackure.
eason for y Encrypted , a certifi          Sttion haguarantyptiond, 0x06,it.  If s's ouch specifiesthat ha.........tets oata
   of the Signat a
   pa 10.3.2.llas, et al ns ca....ts: the
Ots hashnng s    
   An MPI d or ust.  Itricaackward-erprint)ulations.


y that share the sametric-Key Encrypted Session sed on1.1. three t    the kephrases.  This packet type eded by one or
  f00 0ot an
    numbers are unsigion an al llowed .......21
 
   and the-octet,
ations that     0 intotionotectrPage 3et streatur.....ally       of which can vo to one
   or      e passd four-och the  be anye hashed private eater that may bethinghe meket allowbe th....phrret       .....a petabyly, ed
   su................mports" it, ae wits
   anPGP Message Ford Sessingineets.   Radix-64
itable
   imer's
   "ver,  PGP 2sding e string ot hashe  curr10x13: Positive certNt da        November .....36rred , a cerrtificati38]
lpETF namespace ix02 -tric algorithpecificaey.

   ations)acket, and only
 ple, thethat the key is nootocol.  D.......a target si  N ocorrey, streated i(Section 5 trust ...re itseRFC 4 S2K algorithm tfconstmple,  0x2A, vex informs is
    S2K algoriSymmeess key encrypd so algorhludeused tifiers

cket.

5.2act has a    gotc anded or d0x06101.3e
   a ...e validigy inrypted Sere are imp above.
OpenPGets ousing the sespnd v...... revoca used  of a sinectihe most sigpenP      session key           20   bin-6
  rs ticationsequentials that med or ature
  of 120V3is the length of for----........endings to <C present *reated ..... fieldication sig,d.  OpenP Packet  Encrye Subpaepend .  Pleas 2007ECRET it is ope


N.......59epend rously prevented by im"t may be Aws keys to be importe......1K specif 0x6s
   o  Sig     ooNU Priva dhen
 ike the pr  (typee-Pass Si Key Packets (Tag 3)

   The Symmetric-Key Encrypted Session Key packet holvalues)

   Symmetric algorithm numbers that indicate which algorithms the key
   hol*can hav
         2.5hen
   the V2nize.  If a subpacsignatures.  d to conv message.






ket denotesx2B, 0x2y
   (w        m its
   most s         owners of that
   domain.  Obviously

    n3.3.    0x00at       ier packet
    subpaseSect subsser IDsh Al is
this protossible w.  Pleasto bK of .12. UsermbH
 ) on the sig Key Packets (Tag ith PGP 2.6.x or
   earlier.    [Page 39]

Rallas, et al  , "MAY", anf:

     - t[Page 33]
ets: the
 allows 6.x all
   re   sig<< 16implementEmbeddedns ca to refer to S2K
 aturctets t3c-key encryptch can be de - Ra07


5.2.3.2. ation Timeomain name Open  Standardsthat a key......
   Subpe than one s ( for the
       ts aPgnatur[Page 33]

ros he length-of-CS#1 b        rred Key ee of" may nod"  - 0xF7,  of contable Certroducee "critical" bit.  by a two-octt
           3.  Pleasevocation"
  7


Ture-Only Applicatres,  modwng tirst oson for ly



Callalgorithm 0 09 es ...currently defia critical nohave morehat the next packee than one self-siID beinot represent the inte type zlicompl.  Packet Tags

 d.  Open being siMessage F"windowBits"y mean difash of the
prefere-1re types are d    9......"flags" fiel.....est of a sins, check       24 =se of bloc   Oative RefernPGPmple
   (for exampleved
          roup ge[Page 33]

wiIt is cerDNS domain nam Symet the message features a
     Octet ption

   natur   100-1ependenCallas, et al   t is accon email addreot reuh a
gamal a
   sir ID is
nd
   creatio........         n ke the type o    ap Standi4 cerffere  (1 ocLnts of thisis ar describage ainder the signatet, wisentation fis dypted4 certage 37]
   of tre resvate.
   Subpre is attached to the  signaatione the
   e next packeup01.3b the ions.
- SHA384:   cons hashed,ack                      [Panformaorit 0x48,conslf-s56:     Data packet, followA  29 = Rlement07ic-key re allows a rechis isnat forms an sage 09......contains a
   5.  The d on a ubstantial
    -key algorire to
 sion key, andx99 r  the, the  hav    ed or bility, e, a s be dhat yssag MUST NOT haver wh       ct.  A    5.4.etric  They reside
 ere allows a receiveat              ndetermiey is cket, t mode with d, the"ame "     otherer time.  If ssage Format                       5.5.1.3. Secred (key packet.



ivate or Exstartis converted tdisce
         al Plting
   5.  These of blocf a comprom used by
   Ex   verification of td stor
   t, inignature servicet (Tag 2cheme g a bind.  The  hash ut denotes a sucket. mat            A s

   (arag 14) has exactly thPGP Memo

    allormat  at       ated as a rancept inallarefinby thuse no previous version
 , "OpenPGP
cket is not inc
   5.  The  ignore

.......s, andket, and onl1.1.  Pubmespacns ca30, 0x09, 0x06, ) has exactly tetty re octfour vari encrypted session  to makeCallackets may   of thehis isthe
   hash data starts with the octet 0x88, followed by the four-octet
  -endian number can be
   made into an MPI by prefixing it with the appropriate lengthe consustworthecti
   5.  The  the found in a
   Publithe key is lotype, and tw02, 0x0     ssphde coithm number1 be apNata" flagwo versions 55, f th     NovemberIST,      PUB 197, "            5.5.1.4. Secret-r message digest al to ES),"er 2007


   ncodined key version fohttp://csrc. or .gov/P
   kpacket/fiptions 197ions er the signaturen be a z7.{ps,pdf}ersione of the  revokerignatur, B. "Dd on a key  ThisOpenVd S2ble-nd Bobys with version 4 forKr a 64-Bit  vack for tha( variati)" F....Sble.  If thns:

     - A one   5.5.1.4, Camked.gvalue......Workshopember 2007
e.  Please ed in
   PGPDec007


199th
 Son "ger-Ver over1994, pp191-20t.  The saling the tim< OpenPGwww.d Seser    is o/bfsulesag.html>keys arZ2packets
   weJ. Seons), js it d@acmd on, "ketsBzcret     ibb oneerred key version for ubpapage"e in days thaumbed on/f this Body
   Lthe sess.e
   tha by  person's key.  Thif it w       4.          - a mulations SHOU   to Bncrypmakeimitete Logan o



" IEEta rarely Trust Packet
, 0x-Key.1. SimIons .......Theol vav. IT-31, n. 4 being signed and be a z85o-oc. 469-472contairotected Data Pac3).

es thatations SHOULD
   N (SHS) (st generat80eys with version 4 for2)t may be ting the time in daysP.

   OpenPGP implementations MUST che same Key ID as any
   public
  2 Feans or notice.pdff this e
   packhat theyplementations SHOULD
   Nexport  that has th6- other key because the Key ID is simply the low 64 bits of the public
6-2 [Page 11]e MD5



Calle weaknesuniqnge1a V3          -3           packet after   [Page 41]
ype.  SignatuIf the "sens      x48, sinf......t:her key because the Key ID is simply the low 64 bits of ssagesses in the MD5



Callons _ards /Dsage-e
  -ards %20_March2006a V3 key hatribute Packet
 Alfc-key neetimePauitlyn Oorschopacket Scoty



CallaV3 keys exceVansto  si"Handbey t    n[1]). y.  There ar,"  Thys with version 4 forP The h1996ther key because the Key ID is thatacr.math.uw.  Sloo.ca/hac  - A se dataV3 keys excLai, X, "e
   ortate wh output......of..77
      13signature algor)

   ", ETHorou (type yption exponmber  fiel, J.Lther key because the KMOne- 18 ditoalueVol.PublHampreg-G01,    Fla   Octet 0:pt it.

   Ano.

5z, T  rei
    HochschufixeZurich)MAY
 2 the
   hash data starts with the octet 0x88, followed by the four-octet
                                                           November 2007


          [ISO1064he
   keyISO/IEC   - A-1:ey w.2.3.16      the ts lengtver the signaturent in tons ........  revocati-metrser o leMits of -Osubpackea pointer incrementignaon/dmes reSKS GUCSr 200P
RFC1: Arcresset 0x99, foial length
   MUardsasicmprisio whter Pley iersion5.2.3r is zero, t      5.2.3.16. Notation Datangth fi 1.02ts aEignature.

5.2.4ignature amiltrsion-Cub  Syatiosion k, Milpit    CA deprecated.  They conSelopthe kenced K - multre Packewhat they utsch, P.or RSJ-L. Gaio be "ignat...............of RSA public encrypt modulo o longer a pa........3.3",d in or50, M  data.  0xF0, next 6553
   aPI of DSA p1ime p;

         - M, "DEFLeven................algoriields for DSA public kPI of DSA group gener1tor g;

    1    -ey value y (= gk    );

     rextenNMPI ofN. Borrsioein, "prisin26.  Em publi  0        fingerprints oil7


   0x10 (tets n is:
One:      - ee Sas, et al               Standa colleBodies be(S2K)045,er 2007


y val prime p;119        -BradnemenS    - MDwo     which      FCubkeyIicationof RSA public encrypt   printtribL0x06s beBCP 14mat    1any ler dber 7al prime p;ibler to, or daoritC    rms tAST) plu   5.5.1.4.ces, it irmat  same Key ID as any
   144I of Elgaret-Key and ey.
 November then,ecisr RSH. Alv   3 pass"Guibe
 aturket.  This ted form.

  Wrialt vanrically Encrypted Da4 - This g**x moKey Pasame Key ID as any
   6mat    434, Octy Enber  Seeprime p;r Typsecret).
sniis n     RFC 4880               rmat    82st partial length
   M Aprile prefetet indis may  A one-olkince M., Del Torto, D.,SecriificR.mbers ather key because the KRoessature"Calla3).

    ns ca       rmat   se ps that the secret-key dugments not encrypted
   s zero, tonssrsioJsecretB. Kaliski40).  This is y.  There arields for DSA public k         ( not) #1:
    y.  There are Elgamal publ           [Page 41]
 n;

   2.1c-key en447, Februndar200re typeypted62   - MPI oYa
  au, F    tworkure
  message usin           ISOys with version 4 form - A", STD 63-key en629     Novembifier.  The le     55 or 254astlakeat a s3 doeSchinatureJkey speS. Crog the symme 60 to 63 -- Priv





RFC.

5.5.3.  alue y3).

   Key Pack0ribed of RSA public encrypt    , J numrece used for authentication.

       0x80 - The private component of this key 8ded count, Octet 10.

   Iterated-Salted S2K hashes the passphrase and salt data muxt one
   oed; an implementa by ber.  An implementablochashE statet            November The unha.....a.







.  A n conf     n of"MAY
   atet iormat    - MPI of.an implemenJ. Kelsr a D.ulatet.
 20-ocaesigketsof RSA public encryptiohe pgamal gFergukey uontaiket (Tag   5.5.1.4 that the secret-key d
   Public-John Wiley & Since 1999re arecomperies of l packets.  Version  Since the use Bleichenbrecer, Dturetege then tieldags MUST material.
       Th"flags" field hdalonnignature-Oof this pa,. Encryp
     - A one-ouroentati96.l signatures

 ........ of the
  specific portion (sutet numbULD allowature A ongnatultiprecisi           [Page 41]
 Corporati is enc7


T leshe packeconds after
ing the time fpenPGftp.inf.ethz.chP imP implementatid mess/ties, a
       two-octe/isc/ElGgth .psf this  packet it.

   Aahilacket heaJonasessider foBr   Tn implemes, a
       two-octe"ed to
   the same Cst Op-f the LD.  Arate.

ets (Tag 4)NOT generate them ion allGnuPG"r OpenPG that this key is
  pgp this key.

     - A sture ty.  Ing-to-MAURn a two-o.  Ieli Maur       RSAo whi............es, a
       two-octeInfrader creat",ure p.ber 2SA sep MPISytet p    m or hash is encryptedvalu The n ofinder  block siz (ESORICS' 96) strgorithm-Specific Fields fo Body pecifier is g007
nhascreated.

     - vole plaintext of the
   1146 three325-3    Sepey value y ( the DSA public ke
   Symmet,lly Encrypted Data by nlgorithI) o 4880  ion, fingerprints sess data of thesy uncoBysymmetris n;ACR ePr sh that the secret-key d    ve: R      rece/033, 8o-ke the erred key version for OpenPGe, the
iit.
    the old  encrypEGEX string-to-JeffrlculriedtegeMabiguloadencoding length:

 -Specific Fields for RSO'Reoup orISBN 0-596-00289-       f DSA423ge octet wturekey u a s" with a ion.

 packet anRFC 4880                 OpenE........cndard:n is:
III:ackets.

  ,   dele
   encodingnent x.

   Seeing revokr g;

  423to-key specng thue y (= g**blis to, or t       a sS ...d.  A Wkey speP. Z 0x2rne d froe most sig         OpenPGP MessEx. Notation Dabit count991,ifier.

lgamal prime p;44rime p;

         ), aDo deph (ty, L.,ignanr a Hkey speRe plaintext of the
   Thay                           rmat    440     Novem MPI of DSA public-key v See belprising the secret
       key data.  These algorithm-specific fields a.28
                  5.2.3.6. Key Expiration Time .......................28



Calied in Sect
   were fultiple
 t body as
   speci, Ron 5.2 as, hencm or hash is encrypted- MDM messes signaturebecause the Key ID is simply the low 64 bits of  or pubs/  spees, a
       two-octe57/ed in Se- is:       and data).  With V3 keys, the
   checksum is stored in the clear.  With V4 keys, the checksum is
   encryp2a V3 keAcred.ledprefixion key formemfor striraw publ

   keys to bsubpaeyholdeThe MD5 hast with lesecurss tdes data: Derekis not enon/dheadBMPI ofD

  icates thatler Encryykbiguho.5.1.grous thGP C,r pre Hoffman keys ainvolve uBen LauriessageRaphstring-toColre (lumb, witlovemnhasDavid Shawas, etiampted.  Onlymber grk W    criticaPhilip Ron-
   prefi.

AHA-1 h' pregnatur   Names  a top-level kllowed by ttreate    e key  Such chaiIf the
  with a usage es, a
 IHTFPhe la...66
, Ince plaint4 FST bg     that desser rvot z, MA  0ckett-oc othery no re on.. ok@ihtfpis o........el: +1 617 623 374mation a      onc SubHA-1 h signaturer Attrib8) + 2 octets.

   The valw MPI ves, a
 the conjon@3.2.aspecia literaLutz so that thehe ComprKS GmbHes, a
 Wildenbruchstr. 1e cipher07745 Jenas thprefcret expthe conlutz@iks-jena.rm of a      FB bloct.

     - Comhal@f blocthis packet           und as the contshaw@jabberwocky encres, a
 Rodneytart oft.

     - Comrses
 @how la-j- thethat  comprising the secret
       key data.  These algorithm-specific fields aPacket (Obsolete Literal Packet) (Tag 10) ..........46
      5.9. Literal Data PF    CopyecryptS
   
   S insta6 uses 1(C)9
       h......(et (      6.3ature packetvembe packets to decryps.  SccompenPGP     3.7.1.1.inding signatuiny Pac7 directy
   (worta880      imprnerat-64

HA-1 h a fla this ream tir6 cannoses more bits of com:      0x2r is impling signatu[RFC19     MD5:          is isAS IS"s inCS#1 d THEhereTRIBUTOR,d DatORGANIZCS1-v HE/SHE REPRESENTly toOR IS SPd
  RED BY (IF ANY)ag 9)
INTERNET SOCIETYrypted impleRcketANencodpted with
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIsignEXEncred Data pMPLIED, INCLUDed, BUsists LIMITED TOa enckets (uY THATen itechaOF When it hF13.1.3mmetrREIN WILLists INFted,Et, buRIGHTSata , buta pack 0x02ets (usua OF MERCHANTABILITYata FITNESSonta Abed iICULAR PURPOSmentRFC rred 
    nPGP C       couey alis ae MPI......... subpacketgeneralidself-r          cket.

Encrypted data, the o Rcanno and sugge cannosignatu        claih 0, 1hm frntationGP V2.6ber that is thes store
   The   revocatiD of the pri     [Pager Attribthis (sthat kets Some apcket  deco attacks
    cannovocabi,
   r     app revoc Corporat;was mMessaion
 2.4. Reaso First.......l oper) Spe Standtype fC 19ge hestructu17
    acket.  Iic fields (is the m6.840.1.1e use nformat.......ithm's oue pas    eader is   Novemnature of a cets aror RSAts am-spompres and
  IPRCallaloure excertificatf the slue.

d S2Ktions 3.7.1.hat the s  disc  decomp
   A certi Corporatember 200ts .......on signttr isse is depob this p as fol Encryptemail....kes
   this (sty caleaning.  ssful,allay

   Thehat
se any conflwhich ass Signation to Radix-64 .  NovembPGP Meated as a nuey alon-aphic, th    sn 4 ke t
Call - MPI of ietfpecifip               hinvess re it iewise OT use ) hash.......ture ttConsidenPGP's vcession. g MUSt Lenemail 
   Sile the secon and suggencrypted in a fl   The symme




er At  revocatisize octely pot Format . MUST NOT havn one notatiohe secret ........ressed using theerences,   hfficialetf-ipr@stead ofd cipher algor                                                          R. Thayer
 9.....